/*
 * Copyright 2013 Boundary Devices
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;

#include "imx6q.dtsi"
#include "imx6qdl-nitrogen6_max.dtsi"

/ {
	model = "Freescale i.MX6 Quad Nitrogen6 Max st7789 Board";
	compatible = "fsl,imx6q-nitrogen6_max", "fsl,imx6q";
};

&iomuxc {
	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			MX6QDL_PAD_DISP0_DAT19__ECSPI2_SCLK	0x000b1
			MX6QDL_PAD_DISP0_DAT17__ECSPI2_MISO	0x100b1
#define GP_ECSPI2_DISPLAY_CS   <&gpio5 12 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_DISP0_DAT18__GPIO5_IO12	0x0b0b1
		>;
	};

	pinctrl_ecspi2_read: ecspi2_readgrp {
		fsl,pins = <
			MX6QDL_PAD_DISP0_DAT16__ECSPI2_MOSI	0x108b1		/* ODE, so that display can drive low */
		>;
	};

	pinctrl_ecspi2_write: ecspi2_writegrp {
		fsl,pins = <
			MX6QDL_PAD_DISP0_DAT16__ECSPI2_MOSI	0x100b1		/* Can write faster without ODE */
		>;
	};

	pinctrl_hog: hoggrp {
		fsl,pins = <
#define GP_HOG_TP71	<&gpio1 30 GPIO_ACTIVE_LOW>
			MX6QDL_PAD_ENET_TXD0__GPIO1_IO30	0x1b0b0
			MX6QDL_PAD_CSI0_DAT17__GPIO6_IO03	0x1b0b0
			MX6QDL_PAD_CSI0_DAT18__GPIO6_IO04	0x1b0b0
			MX6QDL_PAD_CSI0_DAT19__GPIO6_IO05	0x1b0b0
		>;
	};

	pinctrl_i2c3_ov5640: i2c3-ov5640grp {
		/* parallel camera on CSI1, pins differ for iMX6Q/iMX6DL */
		fsl,pins = <
			MX6QDL_PAD_EIM_A17__IPU2_CSI1_DATA12	0xb0b1
			MX6QDL_PAD_EIM_A18__IPU2_CSI1_DATA13	0xb0b1
			MX6QDL_PAD_EIM_A19__IPU2_CSI1_DATA14	0xb0b1
			MX6QDL_PAD_EIM_A20__IPU2_CSI1_DATA15	0xb0b1
			MX6QDL_PAD_EIM_A21__IPU2_CSI1_DATA16	0xb0b1
			MX6QDL_PAD_EIM_A22__IPU2_CSI1_DATA17	0xb0b1
			MX6QDL_PAD_EIM_A23__IPU2_CSI1_DATA18	0xb0b1
			MX6QDL_PAD_EIM_EB2__IPU2_CSI1_DATA19	0xb0b1
			MX6QDL_PAD_EIM_DA10__IPU2_CSI1_DATA_EN	0xb0b1
			MX6QDL_PAD_EIM_A16__IPU2_CSI1_PIXCLK	0xb0b1
			MX6QDL_PAD_EIM_DA11__IPU2_CSI1_HSYNC	0xb0b1
			MX6QDL_PAD_EIM_DA12__IPU2_CSI1_VSYNC	0xb0b1
		>;
	};

	pinctrl_st7789: st7789grp {
		fsl,pins = <
#define GPIRQ_ST7789_TEARING_EFFECT   <&gpio5 14 IRQ_TYPE_EDGE_RISING>
			MX6QDL_PAD_DISP0_DAT20__GPIO5_IO14	0x1b0b1
		>;
	};
};

&ecspi2 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = GP_ECSPI2_DISPLAY_CS;
	pinctrl-names = "default", "write", "read";
	pinctrl-0 = <&pinctrl_ecspi2>, <&pinctrl_ecspi2_write>;
	pinctrl-1 = <&pinctrl_ecspi2_write>;
	pinctrl-2 = <&pinctrl_ecspi2_read>;
	status = "okay";
#if 0
	dma-names = "", "";
#endif

	st7789h2@0{
		bpp = <16>;	/* 16 or 24 */
		buswidth = <9>;
		compatible = "sitronix,st7789v";
		display_fps = <40>;
		height = <204>;
#if 1
		interrupts-extended = GPIRQ_ST7789_TEARING_EFFECT;
#endif
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_st7789>;
		reg = <0>;
		regwidth = <8>;
		rotate = <0>;
		/* SCLK - write cycle 16 ns(62.5Mhz), read cycle 150 ns(6.6 MHz) */
		spi-max-frequency = <40000000>;
		spi-max-read-frequency = <6600000>;
		te-line = <320>;
		txbufcnt = <4>;
		txbuflen = <27648>;
		width = <240>;
	};
};

&hdmi_core {
	ipu_id = <1>;
};

&i2c2a {
	/delete-node/ ov5642@3c;
};

&lcd {
	status = "disabled";
};

&ov5640 {
	ipu_id = <1>;
};

&sata {
	status = "okay";
};

&v4l2_cap_2 {
	ipu_id = <1>;
};
