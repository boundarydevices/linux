// SPDX-License-Identifier: GPL-2.0
/*
 * AM625 Carbon SOM
 *
 * Copyright (C) 2024 Ezurio LLC
 */

/dts-v1/;

#include <dt-bindings/leds/common.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/net/ti-dp83867.h>
#include "k3-am625.dtsi"

/ {
	compatible = "ti,am625";
	model = "Ezurio Carbon AM625 SOM";

	aliases {
		serial2 = &main_uart0; /* CONSOLE */
		serial3 = &main_uart1; /* BT */
		serial4 = &main_uart6; /* UART_A */
		serial5 = &mcu_uart0;  /* UART_B */
		serial6 = &main_uart4; /* UART_D */
		mmc0 = &sdhci0;
		mmc1 = &sdhci1;
		mmc2 = &sdhci2;
		spi0 = &ospi0;
		spi1 = &main_spi0;
		ethernet0 = &cpsw_port1;
		ethernet1 = &cpsw_port2;
		usb0 = &usb0;
		usb1 = &usb1;
	};

	chosen {
		stdout-path = "serial2:115200n8";
	};

	opp-table {
		/* Add 1.4GHz OPP for am625-carbon board. Requires VDD_CORE to be at 0.85V */
		opp-1400000000 {
			opp-hz = /bits/ 64 <1400000000>;
			opp-supported-hw = <0x01 0x0004>;
			clock-latency-ns = <6000000>;
		};
	};

	memory@80000000 {
		bootph-pre-ram;
		device_type = "memory";
		/* 2G RAM */
		reg = <0x00000000 0x80000000 0x00000000 0x80000000>;
	};

	reserved-memory {
		#address-cells = <2>;
		#size-cells = <2>;
		ranges;

		ramoops@9c700000 {
			compatible = "ramoops";
			reg = <0x00 0x9c700000 0x00 0x00100000>;
			record-size = <0x8000>;
			console-size = <0x8000>;
			ftrace-size = <0x00>;
			pmsg-size = <0x8000>;
		};

		rtos_ipc_memory_region: ipc-memories@9c800000 {
			compatible = "shared-dma-pool";
			reg = <0x00 0x9c800000 0x00 0x00300000>;
			no-map;
		};

		mcu_m4fss_dma_memory_region: m4f-dma-memory@9cb00000 {
			compatible = "shared-dma-pool";
			reg = <0x00 0x9cb00000 0x00 0x100000>;
			no-map;
		};

		mcu_m4fss_memory_region: m4f-memory@9cc00000 {
			compatible = "shared-dma-pool";
			reg = <0x00 0x9cc00000 0x00 0xe00000>;
			no-map;
		};

		/* global cma region */
		linux,cma {
			compatible = "shared-dma-pool";
			reusable;
			size = <0x00 0x8000000>; /* 0x8000000 = 128MiB */
			linux,cma-default;
		};

		secure_tfa_ddr: tfa@9e780000 {
			reg = <0x00 0x9e780000 0x00 0x80000>;
			alignment = <0x1000>;
			no-map;
		};

		secure_ddr: optee@9e800000 {
			reg = <0x00 0x9e800000 0x00 0x01800000>; /* for OP-TEE */
			alignment = <0x1000>;
			no-map;
		};

		wkup_r5fss0_core0_dma_memory_region: r5f-dma-memory@9db00000 {
			compatible = "shared-dma-pool";
			reg = <0x00 0x9db00000 0x00 0xc00000>;
			no-map;
		};
	};

	cam_mck: cam-mck {
		compatible = "pwm-clock";
		status = "disabled";
		#clock-cells = <0>;
		clock-frequency = <24000000>;
		clock-output-names = "cam_mck";
                pwms = <&ecap2 0 42 0>; /* 1 / 42 ns = 24 MHz */
	};

	vsys_5v: regulator-vcc-in-5v {
		/* VCC_IN_5V */
		bootph-all;
		compatible = "regulator-fixed";
		regulator-name = "vsys_5v";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vcc_3v3_sys: regulator-u4 {
		/* output of U4 */
		bootph-all;
		compatible = "regulator-fixed";
		regulator-name = "vcc_3v3_sys";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		regulator-boot-on;
	};

	vcc_1v8_sys: regulator-u3-b2 {
		/* output of U3 Buck 2 */
		bootph-all;
		compatible = "regulator-fixed";
		regulator-name = "vcc_1v8_sys";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
		regulator-boot-on;
	};

	wifi_pwrseq: wifi-pwrseq {
		compatible = "mmc-pwrseq-simple";
		pinctrl-names = "default";
		pinctrl-0 = <&main_wifi_en_default>;
		reset-gpios = <&main_gpio0 20 GPIO_ACTIVE_LOW>; /* W_DISABLE# */
		post-power-on-delay-ms = <100>;
		status = "okay";
	};

	vdd_sd: regulator-u3-ldo1 {
		/* Output of U3 TPS6521920WRHBRQ1 VLDO1 */
		bootph-all;
		compatible = "regulator-gpio";
		regulator-name = "vdd_sd_u3_vldo1";
		pinctrl-names = "default";
		pinctrl-0 = <&vdd_sd_pins_default>;
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <3300000>;
		regulator-boot-on;
		gpios = <&main_gpio0 31 GPIO_ACTIVE_HIGH>;
		states = <1800000 0x0>,
			 <3300000 0x1>;
	};
};

&cpsw3g {
	bootph-all;
	pinctrl-names = "default";
	pinctrl-0 = <&main_rgmii1_pins_default
		     &main_rgmii2_pins_default>;

	cpts@3d000 {
		/* MAP HW3_TS_PUSH to GENF1 */
		ti,pps = <2 1>;
	};
};

&cpsw3g_mdio {
	bootph-all;
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_mdio1_pins_default>;
};

&cpsw_port1 {
	bootph-all;
	phy-mode = "rgmii-rxid";
	phy-handle = <&cpsw3g_phy0>;
};

&cpsw_port2 {
	bootph-all;
	phy-mode = "rgmii-rxid";
	phy-handle = <&cpsw3g_phy1>;
};

&epwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&main_epwm1_pins_default>;
	status = "disabled";
};

&ecap2 {
	/* ECAP in APWM mode */
	pinctrl-names = "default";
	pinctrl-0 = <&main_ecap2_pins_default>;
	status = "okay";
};

&fss {
	bootph-all;
};

&mailbox0_cluster0 {
	mbox_m4_0: mbox-m4-0 {
		ti,mbox-rx = <0 0 0>;
		ti,mbox-tx = <1 0 0>;
	};
};

&main_gpio0 {
	bootph-all;
	gpio-line-names = "","GPIO_A_2","GPIO_A_1","","", 	/* 0 - 4 */
		"","","","","",
		"","","","","",					/* 10 - 14 */
		"","","GPIO_B_7","SDIO_A_PWR_EN","GPIO_C_2",
		"W_DISABLE#","","W_DISABLE2#","","",		/* 20 - 24 */
		"GPIO_C_3","GPIO_C_6","","","GPIO_C_7",
		"GPIO_B_6","SDIO_A_IOPWR","","RGB_RESET#","",	/* 30 - 34 */
		"","GPIO_B_3","GPIO_A_0","GPIO_B_2","GPIO_C_0",
		"","GPIO_C_1","","","",				/* 40 - 44 */
		"","","","","",
		"","","","","",					/* 50 - 54 */
		"","","","","",
		"","","","","",					/* 60 - 64 */
		"","","","","",
		"","","","","",					/* 60 - 74 */
		"","","","","",
		"","","","","",					/* 80 - 84 */
		"","","","","",
		"","";						/* 90 - 91 */
};

&main_gpio1 {
	bootph-all;
	gpio-line-names = "","","","","",			/* 0 - 4 */
		"","","","","",
		"","","GPIO_A_3","","",				/* 10 - 14 */
		"","","","","",
		"","","","","",					/* 20 - 24 */
		"","","","","",
		"","","","","",					/* 30 - 34 */
		"","","","","",
		"","","","","",					/* 40 - 44 */
		"","","","SDIO_A_CD#","",
		"","";						/* 50 - 51 */
};

&main_gpio_intr {
	status = "okay";
};

&main_i2c0 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c0_pins_default>;
	clock-frequency = <400000>;

	rv3028: rtc@52 {
		backup-switchover-dsm;
		#clock-cells = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&mcu_rtc_pins_default>;
		compatible = "microcrystal,rv3028";
		reg = <0x52>;
		// interrupts-extended = <&mcu_gpio0 23 GPIO_ACTIVE_LOW>;
		// wakeup-source;
	};

	tps65219: pmic@30 {
		compatible = "ti,tps65219";
		reg = <0x30>;
		buck1-supply = <&vsys_5v>;
		buck2-supply = <&vsys_5v>;
		buck3-supply = <&vsys_5v>;
		ldo1-supply = <&vcc_3v3_sys>;
		ldo2-supply = <&buck2_reg>;
		ldo3-supply = <&vcc_3v3_sys>;
		ldo4-supply = <&vcc_3v3_sys>;

		pinctrl-names = "default";
		pinctrl-0 = <&pmic_irq_pins_default>;

		interrupt-parent = <&gic500>;
		interrupts = <GIC_SPI 224 IRQ_TYPE_LEVEL_HIGH>;

		system-power-controller;
		ti,power-button;

		regulators {
			buck1_reg: buck1 {
				regulator-name = "VDD_CORE";
				regulator-min-microvolt = <750000>;
				regulator-max-microvolt = <750000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck2_reg: buck2 {
				regulator-name = "VDD1V8";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck3_reg: buck3 {
				regulator-name = "VDD_1V1";
				regulator-min-microvolt = <1100000>;
				regulator-max-microvolt = <1100000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1_reg: ldo1 {
				/*
				 * Regulator is left as is unused, vdd_sd
				 * is controlled via GPIO with bypass config
				 * as per the NVM configuration
				 */
				regulator-name = "VDD_SD";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-allow-bypass;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2_reg: ldo2 {
				regulator-name = "VDDA_0V85";
				regulator-min-microvolt = <850000>;
				regulator-max-microvolt = <850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3_reg: regulator-u3-ldo3 {
				regulator-name = "VDDA_1V8";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4_reg: ldo4 {
				regulator-name = "VDD_1V2";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};
};

&main_i2c1 { /* I2C_A */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c1_pins_default>;
	clock-frequency = <100000>;
	bootph-all;
};

&main_i2c2 { /* I2C_B */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c2_pins_default>;
	clock-frequency = <400000>;
};

&main_i2c3 { /* I2C_CAM */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_i2c3_pins_default>;
	clock-frequency = <400000>;
};

&main_mcan0 { /* CAN_A */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_mcan0_pins_default>;
};

&main_pmx0 {
	mypruicssm0ecap1_pins_default: mypruicssm0ecap1-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x00a4, PIN_INPUT, 1) /* PWM_0 (M22) GPMC0_DIR.PR0_ECAP0_IN_APWM_OUT */
		>;
	};

	main_bt_gpio_pins_default: main-bt-gpio-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0084, PIN_INPUT, 7) /* BT_HOST_WAKE (L23) GPMC0_ADVn_ALE.GPIO0_32 */
			AM62X_IOPAD(0x0058, PIN_OUTPUT, 7) /* W_DISABLE2# (R23) GPMC0_AD7.GPIO0_22 */
		>;
	};

	main_ecap2_pins_default: main-ecap2-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x01a4, PIN_OUTPUT, 2) /* CAM_MCK (B20) MCASP0_ACLKX.ECAP2_IN_APWM_OUT */
		>;
	};

	main_epwm1_pins_default: main-epwm1-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x019c, PIN_OUTPUT, 6) /* PWM_1 (B18) MCASP0_AXR1.EHRPWM1_A */
			AM62X_IOPAD(0x01a0, PIN_OUTPUT, 6) /* PWM_2 (E18) MCASP0_AXR0.EHRPWM1_B */
		>;
	};

	main_i2c0_pins_default: main-i2c0-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x1e0, PIN_INPUT_PULLUP, 0) /* (B16) I2C0_SCL */
			AM62X_IOPAD(0x1e4, PIN_INPUT_PULLUP, 0) /* (A16) I2C0_SDA */
		>;
	};

	main_i2c1_pins_default: main-i2c1-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x1e8, PIN_INPUT_PULLUP, 0) /* (B17) I2C1_SCL */
			AM62X_IOPAD(0x1ec, PIN_INPUT_PULLUP, 0) /* (A17) I2C1_SDA */
		>;
	};

	main_i2c2_pins_default: main-i2c2-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0b0, PIN_INPUT_PULLUP, 1) /* (K22) GPMC0_CSn2.I2C2_SCL */
			AM62X_IOPAD(0x0b4, PIN_INPUT_PULLUP, 1) /* (K24) GPMC0_CSn3.I2C2_SDA */
		>;
	};

	main_i2c3_pins_default: main-i2c3-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x01d0, PIN_INPUT_PULLUP, 2) /* (A15) UART0_CTSn.I2C3_SCL */
			AM62X_IOPAD(0x01d4, PIN_INPUT_PULLUP, 2) /* (B15) UART0_RTSn.I2C3_SDA */
		>;
	};

	main_mmc0_pins_default: main-mmc0-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x220, PIN_INPUT, 0) /* (Y3) MMC0_CMD */
			AM62X_IOPAD(0x218, PIN_INPUT, 0) /* (AB1) MMC0_CLK */
			AM62X_IOPAD(0x214, PIN_INPUT, 0) /* (AA2) MMC0_DAT0 */
			AM62X_IOPAD(0x210, PIN_INPUT, 0) /* (AA1) MMC0_DAT1 */
			AM62X_IOPAD(0x20c, PIN_INPUT, 0) /* (AA3) MMC0_DAT2 */
			AM62X_IOPAD(0x208, PIN_INPUT, 0) /* (Y4) MMC0_DAT3 */
			AM62X_IOPAD(0x204, PIN_INPUT, 0) /* (AB2) MMC0_DAT4 */
			AM62X_IOPAD(0x200, PIN_INPUT, 0) /* (AC1) MMC0_DAT5 */
			AM62X_IOPAD(0x1fc, PIN_INPUT, 0) /* (AD2) MMC0_DAT6 */
			AM62X_IOPAD(0x1f8, PIN_INPUT, 0) /* (AC2) MMC0_DAT7 */
		>;
	};

	main_mmc1_pins_default: main-mmc1-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x23c, PIN_INPUT, 0) /* SDIO_A_CMD (A21) MMC1_CMD */
			AM62X_IOPAD(0x234, PIN_INPUT, 0) /* SDIO_A_CLK (B22) MMC1_CLK */
			AM62X_IOPAD(0x230, PIN_INPUT, 0) /* SDIO_A_D0 (A22) MMC1_DAT0 */
			AM62X_IOPAD(0x22c, PIN_INPUT, 0) /* SDIO_A_D1 (B21) MMC1_DAT1 */
			AM62X_IOPAD(0x228, PIN_INPUT, 0) /* SDIO_A_D2 (C21) MMC1_DAT2 */
			AM62X_IOPAD(0x224, PIN_INPUT, 0) /* SDIO_A_D3 (D22) MMC1_DAT3 */
			AM62X_IOPAD(0x240, PIN_INPUT, 0) /* SDIO_A_CD# (D17) MMC1_SDCD */
			AM62X_IOPAD(0x244, PIN_INPUT, 0) /* SDIO_A_WP (C17) MMC1_SDWP */
		>;
	};

	main_mmc2_pins_default: main-mmc2-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0120, PIN_INPUT, 0) /* (C24) MMC2_CMD */
			AM62X_IOPAD(0x0118, PIN_OUTPUT, 0) /* (D25) MMC2_CLK */
			AM62X_IOPAD(0x0114, PIN_INPUT, 0) /* (B24) MMC2_DAT0 */
			AM62X_IOPAD(0x0110, PIN_INPUT, 0) /* (C25) MMC2_DAT1 */
			AM62X_IOPAD(0x010c, PIN_INPUT, 0) /* (E23) MMC2_DAT2 */
			AM62X_IOPAD(0x0108, PIN_INPUT, 0) /* (D24) MMC2_DAT3 */
			AM62X_IOPAD(0x11c, PIN_INPUT, 0) /* (#N/A) MMC2_CLKB */
		>;
	};

	main_mdio1_pins_default: main-mdio1-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x160, PIN_OUTPUT, 0) /* (AD24) MDIO0_MDC */
			AM62X_IOPAD(0x15c, PIN_INPUT, 0) /* (AB22) MDIO0_MDIO */
		>;
	};

	main_rgmii1_pins_default: main-rgmii1-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x14c, PIN_INPUT, 0) /* (AB17) RGMII1_RD0 */
			AM62X_IOPAD(0x150, PIN_INPUT, 0) /* (AC17) RGMII1_RD1 */
			AM62X_IOPAD(0x154, PIN_INPUT, 0) /* (AB16) RGMII1_RD2 */
			AM62X_IOPAD(0x158, PIN_INPUT, 0) /* (AA15) RGMII1_RD3 */
			AM62X_IOPAD(0x148, PIN_INPUT, 0) /* (AD17) RGMII1_RXC */
			AM62X_IOPAD(0x144, PIN_INPUT, 0) /* (AE17) RGMII1_RX_CTL */
			AM62X_IOPAD(0x134, PIN_OUTPUT, 0) /* (AE20) RGMII1_TD0 */
			AM62X_IOPAD(0x138, PIN_OUTPUT, 0) /* (AD20) RGMII1_TD1 */
			AM62X_IOPAD(0x13c, PIN_OUTPUT, 0) /* (AE18) RGMII1_TD2 */
			AM62X_IOPAD(0x140, PIN_OUTPUT, 0) /* (AD18) RGMII1_TD3 */
			AM62X_IOPAD(0x130, PIN_OUTPUT, 0) /* (AE19) RGMII1_TXC */
			AM62X_IOPAD(0x12c, PIN_OUTPUT, 0) /* (AD19) RGMII1_TX_CTL */
		>;
	};

	main_rgmii2_pins_default: main-rgmii2-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x184, PIN_INPUT, 0) /* (AE23) RGMII2_RD0 */
			AM62X_IOPAD(0x188, PIN_INPUT, 0) /* (AB20) RGMII2_RD1 */
			AM62X_IOPAD(0x18c, PIN_INPUT, 0) /* (AC21) RGMII2_RD2 */
			AM62X_IOPAD(0x190, PIN_INPUT, 0) /* (AE22) RGMII2_RD3 */
			AM62X_IOPAD(0x180, PIN_INPUT, 0) /* (AD23) RGMII2_RXC */
			AM62X_IOPAD(0x17c, PIN_INPUT, 0) /* (AD22) RGMII2_RX_CTL */
			AM62X_IOPAD(0x16c, PIN_OUTPUT, 0) /* (Y18) RGMII2_TD0 */
			AM62X_IOPAD(0x170, PIN_OUTPUT, 0) /* (AA18) RGMII2_TD1 */
			AM62X_IOPAD(0x174, PIN_OUTPUT, 0) /* (AD21) RGMII2_TD2 */
			AM62X_IOPAD(0x178, PIN_OUTPUT, 0) /* (AC20) RGMII2_TD3 */
			AM62X_IOPAD(0x168, PIN_OUTPUT, 0) /* (AE21) RGMII2_TXC */
			AM62X_IOPAD(0x164, PIN_OUTPUT, 0) /* (AA19) RGMII2_TX_CTL */
		>;
	};

	main_usb0_pins_default: main-usb0-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0254, PIN_OUTPUT, 0) /* (C20) USB0_DRVVBUS */
		>;
	};

	main_usb1_pins_default: main-usb1-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0258, PIN_OUTPUT, 0) /* (F18) USB1_DRVVBUS */
		>;
	};

	main_mcasp1_pins_default: main-mcasp1-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x090, PIN_INPUT, 2) /* (M24) GPMC0_BE0N_CLE.MCASP1_ACLKX */
			AM62X_IOPAD(0x098, PIN_INPUT, 2) /* (U23) GPMC0_WAIT0.MCASP1_AFSX */
			AM62X_IOPAD(0x08c, PIN_OUTPUT, 2) /* (L25) GPMC0_WEN.MCASP1_AXR0 */
			AM62X_IOPAD(0x084, PIN_INPUT, 2) /* (L23) GPMC0_ADVN_ALE.MCASP1_AXR2 */
		>;
	};

	main_dss0_pins_default: main-dss0-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x100, PIN_OUTPUT, 0) /* (AC25) VOUT0_VSYNC */
			AM62X_IOPAD(0x0f8, PIN_OUTPUT, 0) /* (AB24) VOUT0_HSYNC */
			AM62X_IOPAD(0x104, PIN_OUTPUT, 0) /* (AC24) VOUT0_PCLK */
			AM62X_IOPAD(0x0fc, PIN_OUTPUT, 0) /* (Y20) VOUT0_DE */
			AM62X_IOPAD(0x0b8, PIN_OUTPUT, 0) /* (U22) VOUT0_DATA0 */
			AM62X_IOPAD(0x0bc, PIN_OUTPUT, 0) /* (V24) VOUT0_DATA1 */
			AM62X_IOPAD(0x0c0, PIN_OUTPUT, 0) /* (W25) VOUT0_DATA2 */
			AM62X_IOPAD(0x0c4, PIN_OUTPUT, 0) /* (W24) VOUT0_DATA3 */
			AM62X_IOPAD(0x0c8, PIN_OUTPUT, 0) /* (Y25) VOUT0_DATA4 */
			AM62X_IOPAD(0x0cc, PIN_OUTPUT, 0) /* (Y24) VOUT0_DATA5 */
			AM62X_IOPAD(0x0d0, PIN_OUTPUT, 0) /* (Y23) VOUT0_DATA6 */
			AM62X_IOPAD(0x0d4, PIN_OUTPUT, 0) /* (AA25) VOUT0_DATA7 */
			AM62X_IOPAD(0x0d8, PIN_OUTPUT, 0) /* (V21) VOUT0_DATA8 */
			AM62X_IOPAD(0x0dc, PIN_OUTPUT, 0) /* (W21) VOUT0_DATA9 */
			AM62X_IOPAD(0x0e0, PIN_OUTPUT, 0) /* (V20) VOUT0_DATA10 */
			AM62X_IOPAD(0x0e4, PIN_OUTPUT, 0) /* (AA23) VOUT0_DATA11 */
			AM62X_IOPAD(0x0e8, PIN_OUTPUT, 0) /* (AB25) VOUT0_DATA12 */
			AM62X_IOPAD(0x0ec, PIN_OUTPUT, 0) /* (AA24) VOUT0_DATA13 */
			AM62X_IOPAD(0x0f0, PIN_OUTPUT, 0) /* (Y22) VOUT0_DATA14 */
			AM62X_IOPAD(0x0f4, PIN_OUTPUT, 0) /* (AA21) VOUT0_DATA15 */
			AM62X_IOPAD(0x05c, PIN_OUTPUT, 1) /* (R24) GPMC0_AD8.VOUT0_DATA16 */
			AM62X_IOPAD(0x060, PIN_OUTPUT, 1) /* (R25) GPMC0_AD9.VOUT0_DATA17 */
		>;
	};

	main_mcan0_pins_default: main-mcan0-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x01d8, PIN_OUTPUT, 0) /* CAN_A_TX (C15) MCAN0_TX */
			AM62X_IOPAD(0x01dc, PIN_INPUT, 0) /* CAN_A_RX (E15) MCAN0_RX */
		>;
	};

	main_spi0_pins_default: main-spi0-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x01c0, PIN_INPUT, 0) /* SPI_B_SDI (B13) SPI0_D0 */
			AM62X_IOPAD(0x01c4, PIN_OUTPUT, 0) /* SPI_B_SDO (B14) SPI0_D1 */
			AM62X_IOPAD(0x01b4, PIN_INPUT, 0) /* SPI_B_CS0# (A13) SPI0_CS0 */
			AM62X_IOPAD(0x01b8, PIN_INPUT, 0) /* SPI_B_CS1# (C13) SPI0_CS1 */
			AM62X_IOPAD(0x01bc, PIN_INPUT, 0) /* SPI_B_SCK (A14) SPI0_CLK */
		>;
	};

	main_uart0_pins_default: main-uart0-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x1c8, PIN_INPUT, 0) /* (D14) UART0_RXD */
			AM62X_IOPAD(0x1cc, PIN_OUTPUT, 0) /* (E14) UART0_TXD */
		>;
	};

	main_uart1_pins_default: main-uart1-default-pins {
		bootph-pre-ram;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x194, PIN_INPUT, 2) /* (B19) MCASP0_AXR3.UART1_CTSn */
			AM62X_IOPAD(0x198, PIN_OUTPUT, 2) /* (A19) MCASP0_AXR2.UART1_RTSn */
			AM62X_IOPAD(0x1ac, PIN_INPUT, 2) /* (E19) MCASP0_AFSR.UART1_RXD */
			AM62X_IOPAD(0x1b0, PIN_OUTPUT, 2) /* (A20) MCASP0_ACLKR.UART1_TXD */
		>;
	};

	main_uart4_pins_default: main-uart4-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x006c, PIN_INPUT, 2) /* (T22) GPMC0_AD12.UART4_RXD */
			AM62X_IOPAD(0x0070, PIN_OUTPUT, 2) /* (T24) GPMC0_AD13.UART4_TXD */
		>;
	};

	main_uart6_pins_default: main-uart6-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0028, PIN_INPUT, 3) /* (J22) OSPI0_D7.UART6_CTSn */
			AM62X_IOPAD(0x0024, PIN_OUTPUT, 3) /* (H25) OSPI0_D6.UART6_RTSn */
			AM62X_IOPAD(0x001c, PIN_INPUT, 3) /* (J23) OSPI0_D4.UART6_RXD */
			AM62X_IOPAD(0x0020, PIN_OUTPUT, 3) /* (J25) OSPI0_D5.UART6_TXD */
		>;
	};

	main_wifi_en_default: main-wifi-en-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0050, PIN_OUTPUT, 7) /* W_DISABLE# (P22) GPMC0_AD5.GPIO0_20 */
		>;
	};

	main_wifi_wake_default: main-wifi-wake-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x0040, PIN_INPUT, 7) /* SDIO_WAKE# (N23) GPMC0_AD1.GPIO0_16 */
		>;
	};

	pmic_irq_pins_default: pmic-irq-default-pins {
		pinctrl-single,pins = <
			AM62X_IOPAD(0x01f4, PIN_INPUT, 0) /* (D16) EXTINTn */
		>;
	};

	ospi0_pins_default: ospi0-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x000, PIN_OUTPUT, 0) /* (H24) OSPI0_CLK */
			AM62X_IOPAD(0x02c, PIN_OUTPUT, 0) /* (F23) OSPI0_CSn0 */
			AM62X_IOPAD(0x030, PIN_OUTPUT, 0) /* (G21) OSPI0_CSn1 */
			AM62X_IOPAD(0x00c, PIN_INPUT, 0) /* (E25) OSPI0_D0 */
			AM62X_IOPAD(0x010, PIN_INPUT, 0) /* (G24) OSPI0_D1 */
			AM62X_IOPAD(0x014, PIN_INPUT, 0) /* (F25) OSPI0_D2 */
			AM62X_IOPAD(0x018, PIN_INPUT, 0) /* (F24) OSPI0_D3 */
		>;
	};

	vdd_sd_pins_default: vdd-sd-default-pins {
		bootph-all;
		pinctrl-single,pins = <
			AM62X_IOPAD(0x07c, PIN_OUTPUT, 7) /* (P25) GPMC0_CLK.GPIO0_31 */
		>;
	};
};

&main_spi0 { /* SPI_B */
	status = "disabled";
        pinctrl-names = "default";
        pinctrl-0 = <&main_spi0_pins_default>;
};

&main_uart0 {
	/* Console ttyS2 */
	bootph-all;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&main_uart0_pins_default>;
	interrupts-extended = <&gic500 GIC_SPI 178 IRQ_TYPE_LEVEL_HIGH>,
			       <&main_pmx0 0x1c8>; /* (D14) UART0_RXD PADCONFIG114 */
	interrupt-names = "irq", "wakeup";
};

&main_uart1 {
	/* ttyS3 BT (Also used by TIFS firmware) */
	bootph-all;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&main_uart1_pins_default>, <&main_bt_gpio_pins_default>;
	uart-has-rtscts;
	// TODO interrupt <&main_gpio0 32 IRQ_TYPE_LEVEL_LOW>; /* BT_HOST_WAKE */

	bluetooth {
		shutdown-gpios = <&main_gpio0 22 GPIO_ACTIVE_HIGH>; /* W_DISABLE2# */
		compatible = "infineon,cyw55572-bt";
		brcm,requires-autobaud-mode;
		max-speed = <921600>;
	};
};

&main_uart4 {
	/* ttyS6 UART_D */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_uart4_pins_default>;
};

&main_uart6 {
	/* ttyS4 UART_A */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_uart6_pins_default>;
};

&mcasp1 {
	status = "disabled";
	#sound-dai-cells = <0>;

	pinctrl-names = "default";
	pinctrl-0 = <&main_mcasp1_pins_default>;

	op-mode = <0>;          /* MCASP_IIS_MODE */
	tdm-slots = <2>;

	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
	       1 0 2 0
	       0 0 0 0
	       0 0 0 0
	       0 0 0 0
	>;
	tx-num-evt = <0>;
	rx-num-evt = <0>;
};

/* mcu_gpio0 and mcu_gpio_intr are reserved for mcu firmware usage */
&mcu_gpio0 {
	status = "reserved";
	gpio-line-names = "","","","","",                       /* 0 - 4 */
		"","","","","",
		"","GPIO_B_1","GPIO_B_0","","",			/* 10 - 14 */
		"","","GPIO_A_4","GPIO_A_5","GPIO_B_4",
		"GPIO_B_5","","","rv3028_int";			/* 20 - 23 */
};

&mcu_gpio_intr {
	status = "reserved";
};

&mcu_m4fss {
	mboxes = <&mailbox0_cluster0 &mbox_m4_0>;
	memory-region = <&mcu_m4fss_dma_memory_region>,
			<&mcu_m4fss_memory_region>;
	status = "okay";
};

&mcu_mcan0 { /* CAN_B */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&mcu_mcan0_pins_default>;
};

&mcu_pmx0 {

	wkup_uart0_pins_default: wkup-uart0-default-pins {
		bootph-pre-ram;
		pinctrl-single,pins = <
			AM62X_MCU_IOPAD(0x02c, PIN_INPUT, 0) /* (C6/A7) WKUP_UART0_CTSn */
			AM62X_MCU_IOPAD(0x030, PIN_OUTPUT, 0) /* (A4/B4) WKUP_UART0_RTSn */
			AM62X_MCU_IOPAD(0x024, PIN_INPUT, 0) /* (B4/B5) WKUP_UART0_RXD */
			AM62X_MCU_IOPAD(0x028, PIN_OUTPUT, 0) /* (C5/C6) WKUP_UART0_TXD */
		>;
	};

	mcu_mcan0_pins_default: mcu-mcan0-pins-default {
		pinctrl-single,pins = <
			AM62X_MCU_IOPAD(0x0034, PIN_OUTPUT, 0) /* CAN_B_TX (D6) MCU_MCAN0_TX */
			AM62X_MCU_IOPAD(0x0038, PIN_INPUT, 0) /* CAN_B_RX (B3) MCU_MCAN0_RX */
		>;
	};

	mcu_rtc_pins_default: mcu-rtc-default-pins {
		pinctrl-single,pins = <
			AM62X_MCU_IOPAD(0x0084, PIN_INPUT, 7) /* RTC_INT (A12) WKUP_CLKOUT0.MCU_GPIO0_23 */
		>;
	};

	pinctrl_mcu_uart0: muc-uart0-default-pins {
		pinctrl-single,pins = <
			AM62X_MCU_IOPAD(0x001c, PIN_INPUT, 0) /* (A6) MCU_UART0_CTSn */
			AM62X_MCU_IOPAD(0x0020, PIN_OUTPUT, 0) /* (B6) MCU_UART0_RTSn */
			AM62X_MCU_IOPAD(0x0014, PIN_INPUT, 0) /* (B5) MCU_UART0_RXD */
			AM62X_MCU_IOPAD(0x0018, PIN_OUTPUT, 0) /* (A5) MCU_UART0_TXD */
		>;
	};
};

&mcu_uart0 {
	/* ttyS5 UART_B */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_mcu_uart0>;
	status = "disabled";
};

&ospi0 { /* SPI_A Only 4 bits are routed out */
	bootph-all;
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&ospi0_pins_default>;
};

&sdhci0 { /* eMMC */
	bootph-all;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&main_mmc0_pins_default>;
	disable-wp;
};

&sdhci1 { /* SDIO_A */
	bootph-all;
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&main_mmc1_pins_default>;
};

&sdhci2 { /* SDIO_B  WIFI */
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&main_mmc2_pins_default>, <&main_wifi_wake_default>;
	vmmc-supply = <&vcc_3v3_sys>;
	vqmmc-supply = <&vcc_1v8_sys>;
	mmc-pwrseq = <&wifi_pwrseq>; /* W_DISABLE# */
	non-removable;
	ti,fails-without-test-cd;
	cap-power-off-card;
	keep-power-in-suspend;

	wifi@1 {
		reg = <1>;
		compatible = "brcm,bcm4329-fmac";
		interrupts-extended = <&main_gpio0 16 IRQ_TYPE_LEVEL_LOW>; /* SDIO_WAKE# */
		laird,regdomain = "US";
	};
};

#define K3_TS_OFFSET(pa, val)	(0x4+(pa)*4) (0x10000 | val)

&timesync_router {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&cpsw_cpts>;

	/* Use Time Sync Router to map GENF1 input to HW3_TS_PUSH output */
	cpsw_cpts: cpsw-cpts {
		pinctrl-single,pins = <
			/* pps [cpsw cpts genf1] in17 -> out12 [cpsw cpts hw3_push] */
			K3_TS_OFFSET(12, 17)
			>;
	};
};

&usbss0 {
	bootph-all;
	status = "okay";
	ti,vbus-divider;
};

&usbss1 {
	status = "okay";
	ti,vbus-divider;
};

&usb0 {
	bootph-all;
	#address-cells = <1>;
	#size-cells = <0>;
	dr_mode = "device";
	pinctrl-names = "default";
	pinctrl-0 = <&main_usb0_pins_default>;
};

&usb1 {
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&main_usb1_pins_default>;
};

&wkup_uart0 {
	/* WKUP UART0 (UART_C) is used by DM firmware */
	bootph-pre-ram;
	status = "reserved";
	pinctrl-names = "default";
	pinctrl-0 = <&wkup_uart0_pins_default>;
};
