// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2020 Boundary Devices
 */

/dts-v1/;

#include <dt-bindings/usb/pd.h>
#include "imx8mp.dtsi"
#define TC358867_I2C_BUS	<&i2c2d>

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	pinctrl_backlight_lvds: backlight-lvdsgrp {
		fsl,pins = <
#define GP_BACKLIGHT_LVDS  <&gpio4 22 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22	0x106
		>;
	};

	pinctrl_backlight_lvds2: backlight-lvds2grp {
		fsl,pins = <
#define GP_BACKLIGHT_LVDS2  <&gpio4 21 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_RXFS__GPIO4_IO21	0x106
		>;
	};

	pinctrl_bt_rfkill: bt-rfkillgrp {
		fsl,pins = <
#define GP_BT_RFKILL_RESET	<&gpio3 9 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_NAND_DATA03__GPIO3_IO09	0x119
		>;
	};

	pinctrl_ecspi2: ecspi2grp {
		fsl,pins = <
			/* J31 */
			MX8MP_IOMUXC_ECSPI2_SCLK__ECSPI2_SCLK		0x82	/* Pin 20 */
			MX8MP_IOMUXC_ECSPI2_MOSI__ECSPI2_MOSI		0x82	/* Pin 10 */
			MX8MP_IOMUXC_ECSPI2_MISO__ECSPI2_MISO		0x82	/* Pin 8 */
#define GP_ECSPI2_CS	<&gpio5 13 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_ECSPI2_SS0__GPIO5_IO13		0x143	/* Pin 6 */
		>;
	};

	pinctrl_eqos: eqosgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC		0x20
			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO		0xa0
			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x1f
			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0		0x1f
			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1		0x1f
			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2		0x1f
			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3		0x1f

			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x91
			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x91
			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x91
			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x91
			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x91
			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x91
#define GP_EQOS_RESET	<&gpio3 16 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_NAND_READY_B__GPIO3_IO16		0x100
#define GPIRQ_EQOS_PHY	<&gpio3 2 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_NAND_CE1_B__GPIO3_IO02		0x10
		>;
	};

	pinctrl_fec: fecgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI1_RXD2__ENET1_MDC		0x0
			MX8MP_IOMUXC_SAI1_RXD3__ENET1_MDIO		0xa0
			MX8MP_IOMUXC_SAI1_TXD4__ENET1_RGMII_TX_CTL	0x1f
			MX8MP_IOMUXC_SAI1_TXD5__ENET1_RGMII_TXC		0x1f
			MX8MP_IOMUXC_SAI1_TXD0__ENET1_RGMII_TD0		0x1f
			MX8MP_IOMUXC_SAI1_TXD1__ENET1_RGMII_TD1		0x1f
			MX8MP_IOMUXC_SAI1_TXD2__ENET1_RGMII_TD2		0x1f
			MX8MP_IOMUXC_SAI1_TXD3__ENET1_RGMII_TD3		0x1f

			MX8MP_IOMUXC_SAI1_TXFS__ENET1_RGMII_RX_CTL	0x91
			MX8MP_IOMUXC_SAI1_TXC__ENET1_RGMII_RXC		0x91
			MX8MP_IOMUXC_SAI1_RXD4__ENET1_RGMII_RD0		0x91
			MX8MP_IOMUXC_SAI1_RXD5__ENET1_RGMII_RD1		0x91
			MX8MP_IOMUXC_SAI1_RXD6__ENET1_RGMII_RD2		0x91
			MX8MP_IOMUXC_SAI1_RXD7__ENET1_RGMII_RD3		0x91
#define GP_FEC_RESET	<&gpio5 8 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_ECSPI1_MISO__GPIO5_IO08		0x100
#define GPIRQ_FEC_PHY	<&gpio1 7 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_GPIO1_IO07__GPIO1_IO07		0x10
		>;
	};

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXD2__CAN1_RX		0x154
			MX8MP_IOMUXC_SAI5_RXD1__CAN1_TX		0x154
		>;
	};

	pinctrl_flexcan1_reg: flexcan1reggrp {
		fsl,pins = <
#define GP_CAN1_STANDBY	<&gpio3 20 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI5_RXC__GPIO3_IO20	0x154	/* CAN1_STBY */
		>;
	};

	pinctrl_flexcan2: flexcan2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_MCLK__CAN2_RX		0x154
			MX8MP_IOMUXC_SAI5_RXD3__CAN2_TX		0x154
		>;
	};

	pinctrl_flexcan2_reg: flexcan2reggrp {
		fsl,pins = <
#define GP_CAN2_STANDBY	<&gpio2 9 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SD1_DATA7__GPIO2_IO09	0x154	/* CAN2_STBY */
		>;
	};

	pinctrl_key_can1: key-can1grp {
		fsl,pins = <
#define GP_CAN1_DETECT		<&gpio1 11 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11	0x16
		>;
	};

	pinctrl_key_can2: key-can2grp {
		fsl,pins = <
#define GP_CAN2_DETECT		<&gpio4 23 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_RXD0__GPIO4_IO23	0x180
		>;
	};

	pinctrl_hog: hoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_HDMI_SCL	0x400001c3
			MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_HDMI_SDA	0x400001c3
			MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_HDMI_HPD		0x40000019
			MX8MP_IOMUXC_HDMI_CEC__HDMIMIX_HDMI_CEC		0x40000019
			MX8MP_IOMUXC_NAND_DATA01__GPIO3_IO07		0x119
			/* J31 */
			MX8MP_IOMUXC_SPDIF_RX__GPIO5_IO04		0x41	/* Pin 17 */
			MX8MP_IOMUXC_SPDIF_EXT_CLK__GPIO5_IO05		0x41	/* Pin 19 */
			MX8MP_IOMUXC_SPDIF_TX__GPIO5_IO03		0x41	/* Pin 21 */
			MX8MP_IOMUXC_SD1_RESET_B__GPIO2_IO10		0x41	/* Pin 23 */
			MX8MP_IOMUXC_SD1_DATA6__GPIO2_IO08		0x41	/* Pin 25 */
			MX8MP_IOMUXC_SD1_DATA5__GPIO2_IO07		0x41	/* Pin 29 */
			MX8MP_IOMUXC_SD1_DATA4__GPIO2_IO06		0x41	/* Pin 31 */
			MX8MP_IOMUXC_SAI1_MCLK__GPIO4_IO20		0x16	/* Pin 2 */
			MX8MP_IOMUXC_SAI1_TXD7__GPIO4_IO19		0x1c4	/* Pin 4 */
		>;
	};

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL		0x400001c3
			MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA		0x400001c3
		>;
	};

	pinctrl_i2c1_1: i2c1-1grp {
		fsl,pins = <
#define GP_I2C1_SCL	<&gpio5 14 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C1_SCL__GPIO5_IO14        	0x1c3
#define GP_I2C1_SDA	<&gpio5 15 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C1_SDA__GPIO5_IO15        	0x1c3
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL			0x400001c3
			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA			0x400001c3
		>;
	};

	pinctrl_i2c2d_rv3028: i2c2d-rv3028grp {
		fsl,pins = <
#define GPIRQ_RV3028		<&gpio1 4 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_GPIO1_IO04__GPIO1_IO04		0x1c0
		>;
	};

	pinctrl_i2c2_1: i2c2-1grp {
		fsl,pins = <
#define GP_I2C2_SCL	<&gpio5 16 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C2_SCL__GPIO5_IO16        	0x1c3
#define GP_I2C2_SDA	<&gpio5 17 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C2_SDA__GPIO5_IO17        	0x1c3
		>;
	};

	pinctrl_i2c2_pca9546: i2c2-pca9546grp {
		fsl,pins = <
#define GP_PCA9546_RESET	<&gpio1 5 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05        	0x100
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
			MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
		>;
	};

	pinctrl_i2c3_1: i2c3-1grp {
		fsl,pins = <
#define GP_I2C3_SCL	<&gpio5 18 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C3_SCL__GPIO5_IO18        	0x1c3
#define GP_I2C3_SDA	<&gpio5 19 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C3_SDA__GPIO5_IO19        	0x1c3
		>;
	};

	pinctrl_i2c4: i2c4grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C4_SCL__I2C4_SCL			0x400001c3
			MX8MP_IOMUXC_I2C4_SDA__I2C4_SDA			0x400001c3
		>;
	};

	pinctrl_i2c4_1: i2c4-1grp {
		fsl,pins = <
#define GP_I2C4_SCL	<&gpio5 20 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C4_SCL__GPIO5_IO20        	0x1c3
#define GP_I2C4_SDA	<&gpio5 21 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_I2C4_SDA__GPIO5_IO21        	0x1c3
		>;
	};

	pinctrl_i2c4_hd3ss3220: i2c4-hd3ss3220grp {
		fsl,pins = <
#define GPIRQ_HD3SS3220	<&gpio1 8 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_GPIO1_IO08__GPIO1_IO08		0x16
			MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02		0x03
		>;
	};

	pinctrl_mipi_com50h5n03ulc: mipi-com50h5n03ulcgrp {
		fsl,pins = <
#define GP_MIPI_RESET	<&gpio4 27 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x16
		>;
	};

	pinctrl_mipi_lcd133_070: mipi-lcd133-070grp {
		fsl,pins = <
#define GP_LCD133_070_RESET		<&gpio4 0 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00	0x116
#define GP_LCD133_070_ENABLE		<&gpio4 27 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x116
		>;
	};

	pinctrl_mipi_lcm_jm430: mipi-lcm-jm430grp {
		fsl,pins = <
#define GP_TC358762_EN	<&gpio4 27 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x16
#define GP_JM430_DISPLAY_EN	<&gpio4 0 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00	0x100
		>;
	};

	pinctrl_mipi_ltk0680ytmdb: mipi-ltk0680ytmdbgrp {
		fsl,pins = <
#define GP_MIPI_RESET	<&gpio4 27 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x16
		>;
	};

	pinctrl_mipi_ltk080a60a004t: mipi-ltk080a60a004tgrp {
		fsl,pins = <
#define GP_LTK08_MIPI_EN	<&gpio4 0 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00	0x116
		>;
	};

	pinctrl_pdm: pdmgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI1_RXC__AUDIOMIX_PDM_CLK			0xd6
			MX8MP_IOMUXC_SAI3_RXFS__AUDIOMIX_PDM_BIT_STREAM00	0xd6
		>;
	};

	pinctrl_pcie: pciegrp {
		fsl,pins = <
#define GP_PCIE_RESET	<&gpio4 29 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI3_RXC__GPIO4_IO29	0x41
#define GP_PCIE_DISABLE	<&gpio4 26 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_TXD0__GPIO4_IO26	0x41
		>;
	};

	pinctrl_pmic: pmicirq {
		fsl,pins = <
#define GPIRQ_PMIC	<&gpio3 0 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_NAND_ALE__GPIO3_IO00	0x41
		>;
	};

	pinctrl_pwm1: pwm1grp {
		fsl,pins = <
			/* J11 mipi display */
			MX8MP_IOMUXC_GPIO1_IO01__PWM1_OUT	0x100
		>;
	};

	pinctrl_pwm2: pwm2grp {
		fsl,pins = <
			/* J27 pin 20 LVDS2 display */
			MX8MP_IOMUXC_SAI5_RXD0__PWM2_OUT	0xd6
			/* J28 pin 20 LVDS display */
			MX8MP_IOMUXC_GPIO1_IO09__PWM2_OUT	0xd6
		>;
	};

	pinctrl_pwm4: pwm4grp {
		fsl,pins = <
			/* J31, pin 36 */
			MX8MP_IOMUXC_SAI5_RXFS__PWM4_OUT	0x116
		>;
	};

	pinctrl_reg_usbotg_vbus: reg-usbotg-vbusgrp {
		fsl,pins = <
#define GP_REG_USB_OTG_VBUS	<&gpio1 12 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO12__GPIO1_IO12	0x16
		>;
	};

	pinctrl_reg_wlan_vmmc: reg-wlan-vmmcgrp {
		fsl,pins = <
#define GP_REG_WLAN_VMMC	<&gpio2 19 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x16
		>;
	};

	pinctrl_sai3: sai3grp {
		fsl,pins = <
			/* WM8960 */
			MX8MP_IOMUXC_SAI3_TXFS__AUDIOMIX_SAI3_TX_SYNC	0xd6
			MX8MP_IOMUXC_SAI3_TXC__AUDIOMIX_SAI3_TX_BCLK	0xd6
			MX8MP_IOMUXC_SAI3_RXD__AUDIOMIX_SAI3_RX_DATA00	0xd6
			MX8MP_IOMUXC_SAI3_TXD__AUDIOMIX_SAI3_TX_DATA00	0xd6
			MX8MP_IOMUXC_SAI3_MCLK__AUDIOMIX_SAI3_MCLK	0xd6
		>;
	};

	pinctrl_sc18is602b: sc18is602bgrp {
		fsl,pins = <
#define GP_SC18IS602B_RESET	<&gpio4 27 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x101
		>;
	};

	pinctrl_sn65dsi83: sn65dsi83grp {
		fsl,pins = <
#define GPIRQ_SN65DSI83	<&gpio4 0 IRQ_TYPE_LEVEL_HIGH>
			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00	0x04
#define GP_SN65DSI83_EN	<&gpio4 27 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x106
		>;
	};

	pinctrl_sound_wm8960: sound-wm8960grp {
		fsl,pins = <
#define GP_WM8960_MIC_DET	<&gpio4 18 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI1_TXD6__GPIO4_IO18	0x1c0
#define GP_WM8960_HP_DET	<&gpio1 14 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO14__GPIO1_IO14	0x80
		>;
	};

	pinctrl_ts_ft5x06: ts-ft5x06grp {
		fsl,pins = <
#define GPIRQ_TS_FT5X06	<&gpio4 25 IRQ_TYPE_EDGE_FALLING>
#define GP_TS_FT5X06_WAKE	<&gpio4 25 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_TXC__GPIO4_IO25	0x149
#define GP_TS_FT5X06_RESET	<&gpio4 24 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24	0x109
		>;
	};

	pinctrl_ts_ft5x06_3: ts-ft5x06-3grp {
		fsl,pins = <
#define GPIRQ_TS_FT5X06_3	<&gpio1 1 IRQ_TYPE_EDGE_FALLING>
#define GP_TS_FT5X06_WAKE_3	<&gpio1 1 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01	0x149
#define GP_TS_FT5X06_RESET_3	<&gpio4 24 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24	0x109
		>;
	};

	pinctrl_ts_egalax_lvds: ts-egalax-lvdsgrp {
		fsl,pins = <
#define GPIRQ_TS_EGALAX_LVDS	<&gpio1 10 IRQ_TYPE_EDGE_FALLING>
#define GP_TS_EGALAX_LVDS_WAKE	<&gpio1 10 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x149
		>;
	};

	pinctrl_ts_ft5x06_lvds: ts-ft5x06-lvdsgrp {
		fsl,pins = <
#define GPIRQ_TS_FT5X06_LVDS	<&gpio1 10 IRQ_TYPE_EDGE_FALLING>
#define GP_TS_FT5X06_LVDS_WAKE	<&gpio1 10 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x149
		>;
	};

	pinctrl_ts_gt911: ts-gt911grp {
		fsl,pins = <
#define GPIRQ_TS_GT911	<&gpio4 25 IRQ_TYPE_LEVEL_HIGH>
#define GP_TS_GT911_IRQ	<&gpio4 25 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_TXC__GPIO4_IO25	0x1c0
#define GP_TS_GT911_RESET	<&gpio4 24 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24	0x109
		>;
	};

	pinctrl_ts_gt911_lvds: ts-gt911-lvdsgrp {
		fsl,pins = <
#define GPIRQ_TS_GT911_LVDS	<&gpio1 10 IRQ_TYPE_LEVEL_HIGH>
#define GP_TS_GT911_LVDS_IRQ	<&gpio1 10 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x1c0
#define GP_TS_GT911_LVDS_RESET	<&gpio3 14 GPIO_OPEN_DRAIN>
			MX8MP_IOMUXC_NAND_DQS__GPIO3_IO14	0x149
		>;
	};

	pinctrl_ts_ili251x_lvds: ts-ili251x-lvdsgrp {
		fsl,pins = <
#define GPIRQ_TS_ILI251X_LVDS	<&gpio1 10 IRQ_TYPE_EDGE_FALLING>
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x149
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART1_RXD__UART1_DCE_RX	0x140
			MX8MP_IOMUXC_UART1_TXD__UART1_DCE_TX	0x140
			MX8MP_IOMUXC_UART3_RXD__UART1_DCE_CTS	0x140
			MX8MP_IOMUXC_UART3_TXD__UART1_DCE_RTS	0x140
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x140
			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x140
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI1_SCLK__UART3_DCE_RX	0x140
			MX8MP_IOMUXC_ECSPI1_MOSI__UART3_DCE_TX	0x140
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART4_RXD__UART4_DCE_RX	0x140
			MX8MP_IOMUXC_UART4_TXD__UART4_DCE_TX	0x140
		>;
	};

	pinctrl_usb3_0: usb3-0grp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO13__USB1_OC	0x116
		>;
	};

	pinctrl_usb3_1: usb3-1grp {
		fsl,pins = <
#define GP_USB3_1_HUB_RESET	<&gpio1 6 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO06__GPIO1_IO06	0x16
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x190
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d0
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d0
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d0
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d0
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d0
			MX8MP_IOMUXC_GPIO1_IO03__USDHC1_VSELECT	0x116
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp-100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x194
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d4
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d4
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d4
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d4
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp-200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x196
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d6
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d6
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d6
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d6
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d6
		>;
	};

	pinctrl_usdhc1_gpio: usdhc1grp-gpio {
		fsl,pins = <
#define GP_USDHC1_CD	<&gpio2 11 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SD1_STROBE__GPIO2_IO11	0x1c4
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x194
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d4
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x196
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d6
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d6
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d6
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d6
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d6
		>;
	};

	pinctrl_usdhc3: usdhc3grp {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x190
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d0
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d0
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d0
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d0
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d0
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d0
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d0
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d0
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d0
#define GP_EMMC_RESET	<&gpio3 1 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_NAND_CE0_B__GPIO3_IO01	0x140
		>;
	};

	pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x194
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d4
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d4
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d4
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d4
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d4
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d4
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d4
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d4
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d4
		>;
	};

	pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x196
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d6
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d6
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d6
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d6
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d6
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d6
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d6
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d6
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d6
		>;
	};

	pinctrl_wdog: wdoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0xc6
		>;
	};
};

#include "panel-com50h5n03ulc.dtsi"
#include "panel-dmt050wvnxcmi.dtsi"
#include "panel-lcd133-070.dtsi"
#include "panel-lcm-jm430.dtsi"
#include "panel-ltk0680ytmdb.dtsi"
#include "panel-ltk080a60a004t.dtsi"
#include "panel-lxd-m8509a.dtsi"
#include "panel-m101nwwb.dtsi"

/ {
	model = "Boundary i.MX8MPlus nitrogen8mp board";
	compatible = "boundary,imx8mp-nitrogen8mp", "fsl,imx8mp";

	aliases {
		backlight_mipi = &backlight_mipi;
		backlight_mipi2 = &backlight_mipi2;
		backlight_lvds = &backlight_lvds;
		backlight_lvds2 = &backlight_lvds2;
		fb_lvds = &lcdif2;
		fb_lvds2 = &lcdif2;
		fb_mipi = &fb_mipi;
		fb_hdmi = &lcdif3;
		lcdif = &lcdif1;
		ldb = &ldb;
		ldb_chan = &ldb_chan;
		ldb_chan2 = &ldb_chan2;
		mipi = &fb_mipi;
		mipi_dsi = &mipi_dsi;
		mipi_dsi_bridge = &mipi_dsi;
		mipi_to_lvds = &mipi_to_lvds;
		pwm_mipi = &pwm1;
		pwm_lvds = &pwm2;
		pwm_lvds2 = &pwm2;
		t_lvds = &t_lvds;
		t_lvds2 = &t_lvds2;
		t_mipi = &t_mipi;
		ts_egalax = &ts_egalax_lvds;
		ts_ft5x06 = &ts_ft5x06;
		ts_ft5x06_2 = &ts_ft5x06_lvds;
		ts_ft5x06_3 = &ts_ft5x06_3;
		ts_goodix = &ts_goodix;
		ts_goodix2 = &ts_goodix_lvds2;
		ts_goodix3 = &ts_goodix_lvds3;
		ts_ili251x = &ts_ili251x_lvds;
		usb_mux = &usb_mux;
	};

	backlight_lvds: backlight-lvds {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		display = <&lcdif2>;
		default-brightness-level = <8>;
		enable-gpios = GP_BACKLIGHT_LVDS;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_backlight_lvds>;
		pwms = <&pwm2 0 100000 0>;
		status = "disabled";

	};

	backlight_lvds2: backlight-lvds2 {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		display = <&lcdif2>;
		default-brightness-level = <8>;
		enable-gpios = GP_BACKLIGHT_LVDS2;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_backlight_lvds2>;
		pwms = <&pwm2 0 100000 0>;
		status = "disabled";

	};

	backlight_mipi: backlight-mipi {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		default-brightness-level = <8>;
		display = <&lcdif1>;
		pwms = <&pwm1 0 30000 0>;		/* 33.3 Khz */
		status = "disabled";
	};

	bt-rfkill {
		compatible = "net,rfkill-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_bt_rfkill>;
		name = "bt-rfkill";
		type = <2>; /* Bluetooth */
		reset-gpios = GP_BT_RFKILL_RESET;
		status = "okay";
	};

	chosen {
		stdout-path = &uart2;
	};

	connector {
		compatible = "usb-c-connector";
		label = "USB-C";
		data-role = "dual";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				hs_ep: endpoint {
					remote-endpoint = <&usb3_hs_ep>;
				};
			};

			port@1 {
				reg = <1>;
				ss_ep: endpoint {
					remote-endpoint = <&hd3ss3220_in_ep>;
				};
			};
		};
	};

	gpio_keys: gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_key_can1>, <&pinctrl_key_can2>;

		can1 {
			label = "can1 detect";
			gpios = GP_CAN1_DETECT;
			linux,code = <KEY_1>;
		};

		can2 {
			label = "can2 detect";
			gpios = GP_CAN2_DETECT;
			linux,code = <KEY_2>;
		};
	};

	reg_can1_stby: regulator-can1-stby {
		compatible = "regulator-fixed";
		regulator-name = "can1-stby";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_flexcan1_reg>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = GP_CAN1_STANDBY;
		enable-active-high;
	};

	reg_can2_stby: regulator-can2-stby {
		compatible = "regulator-fixed";
		regulator-name = "can2-stby";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_flexcan2_reg>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = GP_CAN2_STANDBY;
		enable-active-high;
	};

	reg_usb_otg_vbus: regulator-usb-otg-vbus {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_usbotg_vbus>;
		regulator-name = "usb_otg_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = GP_REG_USB_OTG_VBUS;
		enable-active-high;
	};

	reg_vref_1v8: regulator-vref-1v8 {
		compatible = "regulator-fixed";
		regulator-name = "vref-1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
	};

	reg_vref_3v3: regulator-vref-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "vref-3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	reg_vref_5v0: regulator-vref-5v0 {
		compatible = "regulator-fixed";
		regulator-name = "vref-5v0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
	};

	reg_wlan_vmmc: regulator-wlan-vmmc {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_wlan_vmmc>;
		regulator-name = "reg_wlan_vmmc";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = GP_REG_WLAN_VMMC;
		startup-delay-us = <70000>;
		enable-active-high;
	};

	reserved-memory {
		linux,cma {
			size = <0 0x20000000>;
		};
	};

	sound-hdmi {
		compatible = "fsl,imx-audio-hdmi";
		model = "audio-hdmi";
		audio-cpu = <&aud2htx>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "okay";
	};

	sound-wm8960 {
#if 0
		asrc-controller = <&easrc>;
#endif
		audio-codec = <&wm8960>;
		audio-routing =
			"Headphone Jack", "HP_L",
			"Headphone Jack", "HP_R",
			"Ext Spk", "SPK_LP",
			"Ext Spk", "SPK_LN",
			"Ext Spk", "SPK_RP",
			"Ext Spk", "SPK_RN",
			"LINPUT1", "Main MIC",
			"Main MIC", "MICB",
			"RINPUT1", "Mic Jack",
			"Mic Jack", "MICB";
#if 0
			"CPU-Playback", "ASRC-Playback",
			"Playback", "CPU-Playback",
			"ASRC-Capture", "CPU-Capture",
			"CPU-Capture", "Capture";
#endif
		codec-master;
		compatible = "fsl,imx-audio-wm8960";
		cpu-dai = <&sai3>;
		/* JD2: hp detect high for headphone*/
		hp-det = <2 0>;
		hp-det-gpios = GP_WM8960_HP_DET;
		/* Jack is not stuffed */
		mic-det-gpios = GP_WM8960_MIC_DET;
		model = "wm8960-audio";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sound_wm8960>;
	};

	sound-micfil {
		compatible = "fsl,imx-audio-micfil";
		model = "imx-audio-micfil";
		cpu-dai = <&micfil>;
	};

	sound-xcvr {
		compatible = "fsl,imx-audio-xcvr";
		model = "imx-audio-xcvr";
		cpu-dai = <&xcvr>;
	};
};

&A53_0 {
	cpu-supply = <&buck2>;
};

&A53_1 {
	cpu-supply = <&buck2>;
};

&A53_2 {
	cpu-supply = <&buck2>;
};

&A53_3 {
	cpu-supply = <&buck2>;
};

&aud2htx {
	status = "okay";
};

&cameradev {
	status = "okay";
};

&clk {
	init-on-array = <IMX8MP_CLK_HSIO_ROOT>;
};

&dewarp {
	status = "okay";
};

&dsp {
	status = "okay";
};

&easrc {
	fsl,asrc-rate  = <48000>;
	status = "okay";
};

&ecspi2 {
	#address-cells = <1>;
	#size-cells = <0>;
	fsl,spi-num-chipselects = <1>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	cs-gpios = GP_ECSPI2_CS;
	status = "okay";

	spidev1: spi@0 {
		compatible = "spidev";
		reg = <0>;
		spi-max-frequency = <500000>;
	};
};

&eqos {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_eqos>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy {
			compatible = "ethernet-phy-ieee802.3-c22";
			at803x,hib-disabled;
			eee-broken-1000t;
			interrupts-extended = GPIRQ_EQOS_PHY;
#if 0
			reset-gpios = GP_EQOS_RESET;
#endif
			reg-mask = <0x90>;
		};
	};
};

&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec>;
#if 0
	phy-reset-gpios = GP_FEC_RESET;
#endif
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy1>;
	fsl,magic-packet;
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy1: ethernet-phy {
			compatible = "ethernet-phy-ieee802.3-c22";
			eee-broken-1000t;
			interrupts-extended = GPIRQ_FEC_PHY;
			reg-mask = <0x90>;
		};
	};
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_can1_stby>;
	status = "okay";
};

&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&reg_can2_stby>;
	status = "okay";
};

&gpu_2d {
	status = "okay";
};

&gpu_3d {
	status = "okay";
};

&hdmi {
	status = "okay";
};

&hdmiphy {
	status = "okay";
};

&hdmi_blk_ctrl {
	status = "okay";
};

&hdmi_pavi {
	status = "okay";
};

&i2c1 {
	clock-frequency = <400000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c1>;
	pinctrl-1 = <&pinctrl_i2c1_1>;
	scl-gpios = GP_I2C1_SCL;
	sda-gpios = GP_I2C1_SDA;
	status = "okay";

	pmic: pca9450@25 {
		reg = <0x25>;
		compatible = "nxp,pca9450c";
		/* PMIC PCA9450 PMIC_nINT GPIO1_IO3 */
		pinctrl-0 = <&pinctrl_pmic>;
		interrupts-extended = GPIRQ_PMIC;

		regulators {
			buck1: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck2: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-limit-microvolt = <1025000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
				nxp,dvs-run-voltage = <950000>;
				nxp,dvs-standby-voltage = <850000>;
			};

			buck4: BUCK4 {
				regulator-name = "BUCK4";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5: BUCK5 {
				regulator-name = "BUCK5";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2: LDO2 {
				regulator-name = "LDO2";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1150000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3: LDO3 {
				regulator-name = "LDO3";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5: LDO5 {
				regulator-name = "LDO5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c2>;
	pinctrl-1 = <&pinctrl_i2c2_1>;
	scl-gpios = GP_I2C2_SCL;
	sda-gpios = GP_I2C2_SDA;
	status = "okay";

	pca9546: i2cmux9546@70 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2_pca9546>;
		compatible = "nxp,pca9546";
		reg = <0x70>;
		reset-gpios = GP_PCA9546_RESET;
		#address-cells = <1>;
		#size-cells = <0>;

		i2c2a: i2c2@0 {
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c2b: i2c2@1 {
			/* J9  - camera*/
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
			/* edid  @50 */
		};

		i2c2c: i2c2@2 {
			/* J10 - camera */
			clock-frequency = <100000>;
			reg = <2>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c2d: i2c2@3 {
			/* rtc, J11 mipi */
			clock-frequency = <100000>;
			reg = <3>;
			#address-cells = <1>;
			#size-cells = <0>;
		};
	};
};

&i2c2b {
	basler_camera@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x00>;
		status = "okay";

		port {
			basler_ep_0: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2 3 4>;
				link-frequencies = /bits/ 64 <750000000>;
				max-lane-frequency = /bits/ 64 <750000000>;
				max-pixel-frequency = /bits/ 64 <266000000>;
				max-data-rate = /bits/ 64 <0>;
				remote-endpoint = <&mipi_csi0_ep>;
			};
		};
	};
};

&i2c2c {
	basler_camera@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x01>;
		status = "okay";

		port {
			basler_ep_1: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2 3 4>;
				link-frequencies = /bits/ 64 <750000000>;
				max-lane-frequency = /bits/ 64 <750000000>;
				max-pixel-frequency = /bits/ 64 <266000000>;
				max-data-rate = /bits/ 64 <0>;
				remote-endpoint = <&mipi_csi1_ep>;
			};
		};
	};
};

&i2c2d {
	backlight_mipi2: backlight-mipi2@66 {
		alias = <&backlight_mipi2>;
		compatible = "rohm,bd2606";
		default-brightness = <32>;	/* 63 is max */
		display = <&display_subsystem>;
		label = "bklght-bd2606";
		led-sources = <0 1 2 3 4 5>;
		reg = <0x66>;
		status = "disabled";
	};

	rtc@52 {
		backup-switchover-dsm;
		compatible = "microcrystal,rv3028";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2d_rv3028>;
		reg = <0x52>;
		interrupts-extended = GPIRQ_RV3028;
		wakeup-source;
	};

	spi_lcd: spi@2f {
		compatible = "nxp,sc18is602b";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sc18is602b>;
		reg = <0x2f>;
		reset-gpios = GP_SC18IS602B_RESET;
		status = "disabled";
		#address-cells = <1>;
		#size-cells = <0>;

		spidev_lcd: spidev@0 {
			compatible = "spidev";
			spi-cpha;
			spi-cpol;
			spi-max-frequency = <20000000>;
			reg = <0>;
		};
	};

	ts_ft5x06: touchscreen@38 {
		compatible = "edt,ft5x06-ts";
		interrupts-extended = GPIRQ_TS_FT5X06;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_ft5x06>;
		reg = <0x38>;
		reset-gpios = GP_TS_FT5X06_RESET;
		wakeup-gpios = GP_TS_FT5X06_WAKE;
		status = "disabled";
	};

	ts_ft5x06_3: touchscreen-3@38 {
		compatible = "edt,ft5x06-ts";
		interrupts-extended = GPIRQ_TS_FT5X06_3;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_ft5x06_3>;
		reg = <0x38>;
		reset-gpios = GP_TS_FT5X06_RESET_3;
		wakeup-gpios = GP_TS_FT5X06_WAKE_3;
		status = "disabled";
	};

	ts_goodix: touchscreen@5d {
		compatible = "goodix,gt9271";
		esd-recovery-timeout-ms = <2000>;
		interrupts-extended = GPIRQ_TS_GT911;
		irq-gpios = GP_TS_GT911_IRQ;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_gt911>;
		reg = <0x5d>;
		reset-gpios = GP_TS_GT911_RESET;
		status = "disabled";
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c3>;
	pinctrl-1 = <&pinctrl_i2c3_1>;
	scl-gpios = GP_I2C3_SCL;
	sda-gpios = GP_I2C3_SDA;
	status = "okay";

	wm8960: codec@1a {
		compatible = "wlf,wm8960";
		reg = <0x1a>;
		clocks = <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_MCLK1>;
		clock-names = "mclk";
		wlf,shared-lrclk;
	};
};

&i2c4 {
	clock-frequency = <100000>;
	pinctrl-names = "default", "gpio";
	pinctrl-0 = <&pinctrl_i2c4>;
	pinctrl-1 = <&pinctrl_i2c4_1>;
	scl-gpios = GP_I2C4_SCL;
	sda-gpios = GP_I2C4_SDA;
	status = "okay";

	ts_egalax_lvds: touchscreen@4 {
		compatible = "eeti,egalax_ts";
		interrupts-extended = GPIRQ_TS_EGALAX_LVDS;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_egalax_lvds>;
		reg = <0x04>;
		status = "disabled";
		wakeup-gpios = GP_TS_EGALAX_LVDS_WAKE;
	};

	ts_ft5x06_lvds: touchscreen@38 {
		compatible = "edt,ft5x06-ts";
		interrupts-extended = GPIRQ_TS_FT5X06_LVDS;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_ft5x06_lvds>;
		reg = <0x38>;
		status = "disabled";
		wakeup-gpios = GP_TS_FT5X06_LVDS_WAKE;
	};

	ts_goodix_lvds2: touchscreen@14 {
		compatible = "goodix,gt9271";
		esd-recovery-timeout-ms = <2000>;
		interrupts-extended = GPIRQ_TS_GT911_LVDS;
		irq-gpios = GP_TS_GT911_LVDS_IRQ;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_gt911_lvds>;
		reg = <0x14>;
		reset-gpios = GP_TS_GT911_LVDS_RESET;
		status = "disabled";
	};

	ts_goodix_lvds3: touchscreen@5d {
		compatible = "goodix,gt9271";
		esd-recovery-timeout-ms = <2000>;
		interrupts-extended = GPIRQ_TS_GT911_LVDS;
		irq-gpios = GP_TS_GT911_LVDS_IRQ;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_gt911_lvds>;
		reg = <0x5d>;
		reset-gpios = GP_TS_GT911_LVDS_RESET;
		status = "disabled";
	};

	ts_ili251x_lvds: touchscreen@41 {
		compatible = "ilitek,ili251x";
		interrupts-extended = GPIRQ_TS_ILI251X_LVDS;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ts_ili251x_lvds>;
		reg = <0x41>;
		status = "disabled";
		touchscreen-size-x = <0x3fff>;
		touchscreen-size-y = <0x3fff>;
	};

	usb_mux: hd3ss3220@47 {
		/* tusb320 is compatible with hd3ss3220 */
		compatible = "ti,hd3ss3220";
		interrupts-extended = GPIRQ_HD3SS3220;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c4_hd3ss3220>;
		reg = <0x47>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				hd3ss3220_in_ep: endpoint {
					remote-endpoint = <&ss_ep>;
				};
			};

			port@1 {
				reg = <1>;
				hd3ss3220_out_ep: endpoint {
					remote-endpoint = <&usb3_role_switch>;
				};
			};
		};
	};
};

&irqsteer_hdmi {
	status = "okay";
};

&isi_0 {
	status = "disabled";

	cap_device {
		status = "okay";
	};

	m2m_device {
		status = "okay";
	};
};

&isi_1 {
	status = "disabled";

	cap_device {
		status = "okay";
	};
};

&isp_0 {
	status = "okay";
};

&isp_1 {
	status = "okay";
};

&lcdif1 {
	status = "disabled";
};

&lcdif2 {
	status = "disabled";
};

&lcdif3 {
	status = "disabled";
};

&ldb {
	lvds-channel@0 {
		backlight = <&backlight_lvds>;
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;

		display-timings {
			t_lvds: t_lvds_default {
				/* m101nwwb by default */
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
			};
		};
	};

	lvds-channel@1 {
		backlight = <&backlight_lvds2>;
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;

		display-timings {
			t_lvds2: t_lvds_default {
				/* m101nwwb by default */
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
			};
		};
	};
};

&ldb_phy {
	status = "okay";
};

&micfil {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pdm>;
	assigned-clocks = <&clk IMX8MP_CLK_PDM>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <196608000>;
	status = "okay";
};

&mipi_csi_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	port@0 {
		reg = <0>;

		mipi_csi0_ep: endpoint {
			csis-clk-settle = <2>;
			csis-hs-settle = <16>;
			csis-wclk;
			data-lanes = <4>;
			remote-endpoint = <&basler_ep_0>;
		};
	};
};

&mipi_csi_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	port@1 {
		reg = <1>;

		mipi_csi1_ep: endpoint {
			csis-clk-settle = <2>;
			csis-hs-settle = <16>;
			csis-wclk;
			data-lanes = <4>;
			remote-endpoint = <&basler_ep_1>;
		};
	};
};

&mipi_dsi {
	clocks = <&clk IMX8MP_CLK_MEDIA_APB_ROOT>,
		 <&clk IMX8MP_CLK_MEDIA_MIPI_PHY1_REF>,
		 <&clk IMX8MP_CLK_MEDIA_APB_ROOT>,
		 <&clk IMX8MP_CLK_MEDIA_DISP1_PIX_ROOT>;
	clock-names = "cfg", "pll-ref", "apb-root", "pixel_clock";
	status = "disabled";

	fb_mipi: panel@0 {
		backlight = <&backlight_mipi>;
		bits-per-color = <8>;
		bridge-de-active = <0>;
		bus-format = "rgb888";
#if 0
		clocks = <&mipi_dsi 0>,
			<&clk IMX8MP_CLK_MEDIA_DISP1_PIX_ROOT>;
#endif
		clock-names = "mipi_clk", "pixel_clock";
		compatible = "panel,common";
		dsi-format = "rgb888";
		dsi-lanes = <4>;
#if 0
		/* u-boot will set this where appropriate */
		enable-gpios = GP_LTK08_MIPI_EN;
		mipi-cmds = <&mipi_cmds_ltk080a60a004t>;
#endif
		mode-skip-eot;
		mode-video;
		mode-video-burst;
		panel-height-mm = <136>;
		panel-width-mm = <217>;
		pinctrl-names = "sn65dsi83";
		pinctrl-0 = <&pinctrl_sn65dsi83>;
		power-supply = <&reg_vref_5v0>;
		reg = <0>;
		sn65dsi83 = <&mipi_to_lvds>;
		spwg;

		display-timings {
			t_mipi: t-dsi-default {
				/* m101nwwb by default */
				clock-frequency = <66000000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
				hsync-active = <0>;
				vsync-active = <0>;
				de-active = <1>;
			};
		};

		mipi_to_lvds: mipi-to-lvds {
			alias = <&mipi_to_lvds>;
			enable-gpios = GP_SN65DSI83_EN;
			i2c-address = <0x2c>;
			i2c-bus = <&i2c2d>;
			interrupts-extended = GPIRQ_SN65DSI83;
			status = "disabled";
		};
	};
};

&mix_gpu_ml {
	status = "okay";
};

&ml_vipsi {
	status = "okay";
};

&pcie {
	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI>,
			  <&clk IMX8MP_CLK_PCIE_AUX>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_500M>,
				 <&clk IMX8MP_SYS_PLL2_50M>;
	assigned-clock-rates = <500000000>, <10000000>;
	clocks = <&clk IMX8MP_CLK_HSIO_ROOT>,
		 <&clk IMX8MP_CLK_PCIE_AUX>,
		 <&clk IMX8MP_CLK_HSIO_AXI>,
		 <&clk IMX8MP_CLK_PCIE_ROOT>;
	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
	disable-gpio = GP_PCIE_DISABLE;
	ext_osc = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pcie>;
	reset-gpio = GP_PCIE_RESET;
	status = "okay";
};

&pcie_phy {
	clk_mode = <3>;
	status = "okay";
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&pwm4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	status = "okay";
};

&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MP_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <12288000>;
	clocks = <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_IPG>, <&clk IMX8MP_CLK_DUMMY>,
		 <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_MCLK1>, <&clk IMX8MP_CLK_DUMMY>,
		 <&clk IMX8MP_CLK_DUMMY>;
	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3";
	fsl,sai-mclk-direction-output;
	status = "okay";
};

&sdma2 {
	status = "okay";
};

&snvs_pwrkey {
	status = "okay";
};

&uart1 { /* BT */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MP_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	uart-has-rtscts;
	status = "okay";
};

&uart2 {
	/* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "okay";
};

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_0 {
	dr_mode = "otg";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_0>;
	status = "okay";
	usb-role-switch;
	vbus-supply = <&reg_usb_otg_vbus>;

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			usb3_hs_ep: endpoint {
				remote-endpoint = <&hs_ep>;
			};
		};

		port@1 {
			reg = <1>;
			usb3_role_switch: endpoint {
				remote-endpoint = <&hd3ss3220_out_ep>;
			};
		};
	};
};

&usb_dwc3_1 {
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_1>;
	reset-gpios = GP_USB3_1_HUB_RESET;
	status = "okay";
};

&usb3_phy0 {
	fsl,phy-tx-preemp-amp-tune = <2>;
	status = "okay";
	vbus-supply = <&reg_vref_5v0>;
};

&usb3_phy1 {
	fsl,phy-tx-preemp-amp-tune = <2>;
	status = "okay";
	vbus-supply = <&reg_vref_5v0>;
};

&usdhc1 {
	bus-width = <4>;
	cd-gpios = GP_USDHC1_CD;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>, <&pinctrl_usdhc1_gpio>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>, <&pinctrl_usdhc1_gpio>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>, <&pinctrl_usdhc1_gpio>;
	status = "okay";
	vmmc-supply = <&reg_vref_3v3>;
};

&usdhc2 {
	bus-width = <4>;
	fsl,sdio-async-interrupt-enabled;
	keep-power-in-suspend;
	no-sd-uhs-sdr104;
	non-removable;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>;
	pm-ignore-notify;
	status = "okay";
	vmmc-supply = <&reg_wlan_vmmc>;
	vqmmc-1-8-v;
	vqmmc-supply = <&reg_vref_1v8>;
};

&usdhc3 {
	bus-width = <8>;
	no-mmc-hs400;
	non-removable;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	status = "okay";
	vmmc-supply = <&reg_vref_3v3>;
	vqmmc-1-8-v;
	vqmmc-supply = <&reg_vref_1v8>;
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

&vpu_vc8000e {
	status = "okay";
};

&vpu_v4l2 {
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&xcvr {
	#sound-dai-cells = <0>;
	status = "okay";
};
