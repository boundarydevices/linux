// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2023 Boundary Devices
 */

/dts-v1/;

#include "imx8mp-nitrogen8mp-som.dtsi"
#define TC358867_I2C_BUS	<&i2c2d>

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	pinctrl_backlight_lvds: backlight-lvdsgrp {
		fsl,pins = <
#define GP_BACKLIGHT_LVDS  <&gpio4 11 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI1_TXC__GPIO4_IO11	0x106
		>;
	};

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXD2__CAN1_RX		0x154
			MX8MP_IOMUXC_SAI5_RXD1__CAN1_TX		0x154
		>;
	};

	pinctrl_flexcan1_reg: flexcan1reggrp {
		fsl,pins = <
#define GP_CAN1_STANDBY	<&gpio3 20 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI5_RXC__GPIO3_IO20	0x154	/* CAN1_STBY */
		>;
	};

	pinctrl_key_can1: key-can1grp {
		fsl,pins = <
#define GP_CAN1_DETECT		<&gpio1 11 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11	0x16
		>;
	};

	pinctrl_hog: hoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_HDMI_CEC__HDMIMIX_HDMI_CEC		0x40000019
			MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_HDMI_SCL	0x400001c3
			MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_HDMI_SDA	0x400001c3
			MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_HDMI_HPD		0x40000019
			MX8MP_IOMUXC_NAND_DQS__GPIO3_IO14		0x41	/* TP74 */

			/* J1, RS422 */
			MX8MP_IOMUXC_SAI1_TXD7__GPIO4_IO19		0x41	/* Pin 9 */
			MX8MP_IOMUXC_SAI1_RXD4__GPIO4_IO06		0x41	/* Pin 11 */

			/* J9, Basler Camera*/
			MX8MP_IOMUXC_NAND_DATA01__GPIO3_IO07		0x41	/* Pin 17 */
			MX8MP_IOMUXC_NAND_DATA02__GPIO3_IO08		0x41	/* Pin 23 */
			MX8MP_IOMUXC_NAND_DATA00__GPIO3_IO06		0x41	/* Pin 24 */

			/* J14 LTE Modem */
			MX8MP_IOMUXC_SAI2_TXD0__GPIO4_IO26		0x41	/* Pin 32 */
			MX8MP_IOMUXC_SAI3_RXC__GPIO4_IO29		0x41	/* Pin 34 */

			/* J2 */
			MX8MP_IOMUXC_SAI5_MCLK__GPIO3_IO25		0x41	/* Pin 41 */
			MX8MP_IOMUXC_SAI5_RXD3__GPIO3_IO24		0x41	/* Pin 45 */
			MX8MP_IOMUXC_SPDIF_TX__GPIO5_IO03		0x41	/* Pin 55, TP14 */
			MX8MP_IOMUXC_SAI1_RXD2__GPIO4_IO04		0x41	/* Pin 28 */
			MX8MP_IOMUXC_SAI1_RXD3__GPIO4_IO05		0x41	/* Pin 30 */
			MX8MP_IOMUXC_SAI1_RXD5__GPIO4_IO07		0x41	/* Pin 36 */
			MX8MP_IOMUXC_SAI1_RXD6__GPIO4_IO08		0x41	/* Pin 38 */
			MX8MP_IOMUXC_SAI1_RXD7__GPIO4_IO09		0x41	/* Pin 40 */
			MX8MP_IOMUXC_SAI1_TXD0__GPIO4_IO12		0x41	/* Pin 48 */
			MX8MP_IOMUXC_SAI1_TXD1__GPIO4_IO13		0x41	/* Pin 50 */
			MX8MP_IOMUXC_SAI1_TXD2__GPIO4_IO14		0x41	/* Pin 52 */
			MX8MP_IOMUXC_SAI1_TXD3__GPIO4_IO15		0x41	/* Pin 54 */
			MX8MP_IOMUXC_SAI1_TXD4__GPIO4_IO16		0x41	/* Pin 56 */
			MX8MP_IOMUXC_SAI1_TXD5__GPIO4_IO17		0x41	/* Pin 58 */
			MX8MP_IOMUXC_SAI1_TXFS__GPIO4_IO10		0x41	/* Pin 64 */
			MX8MP_IOMUXC_SAI1_MCLK__GPIO4_IO20		0x41	/* Pin 68 */
			MX8MP_IOMUXC_ECSPI2_MOSI__GPIO5_IO11		0x41	/* Pin 72 */
			MX8MP_IOMUXC_ECSPI2_MISO__GPIO5_IO12		0x41	/* Pin 74 */
			MX8MP_IOMUXC_ECSPI2_SS0__GPIO5_IO13		0x41	/* Pin 76 */
			MX8MP_IOMUXC_ECSPI2_SCLK__GPIO5_IO10		0x41	/* Pin 80 */

			/* J8 */
			MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01		0x41	/* Pin 75 */
			MX8MP_IOMUXC_GPIO1_IO07__GPIO1_IO07		0x41	/* Pin 77 */
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10		0x41	/* Pin 83 */

			/* J33 */
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27		0x41	/* Pin 61 */
			MX8MP_IOMUXC_SAI2_RXD0__GPIO4_IO23		0x41	/* Pin 65, TP11 */
			MX8MP_IOMUXC_SAI2_TXC__GPIO4_IO25		0x41	/* Pin 67 */
			MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22		0x41	/* Pin 69 */
			MX8MP_IOMUXC_SAI2_RXFS__GPIO4_IO21		0x41	/* Pin 73 */
			MX8MP_IOMUXC_SAI2_TXFS__GPIO4_IO24		0x41	/* Pin 75 */
			MX8MP_IOMUXC_SD1_DATA4__GPIO2_IO06		0x41	/* Pin 68 */
			MX8MP_IOMUXC_SD1_DATA5__GPIO2_IO07		0x41	/* Pin 70 */
			MX8MP_IOMUXC_SD1_DATA6__GPIO2_IO08		0x41	/* Pin 72, TP15 */
			MX8MP_IOMUXC_SD1_DATA7__GPIO2_IO09		0x41	/* Pin 74, TP16 */
			MX8MP_IOMUXC_SD1_RESET_B__GPIO2_IO10		0x41	/* Pin 48 */
		>;
	};

	pinctrl_i2c2c_ov5640_mipi: i2c2c-ov5640-mipigrp {
		fsl,pins = <
			/* J10 CSI2 capture */
#define GP_OV5640_MIPI_POWER_DOWN	<&gpio5 4 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SPDIF_RX__GPIO5_IO04		0x141
#define GP_OV5640_MIPI_RESET		<&gpio5 5 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SPDIF_EXT_CLK__GPIO5_IO05		0x101
		>;
	};

	pinctrl_i2c2d_rv3028: i2c2d-rv3028grp {
		fsl,pins = <
#define GPIRQ_RV3028		<&gpio1 4 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_GPIO1_IO04__GPIO1_IO04		0x1c0
		>;
	};

	pinctrl_i2c2_pca9546: i2c2-pca9546grp {
		fsl,pins = <
#define GP_PCA9546_RESET	<&gpio1 5 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05        	0x100
		>;
	};

	pinctrl_i2c4_hd3ss3220: i2c4-hd3ss3220grp {
		fsl,pins = <
#define GPIRQ_HD3SS3220	<&gpio1 8 IRQ_TYPE_LEVEL_LOW>
			MX8MP_IOMUXC_GPIO1_IO08__GPIO1_IO08		0x16
		>;
	};

	pinctrl_pdm: pdmgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI1_RXC__AUDIOMIX_PDM_CLK			0xd6
			MX8MP_IOMUXC_SAI3_RXFS__AUDIOMIX_PDM_BIT_STREAM00	0xd6
		>;
	};

	pinctrl_pwm2: pwm2grp {
		fsl,pins = <
			/* J7 backlight connector */
			MX8MP_IOMUXC_GPIO1_IO09__PWM2_OUT	0xd6
		>;
	};

	pinctrl_pwm4: pwm4grp {
		fsl,pins = <
			/* J10, pin 6, ov5640 camera clk */
			MX8MP_IOMUXC_SAI5_RXFS__PWM4_OUT	0x116
		>;
	};

	pinctrl_reg_usbotg_vbus: reg-usbotg-vbusgrp {
		fsl,pins = <
#define GP_REG_USB_OTG_VBUS	<&gpio1 12 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_GPIO1_IO12__GPIO1_IO12	0x16
		>;
	};

	pinctrl_reg_3v8: reg-3v8grp {
		fsl,pins = <
#define GP_REG_3V8	<&gpio2 19 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02	0x16
		>;
	};

	pinctrl_sai3: sai3grp {
		fsl,pins = <
			/* wm8962 */
			MX8MP_IOMUXC_SAI3_TXFS__AUDIOMIX_SAI3_TX_SYNC	0xd6
			MX8MP_IOMUXC_SAI3_TXC__AUDIOMIX_SAI3_TX_BCLK	0xd6
			MX8MP_IOMUXC_SAI3_RXD__AUDIOMIX_SAI3_RX_DATA00	0xd6
			MX8MP_IOMUXC_SAI3_TXD__AUDIOMIX_SAI3_TX_DATA00	0xd6
			MX8MP_IOMUXC_SAI3_MCLK__AUDIOMIX_SAI3_MCLK	0xd6
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x140
			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x140
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MP_IOMUXC_ECSPI1_SCLK__UART3_DCE_RX	0x140
			MX8MP_IOMUXC_ECSPI1_MOSI__UART3_DCE_TX	0x140
#define GP_UART3_RS485_RX_EN	<&gpio5 9 GPIO_ACTIVE_HIGH>	/* really active low */
			MX8MP_IOMUXC_ECSPI1_SS0__GPIO5_IO09	0x140
#define GP_UART3_RS485_TX_EN	<&gpio5 8 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_ECSPI1_MISO__GPIO5_IO08	0x100
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART4_RXD__UART4_DCE_RX	0x140
			MX8MP_IOMUXC_UART4_TXD__UART4_DCE_TX	0x140
#define GP_UART4_RS485_RX_EN	<&gpio5 13 GPIO_ACTIVE_HIGH>	/* really active low */
			MX8MP_IOMUXC_ECSPI2_SS0__GPIO5_IO13	0x140
#define GP_UART4_RS485_TX_EN	<&gpio5 12 GPIO_ACTIVE_HIGH>
			MX8MP_IOMUXC_ECSPI2_MISO__GPIO5_IO12	0x100
		>;
	};

	pinctrl_usb3_0: usb3-0grp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO13__USB1_OC	0x1c0
		>;
	};

	pinctrl_usb3_1: usb3-1grp {
		fsl,pins = <
#define GP_USB3_1_HUB_RESET	<&gpio1 6 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_GPIO1_IO06__GPIO1_IO06	0x16
		>;
	};

	pinctrl_usdhc1: usdhc1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x190
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d0
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d0
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d0
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d0
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d0
			MX8MP_IOMUXC_GPIO1_IO03__USDHC1_VSELECT	0x116
		>;
	};

	pinctrl_usdhc1_100mhz: usdhc1grp-100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x194
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d4
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d4
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d4
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d4
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d4
		>;
	};

	pinctrl_usdhc1_200mhz: usdhc1grp-200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD1_CLK__USDHC1_CLK	0x196
			MX8MP_IOMUXC_SD1_CMD__USDHC1_CMD	0x1d6
			MX8MP_IOMUXC_SD1_DATA0__USDHC1_DATA0	0x1d6
			MX8MP_IOMUXC_SD1_DATA1__USDHC1_DATA1	0x1d6
			MX8MP_IOMUXC_SD1_DATA2__USDHC1_DATA2	0x1d6
			MX8MP_IOMUXC_SD1_DATA3__USDHC1_DATA3	0x1d6
		>;
	};

	pinctrl_usdhc1_gpio: usdhc1grp-gpio {
		fsl,pins = <
#define GP_USDHC1_CD	<&gpio2 11 GPIO_ACTIVE_LOW>
			MX8MP_IOMUXC_SD1_STROBE__GPIO2_IO11	0x1c4
		>;
	};
};

/ {
	model = "Boundary i.MX 8M Plus BM board";
	compatible = "boundary,imx8mp-bm", "fsl,imx8mp";

	aliases {
		backlight_lvds = &backlight_lvds;
		backlight_lvds2 = &backlight_lvds;
		fb_lvds = &lcdif2;
		fb_lvds2 = &lcdif2;
		fb_hdmi = &lcdif3;
		lcdif = &lcdif1;
		ldb = &ldb;
		ldb_chan = &ldb_chan;
		ldb_chan2 = &ldb_chan2;
		pwm_lvds = &pwm2;
		pwm_lvds2 = &pwm2;
		sound_hdmi= &sound_hdmi;
		t_lvds = &t_lvds;
		t_lvds2 = &t_lvds2;
		usb_mux = &usb_mux;
	};

	backlight_lvds: backlight-lvds {
		brightness-levels = <0 1 2 3 4 5 6 7 8 9 10>;
		compatible = "pwm-backlight";
		default-brightness-level = <8>;
		enable-gpios = GP_BACKLIGHT_LVDS;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_backlight_lvds>;
		pwms = <&pwm2 0 100000 0>;
		status = "disabled";

	};

	chosen {
		stdout-path = &uart2;
	};

	connector {
		compatible = "usb-c-connector";
		label = "USB-C";
		data-role = "dual";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				hs_ep: endpoint {
					remote-endpoint = <&usb3_hs_ep>;
				};
			};

			port@1 {
				reg = <1>;
				ss_ep: endpoint {
					remote-endpoint = <&hd3ss3220_in_ep>;
				};
			};
		};
	};

	csi_mclk: csi-mclk {
		compatible = "pwm-clock";
		#clock-cells = <0>;
		clock-frequency = <20000000>;
		clock-output-names = "csi_mclk";
		pwms = <&pwm4 0 50 0>; /* 1 / 50 ns = 20 MHz */
	};

	gpio_keys: gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_key_can1>;

		can1 {
			label = "can1 detect";
			gpios = GP_CAN1_DETECT;
			linux,code = <KEY_1>;
		};
	};

	reg_can1_stby: regulator-can1-stby {
		compatible = "regulator-fixed";
		regulator-name = "can1-stby";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_flexcan1_reg>;
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = GP_CAN1_STANDBY;
	};

	reg_usb_otg_vbus: regulator-usb-otg-vbus {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_usbotg_vbus>;
		regulator-name = "usb_otg_vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = GP_REG_USB_OTG_VBUS;
		enable-active-high;
	};

	reg_vref_2v5: regulator-vref-2v5 {
		compatible = "regulator-fixed";
		regulator-name = "vref-2v5";
		regulator-min-microvolt = <2500000>;
		regulator-max-microvolt = <2500000>;
	};

	reg_3v8: regulator-3v8 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_3v8>;
		regulator-name = "reg_3v8";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = GP_REG_3V8;
		startup-delay-us = <70000>;
		enable-active-high;
	};

	sound_hdmi: sound-hdmi {
		compatible = "fsl,imx-audio-hdmi";
		model = "audio-hdmi";
		audio-cpu = <&aud2htx>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "okay";
	};

	sound-wm8962 {
#if 0
		asrc-controller = <&easrc>;
#endif
		audio-cpu = <&sai3>;
		audio-codec = <&wm8962>;
		audio-routing =
			"Ext Spk", "SPK_LP",
			"Ext Spk", "SPK_LN";
#if 0
			"CPU-Playback", "ASRC-Playback",
			"Playback", "CPU-Playback";
#endif
		codec-master;
		compatible = "fsl,imx-audio-wm8962";
		model = "wm8962-audio";
	};

	sound-micfil {
		compatible = "fsl,imx-audio-micfil";
		model = "imx-audio-micfil";
		cpu-dai = <&micfil>;
	};
};

&aud2htx {
	status = "okay";
};

&cameradev {
	status = "okay";
};

&dewarp {
	status = "okay";
};

&dsp {
	status = "okay";
};

&easrc {
	fsl,asrc-rate  = <48000>;
	status = "okay";
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_can1_stby>;
	status = "okay";
};

&hdmi {
	status = "okay";
};

&hdmiphy {
	status = "okay";
};

&hdmi_blk_ctrl {
	status = "okay";
};

&hdmi_pavi {
	status = "okay";
};

&i2c2 {
	pca9546: i2cmux9546@70 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2_pca9546>;
		compatible = "nxp,pca9546";
		reg = <0x70>;
		reset-gpios = GP_PCA9546_RESET;
		#address-cells = <1>;
		#size-cells = <0>;

		i2c2a: i2c2@0 {
			clock-frequency = <100000>;
			reg = <0>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c2b: i2c2@1 {
			/* J9  - camera*/
			clock-frequency = <100000>;
			reg = <1>;
			#address-cells = <1>;
			#size-cells = <0>;
			/* edid  @50 */
		};

		i2c2c: i2c2@2 {
			/* J10 - camera */
			clock-frequency = <100000>;
			reg = <2>;
			#address-cells = <1>;
			#size-cells = <0>;
		};

		i2c2d: i2c2@3 {
			/* rtc, J11 mipi */
			clock-frequency = <100000>;
			reg = <3>;
			#address-cells = <1>;
			#size-cells = <0>;
		};
	};
};

&i2c2b {
	basler_camera@36 {
		compatible = "basler,basler-camera-vvcam", "basler-camera-vvcam";
		reg = <0x36>;
		csi_id = <0x00>;
		status = "okay";

		port {
			basler_ep_0: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2 3 4>;
				link-frequencies = /bits/ 64 <750000000>;
				max-lane-frequency = /bits/ 64 <750000000>;
				max-pixel-frequency = /bits/ 64 <266000000>;
				max-data-rate = /bits/ 64 <0>;
				remote-endpoint = <&mipi_csi0_ep>;
			};
		};
	};
};

&i2c2c {
	ov5640-mipi1@3c {
		AVDD-supply = <&reg_vref_2v5>;
		DOVDD-supply = <&reg_vref_1v8>;
		DVDD-supply = <&reg_vref_3v3>;
		clocks = <&csi_mclk>;
		clock-names = "xclk";
		compatible = "ovti,ov5640";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2c_ov5640_mipi>;
		powerdown-gpios = GP_OV5640_MIPI_POWER_DOWN;
		reg = <0x3c>;
		reset-gpios = GP_OV5640_MIPI_RESET;
		status = "okay";

		port {
			ov5640_mipi1_ep: endpoint {
				clock-lanes = <0>;
				data-lanes = <1 2>;
				remote-endpoint = <&mipi1_ov5640_ep>;
			};
		};
	};
};

&i2c2d {
	rtc@52 {
		backup-switchover-dsm;
		compatible = "microcrystal,rv3028";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c2d_rv3028>;
		reg = <0x52>;
		interrupts-extended = GPIRQ_RV3028;
		wakeup-source;
	};
};

&i2c3 {
	wm8962: codec@1a {
		AVDD-supply = <&reg_vref_1v8>;
		CPVDD-supply = <&reg_vref_1v8>;
		DBVDD-supply = <&reg_vref_3v3>;
		DCVDD-supply = <&reg_vref_1v8>;
		MICVDD-supply = <&reg_vref_3v3>;
		PLLVDD-supply = <&reg_vref_1v8>;
		SPKVDD1-supply = <&reg_vref_5v0>;
		SPKVDD2-supply = <&reg_vref_5v0>;
		clocks = <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_MCLK1>;
		compatible = "wlf,wm8962";
		gpio-cfg = <
			0x0000 /* n/c */
			0x0001 /* gpio2, 1: default */
			0x0013 /* gpio3, 2: dmicclk */
			0x0000 /* n/c, 3: default */
			0x8014 /* gpio5, 4: dmic_dat */
			0x0000 /* gpio6, 5: default */
		>;
		mic-cfg = <0x200>;
		reg = <0x1a>;
		#sound-dai-cells = <0>;
	};
};

&i2c4 {
	usb_mux: hd3ss3220@47 {
		/* tusb320 is compatible with hd3ss3220 */
		compatible = "ti,hd3ss3220";
		interrupts-extended = GPIRQ_HD3SS3220;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_i2c4_hd3ss3220>;
		reg = <0x47>;

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				hd3ss3220_in_ep: endpoint {
					remote-endpoint = <&ss_ep>;
				};
			};

			port@1 {
				reg = <1>;
				hd3ss3220_out_ep: endpoint {
					remote-endpoint = <&usb3_role_switch>;
				};
			};
		};
	};
};

&irqsteer_hdmi {
	status = "okay";
};

&isi_0 {
	status = "disabled";
};

&isi_1 {
	status = "okay";
};

&isp_0 {
	status = "okay";
};

&isp_1 {
	status = "disabled";
};

&ldb {
	lvds-channel@0 {
		backlight = <&backlight_lvds>;
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;

		display-timings {
			t_lvds: t_lvds_default {
				/* m101nwwb by default */
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
			};
		};
	};

	lvds-channel@1 {
		backlight = <&backlight_lvds>;
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;

		display-timings {
			t_lvds2: t_lvds_default {
				/* m101nwwb by default */
				clock-frequency = <74250000>;
				hactive = <1280>;
				vactive = <800>;
				hback-porch = <5>;
				hfront-porch = <123>;
				vback-porch = <3>;
				vfront-porch = <24>;
				hsync-len = <1>;
				vsync-len = <1>;
			};
		};
	};
};

&ldb_phy {
	status = "okay";
};

&micfil {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pdm>;
	assigned-clocks = <&clk IMX8MP_CLK_PDM>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <196608000>;
	status = "okay";
};

&mipi_csi_0 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	port@0 {
		reg = <0>;

		mipi_csi0_ep: endpoint {
			csis-clk-settle = <2>;
			csis-hs-settle = <16>;
			csis-wclk;
			data-lanes = <4>;
			remote-endpoint = <&basler_ep_0>;
		};
	};
};

&mipi_csi_1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	port@1 {
		reg = <1>;

		mipi1_ov5640_ep: endpoint {
			remote-endpoint = <&ov5640_mipi1_ep>;
			data-lanes = <2>;
			csis-hs-settle = <13>;
			csis-clk-settle = <2>;
			csis-wclk;
		};
	};
};

&mix_gpu_ml {
	status = "okay";
};

&ml_vipsi {
	status = "okay";
};

&pwm2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm2>;
	status = "okay";
};

&pwm4 {
	assigned-clocks = <&clk IMX8MP_CLK_PWM4>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_40M>;
	assigned-clock-rates = <40000000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm4>;
	status = "okay";
};

&sai3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
	assigned-clocks = <&clk IMX8MP_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
	assigned-clock-rates = <12288000>;
	clocks = <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_IPG>, <&clk IMX8MP_CLK_DUMMY>,
		 <&audio_blk_ctrl IMX8MP_CLK_AUDIO_BLK_CTRL_SAI3_MCLK1>, <&clk IMX8MP_CLK_DUMMY>,
		 <&clk IMX8MP_CLK_DUMMY>;
	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3";
	fsl,sai-mclk-direction-output;
	status = "okay";
};

&uart2 {
	/* console */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	control-gpios = GP_UART3_RS485_TX_EN, GP_UART3_RS485_RX_EN;
	linux,rs485-enabled-at-boot-time;
	off_levels = <2>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	rs232_levels = <1>;
	rs232_txen_mask = <1>;
	rs232_txen_levels = <1>;
	rs485_levels = <0>;	/* enable rx */
	rs485_txen_mask = <1>;
	rs485_txen_levels = <1>;
	rxact_mask = <0>;	/* this is for rx activity led */
	rxact_levels = <0>;
	status = "okay";
};

&uart4 {
	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
	control-gpios = GP_UART4_RS485_TX_EN, GP_UART4_RS485_RX_EN;
	linux,rs485-enabled-at-boot-time;
	off_levels = <2>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	rs232_levels = <1>;
	rs232_txen_mask = <1>;
	rs232_txen_levels = <1>;
	rs485_levels = <0>;	/* enable rx */
	rs485_txen_mask = <1>;
	rs485_txen_levels = <1>;
	rxact_mask = <0>;	/* this is for rx activity led */
	rxact_levels = <0>;
	status = "okay";
};

&usb3_0 {
	fsl,over-current-active-low;
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_0 {
	dr_mode = "otg";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_0>;
	status = "okay";
	usb-role-switch;
	vbus-supply = <&reg_usb_otg_vbus>;

	ports {
		#address-cells = <1>;
		#size-cells = <0>;

		port@0 {
			reg = <0>;
			usb3_hs_ep: endpoint {
				remote-endpoint = <&hs_ep>;
			};
		};

		port@1 {
			reg = <1>;
			usb3_role_switch: endpoint {
				remote-endpoint = <&hd3ss3220_out_ep>;
			};
		};
	};
};

&usb_dwc3_1 {
	dr_mode = "host";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usb3_1>;
	reset-gpios = GP_USB3_1_HUB_RESET;
	status = "okay";
};

&usb3_phy0 {
	fsl,phy-tx-preemp-amp-tune = <2>;
	status = "okay";
	vbus-supply = <&reg_vref_5v0>;
};

&usb3_phy1 {
	fsl,phy-tx-preemp-amp-tune = <2>;
	status = "okay";
	vbus-supply = <&reg_vref_5v0>;
};

&usdhc1 {
	bus-width = <4>;
	cd-gpios = GP_USDHC1_CD;
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc1>, <&pinctrl_usdhc1_gpio>;
	pinctrl-1 = <&pinctrl_usdhc1_100mhz>, <&pinctrl_usdhc1_gpio>;
	pinctrl-2 = <&pinctrl_usdhc1_200mhz>, <&pinctrl_usdhc1_gpio>;
	status = "okay";
	vmmc-supply = <&reg_vref_3v3>;
};
