/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2020 MediaTek Inc.
 */

#ifndef _HDMI_RX2_HW_H_
#define _HDMI_RX2_HW_H_

/*** hdmirx2 register read/write ***/
#define Fld(wid, shft, ac) (((u32)wid << 16) | (shft << 8) | ac)
#define Fld_wid(fld) ((u8)((fld) >> 16))
#define Fld_shft(fld) ((u8)((fld) >> 8))
#define Fld_ac(fld) ((u8)(fld))
#define Fld2Msk32(fld) ((0xffffffff >> (32 - Fld_wid(fld))) << Fld_shft(fld))
#define FLD_BMSK(_bits_) Fld((((1)?_bits_)-((0)?_bits_)+1), ((0)?_bits_), AC_MSKW10)
#define FLD_BIT(x) Fld(1, (x), AC_MSKW10)

#define AC_FULLB0 1
#define AC_FULLB1 2
#define AC_FULLB2 3
#define AC_FULLB3 4
#define AC_FULLW10 5
#define AC_FULLW21 6
#define AC_FULLW32 7
#define AC_FULLDW 8
#define AC_MSKB0 11
#define AC_MSKB1 12
#define AC_MSKB2 13
#define AC_MSKB3 14
#define AC_MSKW10 15
#define AC_MSKW21 16
#define AC_MSKW32 17
#define AC_MSKDW 18

#ifndef BIT
#define BIT(_bit_) (1 << (_bit_))
#endif
#define BMASK(_bits_) (BIT(((1)?_bits_)+1)-BIT(((0)?_bits_)))

#define r_reg_1b(reg) (readb((void __iomem *)reg) & 0xff)
#define r_reg(reg) (readl((void __iomem *)reg) & 0xffffffff)
#define w_reg(reg, val) writel(val, (void __iomem *)reg)
#define w_reg_mark(reg, val, mark)                                             \
	w_reg(reg, ((r_reg(reg) & (~(mark))) | ((val) & (mark))))
#define pw_reg(reg, val) \
	writel((val | 0xFFFF0000), (void __iomem *)reg)
#define pw_reg_mark(reg, val, mark) \
	w_reg(reg, ((r_reg(reg) & (~(mark))) | ((val) & (mark)) | 0xFFFF0000))

#define r_fld(reg, fld) ((r_reg(reg) & Fld2Msk32(fld)) >> Fld_shft(fld))
#define w_fld(reg, val, fld)                                               \
	w_reg_mark(reg, ((u32)(val) << Fld_shft(fld)), Fld2Msk32(fld))
#define pw_fld(reg, val, fld)                                               \
	pw_reg_mark(reg, ((u32)(val) << Fld_shft(fld)), Fld2Msk32(fld))

// Page HDMI20_RX_MAC_1
#define RX_PWD_CTRL (RX_ADR + 0x000)
#define REG_CORE_ISO_EN Fld(1, 0, AC_MSKB0)	//[0:0]
#define RI_PWD_ISOLATION_EN Fld(1, 1, AC_MSKB0)    //[1:1]
#define REG_TMDS_MODE_INV Fld(1, 4, AC_MSKB0)      //[4:4]
#define REG_DVI_RX_DIG_BYPASS Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_MHL3CE_SEL_RX Fld(1, 7, AC_MSKB0)      //[7:7]
#define REG_TDM_TX_SRST Fld(1, 8, AC_MSKB1)	//[8:8]
#define REG_TDM_RX_SRST Fld(1, 9, AC_MSKB1)	//[9:9]
#define REG_COCSNK_SRST Fld(1, 10, AC_MSKB1)       //[10:10]
#define REG_DOCSNK_SRST Fld(1, 11, AC_MSKB1)       //[11:11]
#define REG_TDM_SRST Fld(1, 12, AC_MSKB1)	  //[12:12]
#define REG_HDMI20_CORE_RST Fld(1, 15, AC_MSKB1)   //[15:15]
#define REG_AUD_FIFO_RST_AUTO Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_FIFO_RST Fld(1, 17, AC_MSKB2)	  //[17:17]
#define REG_ACR_RST Fld(1, 18, AC_MSKB2)	   //[18:18]
#define REG_HDCP_RST Fld(1, 19, AC_MSKB2)	  //[19:19]
#define REG_DC_FIFO_RST Fld(1, 20, AC_MSKB2)       //[20:20]
#define REG_AAC_RST Fld(1, 21, AC_MSKB2)	   //[21:21]
#define REG_ACR_RST_AUTO Fld(1, 22, AC_MSKB2)      //[22:22]
#define REG_HDCP_RST_AUTO Fld(1, 23, AC_MSKB2)     //[23:23]
#define REG_PD_ALL_HD20 Fld(1, 24, AC_MSKB3)       //[24:24]
#define REG_SYNC_POL Fld(1, 25, AC_MSKB3)	  //[25:25]
#define REG_HD20_SW_RST Fld(1, 26, AC_MSKB3)       //[26:26]
#define REG_SW_RST_AUTO Fld(1, 27, AC_MSKB3)       //[27:27]
#define REG_OSC_RST Fld(1, 28, AC_MSKB3)	   //[28:28]
#define REG_HDCP2X_CRST_N Fld(1, 29, AC_MSKB3)     //[29:29]
#define REG_HDCP2X_ERST_N Fld(1, 30, AC_MSKB3)     //[30:30]
#define VSYNC_CAP Fld(1, 31, AC_MSKB3)		   //[31:31]
#define SYS_TMDS_CH_MAP (RX_ADR + 0x004)
#define REG_DI_CH0_SEL Fld(2, 0, AC_MSKB0)	//[1:0]
#define REG_DI_CH1_SEL Fld(2, 2, AC_MSKB0)	//[3:2]
#define REG_DI_CH2_SEL Fld(2, 4, AC_MSKB0)	//[5:4]
#define REG_DI_CH0_BSI Fld(1, 8, AC_MSKB1)	//[8:8]
#define REG_DI_CH1_BSI Fld(1, 9, AC_MSKB1)	//[9:9]
#define REG_DI_CH2_BSI Fld(1, 10, AC_MSKB1)       //[10:10]
#define REG_DI_CH0_INVT Fld(1, 11, AC_MSKB1)      //[11:11]
#define REG_DI_CH1_INVT Fld(1, 12, AC_MSKB1)      //[12:12]
#define REG_DI_CH2_INVT Fld(1, 13, AC_MSKB1)      //[13:13]
#define REG_PHY_DI_DFF_EN Fld(1, 14, AC_MSKB1)    //[14:14]
#define REG_FIFORDY_CLR_EN Fld(3, 16, AC_MSKB2)   //[18:16]
#define REG_HDMI_MODE_CLR_EN Fld(1, 19, AC_MSKB2) //[19:19]
#define REG_HDCP2_TRST Fld(1, 24, AC_MSKB3)       //[24:24]
#define REG_HDCP2_TRST_AUTO Fld(1, 25, AC_MSKB3)  //[25:25]
#define REG_HDCP2X_ERST Fld(1, 26, AC_MSKB3)      //[26:26]
#define REG_HDCP2X_CRST Fld(1, 27, AC_MSKB3)      //[27:27]
#define REG_DACR_RST Fld(1, 28, AC_MSKB3)	 //[28:28]
#define REG_RXAV_LSRST Fld(1, 31, AC_MSKB3)       //[31:31]
#define RX_TMDS_CCTRL2 (RX_ADR + 0x008)
#define REG_DC_CTL Fld(4, 0, AC_MSKB0)		   //[3:0]
#define REG_DC_CTL_OW Fld(1, 4, AC_MSKB0)	  //[4:4]
#define REG_OFFSET_COEN Fld(1, 5, AC_MSKB0)	//[5:5]
#define RI_HDCP2X_EN Fld(1, 8, AC_MSKB1)	   //[8:8]
#define RI_HDCP2X_INTR_MASK Fld(1, 10, AC_MSKB1)   //[10:10]
#define HDCP2X_MODE_SEL Fld(1, 15, AC_MSKB1)       //[15:15]
#define REG_VIDPATH_PAGE_CTRL Fld(2, 16, AC_MSKB2) //[17:16]
#define REG_EXT_BIT_MODE Fld(1, 18, AC_MSKB2)      //[18:18]
#define REG_T4_CORR_THRESH Fld(7, 24, AC_MSKB3)    //[30:24]
#define RX_T4_UNTHRES (RX_ADR + 0x00C)
#define REG_T4_UNCORR_THRESH Fld(7, 0, AC_MSKB0)    //[6:0]
#define REG_HDMI_MODE_OVERWRITE Fld(1, 8, AC_MSKB1) //[8:8]
#define REG_HDMI_MODE_SW_VALUE Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_FIX_DVIHDCP Fld(1, 10, AC_MSKB1)	//[10:10]
#define REG_PREAMBLE_CRI Fld(5, 16, AC_MSKB2)       //[20:16]
#define REG_HDCP_CRI Fld(5, 24, AC_MSKB3)	   //[28:24]
#define RX_AUDP_FIFO (RX_ADR + 0x010)
#define REG_BYP_DALIGN Fld(1, 0, AC_MSKB0)    //[0:0]
#define REG_BYP_SYNC Fld(1, 1, AC_MSKB0)      //[1:1]
#define REG_BYP_DVIFILT Fld(1, 2, AC_MSKB0)   //[2:2]
#define RO_COLOR_DEPTH Fld(4, 4, AC_MSKB0)    //[7:4]
#define REG_TST_MBIST_EN Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_RBIST_CLK Fld(1, 10, AC_MSKB1)    //[10:10]
#define REG_TST_APLLCK Fld(1, 12, AC_MSKB1)   //[12:12]
#define REG_TST_PLLREF Fld(1, 15, AC_MSKB1)   //[15:15]
#define REG_TST_PCLK_EN Fld(1, 18, AC_MSKB2)  //[18:18]
#define REG_BYP_VID_PATH Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_INVERT_TCLK Fld(1, 21, AC_MSKB2)  //[21:21]
#define REG_TST_CKDT Fld(1, 22, AC_MSKB2)     //[22:22]
#define REG_TST_XCLK Fld(1, 23, AC_MSKB2)     //[23:23]
#define REG_PD_TOTAL Fld(1, 24, AC_MSKB3)     //[24:24]
#define HDMI_FIFO_DIFF Fld(7, 25, AC_MSKB3)   //[31:25]
#define RX_PD_SYS3 (RX_ADR + 0x014)
#define REG_PD_MCLK Fld(1, 6, AC_MSKB0) //[6:6]
#define REG_PD_PCLK Fld(1, 7, AC_MSKB0) //[7:7]
#define RX_INTR4 (RX_ADR + 0x018)
#define REG_INTR1_STAT0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR1_STAT1 Fld(1, 1, AC_MSKB0)  //[1:1]
#define REG_INTR1_STAT2 Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_INTR1_STAT3 Fld(1, 3, AC_MSKB0)  //[3:3]
#define REG_INTR1_STAT4 Fld(1, 4, AC_MSKB0)  //[4:4]
#define REG_INTR1_STAT5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR1_STAT6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR1_STAT7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR2_STAT0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR2_STAT1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR2_STAT2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR2_STAT6 Fld(1, 14, AC_MSKB1) //[14:14]
#define REG_INTR2_STAT7 Fld(1, 15, AC_MSKB1) //[15:15]
#define REG_INTR3_STAT0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR3_STAT1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR3_STAT2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR3_STAT3 Fld(1, 19, AC_MSKB2) //[19:19]
#define REG_INTR3_STAT4 Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_INTR3_STAT5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR3_STAT6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR3_STAT7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR4_STAT0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR4_STAT1 Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_INTR4_STAT2 Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_INTR4_STAT3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR4_STAT4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR4_STAT5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR4_STAT6 Fld(1, 30, AC_MSKB3) //[30:30]
#define REG_INTR4_STAT7 Fld(1, 31, AC_MSKB3) //[31:31]
#define RX_INTR8 (RX_ADR + 0x01C)
#define REG_INTR5_STAT0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR5_STAT5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR5_STAT6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR5_STAT7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR6_STAT1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR6_STAT2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR6_STAT3 Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_INTR6_STAT4 Fld(1, 12, AC_MSKB1) //[12:12]
#define REG_INTR6_STAT5 Fld(1, 13, AC_MSKB1) //[13:13]
#define REG_INTR6_STAT6 Fld(1, 14, AC_MSKB1) //[14:14]
#define REG_INTR6_STAT7 Fld(1, 15, AC_MSKB1) //[15:15]
#define REG_INTR7_STAT0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR7_STAT1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR7_STAT2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR7_STAT5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR7_STAT6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR7_STAT7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR8_STAT0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR8_STAT3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR8_STAT4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR8_STAT5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR8_STAT6 Fld(1, 30, AC_MSKB3) //[30:30]
#define REG_INTR8_STAT7 Fld(1, 31, AC_MSKB3) //[31:31]
#define RX_INTR12 (RX_ADR + 0x020)
#define REG_INTR9_STAT0 Fld(1, 0, AC_MSKB0)   //[0:0]
#define REG_INTR9_STAT1 Fld(1, 1, AC_MSKB0)   //[1:1]
#define REG_INTR9_STAT2 Fld(1, 2, AC_MSKB0)   //[2:2]
#define REG_INTR9_STAT3 Fld(1, 3, AC_MSKB0)   //[3:3]
#define REG_INTR9_STAT4 Fld(1, 4, AC_MSKB0)   //[4:4]
#define REG_INTR9_STAT5 Fld(1, 5, AC_MSKB0)   //[5:5]
#define REG_INTR9_STAT6 Fld(1, 6, AC_MSKB0)   //[6:6]
#define REG_INTR9_STAT7 Fld(1, 7, AC_MSKB0)   //[7:7]
#define REG_INTR10_STAT0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR10_STAT1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR10_STAT2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR10_STAT3 Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_INTR11_STAT0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR11_STAT1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR11_STAT2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR11_STAT3 Fld(1, 19, AC_MSKB2) //[19:19]
#define REG_INTR11_STAT4 Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_INTR11_STAT5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR11_STAT6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR11_STAT7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR12_STAT0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR12_STAT1 Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_INTR12_STAT2 Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_INTR12_STAT3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR12_STAT4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR12_STAT5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR12_STAT6 Fld(1, 30, AC_MSKB3) //[30:30]
#define RX_INTR13 (RX_ADR + 0x024)
#define REG_INTR13_STAT0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR13_STAT1 Fld(1, 1, AC_MSKB0)  //[1:1]
#define REG_INTR13_STAT2 Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_INTR13_STAT3 Fld(1, 3, AC_MSKB0)  //[3:3]
#define REG_INTR13_STAT4 Fld(1, 4, AC_MSKB0)  //[4:4]
#define REG_INTR13_STAT5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR13_STAT6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR13_STAT7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR14_STAT0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR14_STAT1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR14_STAT2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR14_STAT3 Fld(1, 11, AC_MSKB1) //[11:11]
#define RX_INTR4_MASK (RX_ADR + 0x028)
#define REG_INTR1_MASK0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR1_MASK1 Fld(1, 1, AC_MSKB0)  //[1:1]
#define REG_INTR1_MASK2 Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_INTR1_MASK3 Fld(1, 3, AC_MSKB0)  //[3:3]
#define REG_INTR1_MASK4 Fld(1, 4, AC_MSKB0)  //[4:4]
#define REG_INTR1_MASK5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR1_MASK6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR1_MASK7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR2_MASK0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR2_MASK1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR2_MASK2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR2_MASK6 Fld(1, 14, AC_MSKB1) //[14:14]
#define REG_INTR2_MASK7 Fld(1, 15, AC_MSKB1) //[15:15]
#define REG_INTR3_MASK0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR3_MASK1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR3_MASK2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR3_MASK3 Fld(1, 19, AC_MSKB2) //[19:19]
#define REG_INTR3_MASK4 Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_INTR3_MASK5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR3_MASK6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR3_MASK7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR4_MASK0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR4_MASK1 Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_INTR4_MASK2 Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_INTR4_MASK3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR4_MASK4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR4_MASK5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR4_MASK6 Fld(1, 30, AC_MSKB3) //[30:30]
#define REG_INTR4_MASK7 Fld(1, 31, AC_MSKB3) //[31:31]
#define RX_INTR8_MASK (RX_ADR + 0x02C)
#define REG_INTR5_MASK0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR5_MASK5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR5_MASK6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR5_MASK7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR6_MASK1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR6_MASK2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR6_MASK3 Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_INTR6_MASK4 Fld(1, 12, AC_MSKB1) //[12:12]
#define REG_INTR6_MASK5 Fld(1, 13, AC_MSKB1) //[13:13]
#define REG_INTR6_MASK6 Fld(1, 14, AC_MSKB1) //[14:14]
#define REG_INTR6_MASK7 Fld(1, 15, AC_MSKB1) //[15:15]
#define REG_INTR7_MASK0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR7_MASK1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR7_MASK2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR7_MASK5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR7_MASK6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR7_MASK7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR8_MASK0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR8_MASK3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR8_MASK4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR8_MASK5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR8_MASK6 Fld(1, 30, AC_MSKB3) //[30:30]
#define REG_INTR8_MASK7 Fld(1, 31, AC_MSKB3) //[31:31]
#define RX_INTR12_MASK (RX_ADR + 0x030)
#define REG_INTR9_MASK0 Fld(1, 0, AC_MSKB0)   //[0:0]
#define REG_INTR9_MASK1 Fld(1, 1, AC_MSKB0)   //[1:1]
#define REG_INTR9_MASK2 Fld(1, 2, AC_MSKB0)   //[2:2]
#define REG_INTR9_MASK3 Fld(1, 3, AC_MSKB0)   //[3:3]
#define REG_INTR9_MASK4 Fld(1, 4, AC_MSKB0)   //[4:4]
#define REG_INTR9_MASK5 Fld(1, 5, AC_MSKB0)   //[5:5]
#define REG_INTR9_MASK6 Fld(1, 6, AC_MSKB0)   //[6:6]
#define REG_INTR9_MASK7 Fld(1, 7, AC_MSKB0)   //[7:7]
#define REG_INTR10_MASK0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR10_MASK1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR10_MASK2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR10_MASK3 Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_INTR11_MASK0 Fld(1, 16, AC_MSKB2) //[16:16]
#define REG_INTR11_MASK1 Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_INTR11_MASK2 Fld(1, 18, AC_MSKB2) //[18:18]
#define REG_INTR11_MASK3 Fld(1, 19, AC_MSKB2) //[19:19]
#define REG_INTR11_MASK4 Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_INTR11_MASK5 Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_INTR11_MASK6 Fld(1, 22, AC_MSKB2) //[22:22]
#define REG_INTR11_MASK7 Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_INTR12_MASK0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_INTR12_MASK1 Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_INTR12_MASK2 Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_INTR12_MASK3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_INTR12_MASK4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_INTR12_MASK5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_INTR12_MASK6 Fld(1, 30, AC_MSKB3) //[30:30]
#define RX_INTR13_MASK (RX_ADR + 0x034)
#define REG_INTR13_MASK0 Fld(1, 0, AC_MSKB0)  //[0:0]
#define REG_INTR13_MASK1 Fld(1, 1, AC_MSKB0)  //[1:1]
#define REG_INTR13_MASK2 Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_INTR13_MASK3 Fld(1, 3, AC_MSKB0)  //[3:3]
#define REG_INTR13_MASK4 Fld(1, 4, AC_MSKB0)  //[4:4]
#define REG_INTR13_MASK5 Fld(1, 5, AC_MSKB0)  //[5:5]
#define REG_INTR13_MASK6 Fld(1, 6, AC_MSKB0)  //[6:6]
#define REG_INTR13_MASK7 Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_INTR14_MASK0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR14_MASK1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR14_MASK2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR14_MASK3 Fld(1, 11, AC_MSKB1) //[11:11]
#define DPLL_CH0_ERR_CNT2 (RX_ADR + 0x038)
#define REG_DPLL_CH0_ERR_CNT_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_DPLL_CH0_ERR_CNT_14_8_ Fld(7, 24, AC_MSKB3) //[30:24]
#define REG_DPLL_CH0_VALID Fld(1, 31, AC_MSKB3)		//[31:31]
#define DPLL_CH2_ERR_CNT2 (RX_ADR + 0x03C)
#define REG_DPLL_CH1_ERR_CNT_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_DPLL_CH1_ERR_CNT_14_8_ Fld(7, 8, AC_MSKB1)  //[14:8]
#define REG_DPLL_CH1_VALID Fld(1, 15, AC_MSKB1)		//[15:15]
#define REG_DPLL_CH2_ERR_CNT_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_DPLL_CH2_ERR_CNT_14_8_ Fld(7, 24, AC_MSKB3) //[30:24]
#define REG_DPLL_CH2_VALID Fld(1, 31, AC_MSKB3)		//[31:31]
#define SCDCS_1MS_IN_500NS_CNT1_PWD (RX_ADR + 0x040)
#define REG_DPLL_BYPASS_EN Fld(1, 0, AC_MSKB0)      //[0:0]
#define REG_DPLL_CLK_DETECTED Fld(1, 3, AC_MSKB0)   //[3:3]
#define REG_DPLL_CH_LOCKED Fld(3, 4, AC_MSKB0)      //[6:4]
#define REG_DPLL_SCRAMBLE_STAT Fld(1, 7, AC_MSKB0)  //[7:7]
#define REG_500NS_CALIB_CNT Fld(8, 8, AC_FULLB1)    //[15:8]
#define REG_1MS_IN_500NS_CNT0 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_1MS_IN_500NS_CNT1 Fld(3, 24, AC_MSKB3)  //[26:24]
#define SCDCS_CHR_ERRCNT_MAX1_PWD (RX_ADR + 0x044)
#define REG_20MS_IN_1MS_CNT Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_1S_IN_20MS_CNT Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_CHR_ERRCNT_MAX1 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_CHR_ERRCNT_MAX2 Fld(7, 24, AC_MSKB3)  //[30:24]
#define HAPLL_REPLACE_APLL2 (RX_ADR + 0x088)
#define HAPLLMODULATORINPUT Fld(25, 0, AC_MSKDW) //[24:0]
#define ACR_CONTROL_0 (RX_ADR + 0x08C)
#define TT2_NDIV4_EN Fld(1, 0, AC_MSKB0)	  //[0:0]
#define TT2_CTS_DIV4_CARRY_EN Fld(1, 1, AC_MSKB0) //[1:1]
#define TT2_CTSDIV4_EN Fld(1, 2, AC_MSKB0)	//[2:2]
#define TT2_NDIV4_CARRY_EN Fld(1, 3, AC_MSKB0)    //[3:3]
#define TT2_NMUL4_EN Fld(1, 4, AC_MSKB0)	  //[4:4]
#define TT2_CTSMUL4_EN Fld(1, 5, AC_MSKB0)	//[5:5]
#define PLL_COREID Fld(1, 6, AC_MSKB0)		  //[6:6]
#define FS_VAL_SW Fld(4, 8, AC_MSKB1)		  //[11:8]
#define FM_VAL_SW Fld(2, 12, AC_MSKB1)		  //[13:12]
#define POST_DIV2_ENA Fld(1, 14, AC_MSKB1)	//[14:14]
#define UPLL_VAL_SW Fld(7, 16, AC_MSKB2)	  //[22:16]
#define POST_VAL_SW Fld(6, 24, AC_MSKB3)	  //[29:24]

// Page HDMI20_RX_MAC_2
#define ACR_CONTROL_1 (RX_ADR + 0x090)
#define N_VAL_SW_19_0_ Fld(20, 0, AC_MSKDW) //[19:0]
#define FS_HW_SW_SEL Fld(1, 20, AC_MSKB2)   //[20:20]
#define N_HW_SW_SEL Fld(1, 21, AC_MSKB2)    //[21:21]
#define CTS_HW_SW_SEL Fld(1, 22, AC_MSKB2)  //[22:22]
#define UPLL_HW_SW_SEL Fld(1, 23, AC_MSKB2) //[23:23]
#define POST_HW_SW_SEL Fld(1, 24, AC_MSKB3) //[24:24]
#define FM_IN_VAL_SW Fld(2, 25, AC_MSKB3)   //[26:25]
#define ACR_CONTROL_2 (RX_ADR + 0x094)
#define CTS_VAL_SW_19_0_ Fld(20, 0, AC_MSKDW) //[19:0]
#define LK_WIN_SW Fld(8, 24, AC_FULLB3)       //[31:24]
#define ACR_CONTROL_3 (RX_ADR + 0x098)
#define LK_THRS_SVAL_19_0_ Fld(20, 0, AC_MSKDW) //[19:0]
#define LOG_WIN_ENA Fld(1, 20, AC_MSKB2)	//[20:20]
#define POLE Fld(3, 21, AC_MSKB2)		//[23:21]
#define ZERO Fld(3, 24, AC_MSKB3)		//[26:24]
#define CLIP Fld(4, 27, AC_MSKB3)		//[30:27]
#define WRAP Fld(1, 31, AC_MSKB3)		//[31:31]
#define ACR_CONTROL_4 (RX_ADR + 0x09C)
#define SDREF Fld(3, 0, AC_MSKB0)		 //[2:0]
#define USOVRVAL Fld(3, 3, AC_MSKB0)		 //[5:3]
#define FS32OVRVAL Fld(1, 6, AC_MSKB0)		 //[6:6]
#define MODOVRVAL Fld(2, 8, AC_MSKB1)		 //[9:8]
#define USOVR Fld(1, 10, AC_MSKB1)		 //[10:10]
#define FS32OVR Fld(1, 11, AC_MSKB1)		 //[11:11]
#define SDINOVR Fld(1, 12, AC_MSKB1)		 //[12:12]
#define MODOVR Fld(1, 13, AC_MSKB1)		 //[13:13]
#define CTS_THRESH Fld(4, 16, AC_MSKB2)		 //[19:16]
#define ACR_INIT_WP Fld(1, 20, AC_MSKB2)	 //[20:20]
#define CTS_REUSED_AUTO_EN Fld(1, 21, AC_MSKB2)  //[21:21]
#define CTS_DROPPED_AUTO_EN Fld(1, 22, AC_MSKB2) //[22:22]
#define NCLKSEL Fld(1, 23, AC_MSKB2)		 //[23:23]
#define EXT_NCLK Fld(1, 24, AC_MSKB3)		 //[24:24]
#define PRESDIVSELOVR Fld(1, 25, AC_MSKB3)       //[25:25]
#define PREDIVSELOVRSEL Fld(1, 26, AC_MSKB3)     //[26:26]
#define ACR_CONTROL_5 (RX_ADR + 0x0A0)
#define SDINOVRVAL Fld(32, 0, AC_FULLDW) //[31:0]
#define ACR_CONTROL_6 (RX_ADR + 0x0A4)
#define SDINOVRVAL1 Fld(8, 0, AC_FULLB0)	   //[7:0]
#define CTS_FINE_STEP Fld(8, 8, AC_FULLB1)	 //[15:8]
#define CTS_ROUGH_STEP Fld(8, 16, AC_FULLB2)       //[23:16]
#define PTR_DIFF_HIGH_TH_HD20 Fld(6, 24, AC_MSKB3) //[29:24]
#define ACR_CONTROL_7 (RX_ADR + 0x0A8)
#define CTS_STABLE_CNT_TH Fld(16, 0, AC_FULLW10)	    //[15:0]
#define CTS_REAL_STABLE_CNT_TH_HD20 Fld(16, 16, AC_FULLW32) //[31:16]
#define ACR_CONTROL_8 (RX_ADR + 0x0AC)
#define CTS_HW_ADP_EN_HD20 Fld(1, 4, AC_MSKB0)      //[4:4]
#define CTS_LOCK_ALG_SEL Fld(3, 5, AC_MSKB0)	//[7:5]
#define NCLK_CNT_TH Fld(8, 8, AC_FULLB1)	    //[15:8]
#define CTS_PRE_STABLE_CNT_TH Fld(8, 16, AC_FULLB2) //[23:16]
#define XTAL_24M_CLK_SEL Fld(1, 24, AC_MSKB3)       //[24:24]
#define ACR_CONTROL_10 (RX_ADR + 0x0B4)
#define REG_HADDS2_PCW_SW Fld(31, 0, AC_MSKDW) //[30:0]
#define ACR_CONTROL_11 (RX_ADR + 0x0B8)
#define FB_DIV_SW Fld(7, 0, AC_MSKB0)			//[6:0]
#define PCW_CHG_SW Fld(1, 7, AC_MSKB0)			//[7:7]
#define HD20_PCW_DATA_SEL Fld(1, 8, AC_MSKB1)		//[8:8]
#define HD20_FB_DIV_DATA_SEL Fld(1, 9, AC_MSKB1)	//[9:9]
#define HD20_PCW_DATA_X2_SEL Fld(1, 10, AC_MSKB1)       //[10:10]
#define HD20_PCW_DATA_SEL_FOR_40NM Fld(1, 11, AC_MSKB1) //[11:11]
#define HD20_PCW_DATA_DIV Fld(2, 12, AC_MSKB1)		//[13:12]
#define REG_APLL_STATUS_SEL Fld(1, 14, AC_MSKB1)	//[14:14]
#define DIG_PHY_CONTROL_0 (RX_ADR + 0x0BC)
#define REG_DIG_PHY_RSTB Fld(1, 0, AC_MSKB0) //[0:0]
#define C_PRBS_AMOUNT Fld(16, 8, AC_FULLW21) //[23:8]
#define C_PRBS_THCNT Fld(8, 24, AC_FULLB3)   //[31:24]
#define DIG_PHY_CONTROL_1 (RX_ADR + 0x0C0)
#define C_PRBS_EN Fld(1, 0, AC_MSKB0)		      //[0:0]
#define C_DATA_SYNC_AUTO Fld(1, 1, AC_MSKB0)	  //[1:1]
#define C_CRC_START Fld(1, 11, AC_MSKB1)	      //[11:11]
#define C_CRC_MODE Fld(2, 12, AC_MSKB1)		      //[13:12]
#define C_CRC_CLR Fld(1, 14, AC_MSKB1)		      //[14:14]
#define C_PHYD_CLK_MODE Fld(4, 16, AC_MSKB2)	  //[19:16]
#define C_CHANNEL_ALIGN_INCREASE Fld(1, 20, AC_MSKB2) //[20:20]
#define REG_DEEP_STATUS Fld(2, 24, AC_MSKB3)	  //[25:24]
#define REG_DEEP_SW_SEL Fld(1, 27, AC_MSKB3)	  //[27:27]
#define REG_CHANNEL_MAPPING Fld(3, 28, AC_MSKB3)      //[30:28]
#define REG_LINK_LOST Fld(1, 31, AC_MSKB3)	    //[31:31]
#define DIG_PHY_CONTROL_2 (RX_ADR + 0x0C4)
#define REG_SCRAMBLING_ON Fld(1, 0, AC_MSKB0)       //[0:0]
#define HW_SCRAMBLING_ON_EN Fld(1, 1, AC_MSKB0)     //[1:1]
#define REG_BIST_VIDEO_OUT_SEL Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_DEBUG_CLK_FREQ_SEL Fld(2, 4, AC_MSKB0)  //[5:4]
#define REG_APLL_CNTL_SEL Fld(1, 16, AC_MSKB2)      //[16:16]
#define REG_ANA_CNTL_SEL Fld(1, 17, AC_MSKB2)       //[17:17]
#define REG_MONI_SEL Fld(4, 20, AC_MSKB2)	   //[23:20]
#define REG_PRAM_8051_CNTL_SEL Fld(1, 24, AC_MSKB3) //[24:24]
#define DIG_PHY_STATUS_0 (RX_ADR + 0x0C8)
#define HDMI20_DIG_PHY_CRC_OUT Fld(24, 0, AC_MSKDW)  //[23:0]
#define HDMI20_DIG_PHY_CRC_RDY Fld(1, 24, AC_MSKB3)  //[24:24]
#define HDMI20_DIG_PHY_CRC_FAIL Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_DIG_PHY_STATUS1 Fld(6, 26, AC_MSKB3)     //[31:26]
#define DIG_PHY_STATUS_1 (RX_ADR + 0x0CC)
#define REG_DIG_PHY_STATUS2 Fld(32, 0, AC_FULLDW) //[31:0]
#define TOP_MISC (RX_ADR + 0x0D0)
#define REG_DSCL_DEGLITCH_CNT Fld(4, 0, AC_MSKB0) //[3:0]
#define REG_DSDA_DEGLITCH_CNT Fld(4, 4, AC_MSKB0) //[7:4]
#define REG_HW_DSD_FEATURE Fld(1, 10, AC_MSKB1)   //[10:10]
#define REG_HW_HBR_FEATURE Fld(1, 11, AC_MSKB1)   //[11:11]
#define REG_HW_8CH_FEATURE Fld(1, 12, AC_MSKB1)   //[12:12]
#define REG_HW_RPT_FEATURE Fld(1, 13, AC_MSKB1)   //[13:13]
#define REG_RE_AUTH_REQ Fld(1, 14, AC_MSKB1)      //[14:14]
#define HRES_STB Fld(1, 23, AC_MSKB2)		  //[23:23]
#define VRES_STB Fld(1, 24, AC_MSKB3)		  //[24:24]
#define HDCP1X_DECRYPT_EN Fld(1, 25, AC_MSKB3)    //[25:25]
#define HDCP2X_DECRYPT_EN Fld(1, 26, AC_MSKB3)    //[26:26]
#define TMDS_CLK_RATIO Fld(1, 27, AC_MSKB3)       //[27:27]
#define SCRAMBLING_EN Fld(1, 28, AC_MSKB3)	//[28:28]
#define ACR_PLL_LOCK Fld(1, 29, AC_MSKB3)	 //[29:29]
#define SCDT Fld(1, 30, AC_MSKB3)		  //[30:30]
#define CKDT Fld(1, 31, AC_MSKB3)		  //[31:31]
#define SPLIT_DITHER_0 (RX_ADR + 0x0D4)
#define REG_LEFT_EN Fld(1, 2, AC_MSKB0)      //[2:2]
#define REG_ROUND_EN Fld(1, 3, AC_MSKB0)     //[3:3]
#define REG_EDITHER_EN Fld(1, 4, AC_MSKB0)   //[4:4]
#define REG_RDITHER_EN Fld(1, 5, AC_MSKB0)   //[5:5]
#define REG_LFSR_EN Fld(1, 6, AC_MSKB0)      //[6:6]
#define REG_TABLE_EN Fld(2, 8, AC_MSKB1)     //[9:8]
#define REG_SUBPIX_EN Fld(1, 10, AC_MSKB1)   //[10:10]
#define REG_SUB_R Fld(2, 11, AC_MSKB1)       //[12:11]
#define REG_SUB_G Fld(2, 13, AC_MSKB1)       //[14:13]
#define REG_SUB_B Fld(2, 15, AC_MSKW21)      //[16:15]
#define REG_FPHASE_EN Fld(1, 17, AC_MSKB2)   //[17:17]
#define REG_FPHASE_R Fld(1, 18, AC_MSKB2)    //[18:18]
#define REG_FPHASE Fld(6, 19, AC_MSKW32)     //[24:19]
#define REG_FPHASE_CTRL Fld(2, 25, AC_MSKB3) //[26:25]
#define REG_FPHASE_SEL Fld(2, 27, AC_MSKB3)  //[28:27]
#define REG_FPHASE_BIT Fld(3, 29, AC_MSKB3)  //[31:29]
#define SPLIT_DITHER_1 (RX_ADR + 0x0D8)
#define REG_INK_DATA_R Fld(12, 0, AC_MSKW10)  //[11:0]
#define REG_INK_DATA_G Fld(12, 16, AC_MSKW32) //[27:16]
#define SPLIT_DITHER_2 (RX_ADR + 0x0DC)
#define REG_INK_DATA_B Fld(12, 0, AC_MSKW10) //[11:0]
#define REG_DRMOD_R Fld(2, 12, AC_MSKB1)     //[13:12]
#define REG_DRMOD_G Fld(2, 14, AC_MSKB1)     //[15:14]
#define REG_DRMOD_B Fld(2, 16, AC_MSKB2)     //[17:16]
#define REG_TWO_CH_LR Fld(1, 28, AC_MSKB3)   //[28:28]
#define REG_LSB_OFF Fld(1, 30, AC_MSKB3)     //[30:30]
#define REG_INK Fld(1, 31, AC_MSKB3)	 //[31:31]
#define SPLIT_DITHER_3 (RX_ADR + 0x0E0)
#define REG_H_ACTIVE Fld(16, 0, AC_FULLW10) //[15:0]
#define RG_HDMI_CRC (RX_ADR + 0x0EC)
#define HDMI20_VIDEO_CRC_OUT Fld(24, 0, AC_MSKDW)  //[23:0]
#define HDMI20_VIDEO_CRC_FAIL Fld(1, 24, AC_MSKB3) //[24:24]
#define HDMI20_VIDEO_CRC_RDY Fld(1, 25, AC_MSKB3)  //[25:25]
#define HDMI20_CRC_START Fld(1, 26, AC_MSKB3)      //[26:26]
#define HDMI20_CRC_CLR Fld(1, 27, AC_MSKB3)	//[27:27]
#define HDMI20_CRC_MODE Fld(2, 29, AC_MSKB3)       //[30:29]
#define TMDS_CKDT_0 (RX_ADR + 0x0F4)
#define CLK_DIV_9_0_ Fld(10, 0, AC_MSKW10) //[9:0]
#define CKDT_L_9_0_ Fld(10, 10, AC_MSKW21) //[19:10]
#define CKDT_H_9_0_ Fld(10, 20, AC_MSKW32) //[29:20]
#define INBAND_THR Fld(2, 30, AC_MSKB3)    //[31:30]
#define TMDS_CKDT_1 (RX_ADR + 0x0F8)
#define TMDS_CK_PERIOD Fld(8, 0, AC_FULLB0) //[7:0]
#define HDMI_AUD_PLL_SEL (RX_ADR + 0x0FC)
#define H_UNSTABLE_MUTE_EN Fld(1, 12, AC_MSKB1)	//[12:12]
#define V_UNSTABLE_MUTE_EN Fld(1, 13, AC_MSKB1)	//[13:13]
#define DEBUG_FMETTER_REF_CLK_SEL Fld(1, 14, AC_MSKB1) //[14:14]
#define PRE_POST_DIV_DETECT_SEL Fld(1, 15, AC_MSKB1)   //[15:15]
#define FS_VAL_SW_EXTN Fld(2, 16, AC_MSKB2)	    //[17:16]
#define PRE_DIV3_SW Fld(1, 18, AC_MSKB2)	       //[18:18]
#define PRE_DIV3_SW_SEL Fld(1, 19, AC_MSKB2)	   //[19:19]
#define REG_HDCP1X_DISABLE Fld(1, 20, AC_MSKB2)	//[20:20]
#define REG_VIDEO_BLANK_DATA_SEL Fld(1, 29, AC_MSKB3)  //[29:29]
#define REG_AUD_PLL_SEL Fld(1, 31, AC_MSKB3)	   //[31:31]
#define HDMI_CAL (RX_ADR + 0x104)
#define DA_HDMI_0_IMPSEL Fld(5, 0, AC_MSKB0)   //[4:0]
#define SW_CALIB_RST_ Fld(1, 5, AC_MSKB0)      //[5:5]
#define REG_SET_SEL Fld(2, 6, AC_MSKB0)	//[7:6]
#define REG_SAMP_SEL Fld(2, 8, AC_MSKB1)       //[9:8]
#define REG_CALIB_SEL Fld(1, 10, AC_MSKB1)     //[10:10]
#define REG_CALIB_DATA Fld(5, 11, AC_MSKB1)    //[15:11]
#define REG_RE_GEN Fld(1, 16, AC_MSKB2)	//[16:16]
#define DA_HDMI_IMPCAL_EN Fld(1, 17, AC_MSKB2) //[17:17]
#define VDIEO_CTRL (RX_ADR + 0x108)
#define REG_SYNC_POLARITY_FORCE_NEW Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_HSYNC_POLARITY_NEW Fld(1, 1, AC_MSKB0)      //[1:1]
#define REG_VSYNC_POLARITY_NEW Fld(1, 2, AC_MSKB0)      //[2:2]
#define REG_VDE_START_EDGE_ALIG_INV Fld(1, 3, AC_MSKB0) //[3:3]
#define REG_VDE_END_EDGE_ALIG_INV Fld(1, 4, AC_MSKB0)   //[4:4]
#define REG_VRR_EN_SET Fld(1, 5, AC_MSKB0)		//[5:5]
#define REG_VRR_EN_CLR Fld(1, 6, AC_MSKB0)		//[6:6]
#define REG_VDE_HDE_SWP Fld(1, 7, AC_MSKB0)		//[7:7]
#define RG_HDE_STATUS_CLR Fld(1, 8, AC_MSKB1)		//[8:8]
#define RG_VDE_STATUS_CLR Fld(1, 9, AC_MSKB1)		//[9:9]
#define HDE_RES_UNSTABLE_MUTE_MASK Fld(1, 10, AC_MSKB1) //[10:10]
#define VDE_RES_UNSTABLE_MUTE_MASK Fld(1, 11, AC_MSKB1) //[11:11]
#define RG_HDE_CHG_THR Fld(4, 12, AC_MSKB1)		//[15:12]
#define RG_VDE_CHG_THR Fld(4, 20, AC_MSKB2)		//[23:20]
#define RG_VDE_STABLE_CNT_THR Fld(4, 24, AC_MSKB3)      //[27:24]
#define HDMI_AVMUTE_MASK Fld(1, 28, AC_MSKB3)		//[28:28]
#define PIXLE_CLK_CHG_MUTE_MASK Fld(1, 29, AC_MSKB3)    //[29:29]
#define FORMAT_DET_REGISTER_RESET Fld(1, 30, AC_MSKB3)  //[30:30]
#define FORMAT_DET_RESET Fld(1, 31, AC_MSKB3)		//[31:31]
#define TOP_BACKUP3 (RX_ADR + 0x10C)
#define REG_FIFO_INT Fld(7, 8, AC_MSKB1)       //[14:8]
#define PTR_DIFF_LOW_TH Fld(5, 15, AC_MSKW21)  //[19:15]
#define FIFO_DIFF_LOW_TH Fld(6, 20, AC_MSKW32) //[25:20]
#define FIFO_DIFF_HIGH_TH Fld(6, 26, AC_MSKB3) //[31:26]
#define VIDEO_MUTE_CTRL0 (RX_ADR + 0x110)
#define HAS_NO_VIC_BACKUP Fld(8, 0, AC_FULLB0)   //[7:0]
#define IS_VIDEO_BACKUP Fld(8, 8, AC_FULLB1)     //[15:8]
#define RANGE_BACKUP1_EN Fld(1, 25, AC_MSKB3)    //[25:25]
#define RANGE_BACKUP0_EN Fld(1, 26, AC_MSKB3)    //[26:26]
#define IS_VIDEO_BACKUP_DIS Fld(1, 27, AC_MSKB3) //[27:27]
#define IS_VIDEO_7D1_DIS Fld(1, 28, AC_MSKB3)    //[28:28]
#define IS_VIDEO_7D0_DIS Fld(1, 29, AC_MSKB3)    //[29:29]
#define HASNOVIC_BACKUP_EN Fld(1, 30, AC_MSKB3)  //[30:30]
#define HASNOVIC_7D0_EN Fld(1, 31, AC_MSKB3)     //[31:31]
#define VIDEO_MUTE_CTRL1 (RX_ADR + 0x114)
#define PIXEL_REG_BACKUP0 Fld(16, 0, AC_FULLW10) //[15:0]
#define LINE_REG_BACKUP0 Fld(16, 16, AC_FULLW32) //[31:16]
#define VIDEO_MUTE_CTRL2 (RX_ADR + 0x118)
#define RG_HDE_STABLE_CNT_THR Fld(16, 0, AC_FULLW10) //[15:0]
#define HDMI_AUTO_MUTE_EN Fld(1, 22, AC_MSKB2)       //[22:22]
#define VIDEO_CORE_AVMUTE_MASK Fld(1, 23, AC_MSKB2)  //[23:23]
#define REG_VSYNC_POLARITY Fld(1, 29, AC_MSKB3)      //[29:29]
#define REG_HSYNC_POLARITY Fld(1, 30, AC_MSKB3)      //[30:30]
#define REG_SYNC_POLARITY_FORCE Fld(1, 31, AC_MSKB3) //[31:31]
#define AUDIO_PARA_CTRL (RX_ADR + 0x11C)
#define AUDIO_PACKET_PARALLEL_EN Fld(1, 0, AC_MSKB0)	   //[0:0]
#define AUDIO_3D_AUDIO_PACKET_PARALLEL_EN Fld(1, 1, AC_MSKB0)  //[1:1]
#define AUDIO_3D_ONE_BIT_AUDIO_PARALLEL_EN Fld(1, 2, AC_MSKB0) //[2:2]
#define META_DATA_PARALLEL_EN Fld(1, 3, AC_MSKB0)	      //[3:3]
#define MULTI_STEAM_AUDIO_PARALLEL_EN Fld(1, 4, AC_MSKB0)      //[4:4]
#define MULTI_STEAM_ONE_BIT_PARALLEL_EN Fld(1, 5, AC_MSKB0)    //[5:5]
#define HDR_86_PARALLEL_EN Fld(1, 7, AC_MSKB0)		       //[7:7]
#define HDR_87_PARALLEL_EN Fld(1, 8, AC_MSKB1)		       //[8:8]
#define LAOUT_SW_SEL Fld(1, 9, AC_MSKB1)		       //[9:9]
#define SW_LAOUT_VALUE Fld(2, 10, AC_MSKB1)		       //[11:10]
#define SW_SP_VALUE Fld(4, 12, AC_MSKB1)		       //[15:12]
#define SW_SF_VALUE Fld(4, 16, AC_MSKB2)		       //[19:16]
#define SP_SW_SEL Fld(1, 20, AC_MSKB2)			       //[20:20]
#define SF_SW_SEL Fld(1, 21, AC_MSKB2)			       //[21:21]
#define AUDIO_PARA_MUTE Fld(1, 28, AC_MSKB3)		       //[28:28]
#define AUDIO_READ_DIS_AT_EMPTY Fld(1, 29, AC_MSKB3)	   //[29:29]
#define AUDIO_FIFO_START_UP_DIS Fld(1, 30, AC_MSKB3)	   //[30:30]
#define AACR_LOCK_CTRL1 (RX_ADR + 0x120)
#define NEFF_SW_VALUE Fld(27, 0, AC_MSKDW)     //[26:0]
#define NEFF_SW_VALUE_SEL Fld(1, 27, AC_MSKB3) //[27:27]
#define AACR_LOCK_CTRL2 (RX_ADR + 0x124)
#define NREF_SW_VALUE Fld(24, 0, AC_MSKDW)     //[23:0]
#define NREF_SW_VALUE_SEL Fld(1, 24, AC_MSKB3) //[24:24]
#define HDMI_STATUS_RO_RESVD (RX_ADR + 0x12C)
#define HEAD_SP Fld(4, 0, AC_MSKB0)	   //[3:0]
#define AACR_POST_DIV_HW Fld(6, 4, AC_MSKW10) //[9:4]
#define FS32 Fld(1, 10, AC_MSKB1)	     //[10:10]
#define US Fld(3, 11, AC_MSKB1)		      //[13:11]
#define O_MUTE Fld(1, 30, AC_MSKB3)	   //[30:30]
#define INTR_STATUS_RESVD (RX_ADR + 0x130)
#define INTR_VSYNC_NO_PL Fld(1, 0, AC_MSKB0)		   //[0:0]
#define INTR_CP_CLR_MUTE_CHG Fld(1, 1, AC_MSKB0)	   //[1:1]
#define INTR_VRES_CHG Fld(1, 2, AC_MSKB0)		   //[2:2]
#define INTR_HRES_CHG Fld(1, 3, AC_MSKB0)		   //[3:3]
#define INTR_VID_CLK_CHG Fld(1, 4, AC_MSKB0)		   //[4:4]
#define INTR_NO_CEA_VER2_VSI Fld(1, 5, AC_MSKB0)	   //[5:5]
#define INTR_CEA_VER2_VSI_NEW Fld(1, 6, AC_MSKB0)	  //[6:6]
#define INTR_NO_CEA_VER1_VSI Fld(1, 7, AC_MSKB0)	   //[7:7]
#define INTR_CEA_VER1_VSI_NEW Fld(1, 8, AC_MSKB1)	  //[8:8]
#define INTR_NO_CEA_THX1_VSI Fld(1, 9, AC_MSKB1)	   //[9:9]
#define INTR_CEA_THX1_VSI_NEW Fld(1, 10, AC_MSKB1)	 //[10:10]
#define INTR_NO_CEA_THX_VSI Fld(1, 11, AC_MSKB1)	   //[11:11]
#define INTR_CEA_THX_VSI_NEW Fld(1, 12, AC_MSKB1)	  //[12:12]
#define INTR_EXTEND_PACKET_LAST Fld(1, 13, AC_MSKB1)       //[13:13]
#define INTR_EXTEND_PACKET_FIRST Fld(1, 14, AC_MSKB1)      //[14:14]
#define INTR_FIFO1_READY Fld(1, 15, AC_MSKB1)		   //[15:15]
#define INTR_FIFO0_READY Fld(1, 16, AC_MSKB2)		   //[16:16]
#define INTR_MTW_PULSE Fld(1, 17, AC_MSKB2)		   //[17:17]
#define INTR_HDR_DYNAMICAL_PACKET_NEW Fld(1, 18, AC_MSKB2) //[18:18]
#define INTR_HDR_DYNAMICAL_PACKET_NO Fld(1, 19, AC_MSKB2)  //[19:19]
#define INTR_VDERES_UNSTABLE Fld(1, 20, AC_MSKB2)	  //[20:20]
#define INTR_VDERES_STABLE Fld(1, 21, AC_MSKB2)		   //[21:21]
#define INTR_HDERES_UNSTABLE Fld(1, 22, AC_MSKB2)	  //[22:22]
#define INTR_HDERES_STABLE Fld(1, 23, AC_MSKB2)		   //[23:23]
#define INTR_VRR_EN Fld(1, 24, AC_MSKB3)		   //[24:24]
#define INTR_EMP_VRR_HIT Fld(1, 25, AC_MSKB3)		   //[25:25]
#define INTR_EMP_VRR_PKT3_NEW Fld(1, 26, AC_MSKB3)	 //[26:26]
#define INTR_EMP_VRR_PKT3_NO Fld(1, 27, AC_MSKB3)	  //[27:27]
#define INTR_EMP_VRR_PKT2_NEW Fld(1, 28, AC_MSKB3)	 //[28:28]
#define INTR_EMP_VRR_PKT2_NO Fld(1, 29, AC_MSKB3)	  //[29:29]
#define INTR_EMP_VRR_PKT1_NEW Fld(1, 30, AC_MSKB3)	 //[30:30]
#define INTR_EMP_VRR_PKT1_NO Fld(1, 31, AC_MSKB3)	  //[31:31]
#define INTR_MASK_RESVD (RX_ADR + 0x134)
#define INTR_VSYNC_NO_PL_MASK Fld(1, 0, AC_MSKB0)		//[0:0]
#define INTR_CP_CLR_MUTE_CHG_MASK Fld(1, 1, AC_MSKB0)		//[1:1]
#define INTR_VRES_CHG_MASK Fld(1, 2, AC_MSKB0)			//[2:2]
#define INTR_HRES_CHG_MASK Fld(1, 3, AC_MSKB0)			//[3:3]
#define INTR_VID_CLK_CHG_MASK Fld(1, 4, AC_MSKB0)		//[4:4]
#define INTR_NO_CEA_VER2_VSI_MASK Fld(1, 5, AC_MSKB0)		//[5:5]
#define INTR_CEA_VER2_VSI_NEW_MASK Fld(1, 6, AC_MSKB0)		//[6:6]
#define INTR_NO_CEA_VER1_VSI_MASK Fld(1, 7, AC_MSKB0)		//[7:7]
#define INTR_CEA_VER1_VSI_NEW_MASK Fld(1, 8, AC_MSKB1)		//[8:8]
#define INTR_NO_CEA_THX1_VSI_MASK Fld(1, 9, AC_MSKB1)		//[9:9]
#define INTR_CEA_THX1_VSI_NEW_MASK Fld(1, 10, AC_MSKB1)		//[10:10]
#define INTR_NO_CEA_THX_VSI_MASK Fld(1, 11, AC_MSKB1)		//[11:11]
#define INTR_CEA_THX_VSI_NEW_MASK Fld(1, 12, AC_MSKB1)		//[12:12]
#define INTR_EXTEND_PACKET_LAST_MASK Fld(1, 13, AC_MSKB1)       //[13:13]
#define INTR_EXTEND_PACKET_FIRST_MASK Fld(1, 14, AC_MSKB1)      //[14:14]
#define INTR_FIFO1_READY_MASK Fld(1, 15, AC_MSKB1)		//[15:15]
#define INTR_FIFO0_READY_MASK Fld(1, 16, AC_MSKB2)		//[16:16]
#define INTR_MTW_PULSE_MASK Fld(1, 17, AC_MSKB2)		//[17:17]
#define INTR_HDR_DYNAMICAL_PACKET_NEW_MASK Fld(1, 18, AC_MSKB2) //[18:18]
#define INTR_HDR_DYNAMICAL_PACKET_NO_MASK Fld(1, 19, AC_MSKB2)  //[19:19]
#define INTR_VDERES_UNSTABLE_MASK Fld(1, 20, AC_MSKB2)		//[20:20]
#define INTR_VDERES_STABLE_MASK Fld(1, 21, AC_MSKB2)		//[21:21]
#define INTR_HDERES_UNSTABLE_MASK Fld(1, 22, AC_MSKB2)		//[22:22]
#define INTR_HDERES_STABLE_MASK Fld(1, 23, AC_MSKB2)		//[23:23]
#define INTR_VRR_EN_MASK Fld(1, 24, AC_MSKB3)			//[24:24]
#define INTR_EMP_VRR_HIT_MASK Fld(1, 25, AC_MSKB3)		//[25:25]
#define INTR_EMP_VRR_PKT3_NEW_MASK Fld(1, 26, AC_MSKB3)		//[26:26]
#define INTR_EMP_VRR_PKT3_NO_MASK Fld(1, 27, AC_MSKB3)		//[27:27]
#define INTR_EMP_VRR_PKT2_NEW_MASK Fld(1, 28, AC_MSKB3)		//[28:28]
#define INTR_EMP_VRR_PKT2_NO_MASK Fld(1, 29, AC_MSKB3)		//[29:29]
#define INTR_EMP_VRR_PKT1_NEW_MASK Fld(1, 30, AC_MSKB3)		//[30:30]
#define INTR_EMP_VRR_PKT1_NO_MASK Fld(1, 31, AC_MSKB3)		//[31:31]

// Page HDMI20_RX_MAC_3
#define REG_CCIR_VRR_CTRL0 (RX_ADR + 0x140)
#define REG_HSYNC_HIGH_COUNT Fld(16, 0, AC_FULLW10)  //[15:0]
#define REG_HSYNC_BACK_COUNT Fld(16, 16, AC_FULLW32) //[31:16]
#define REG_CCIR_VRR_CTRL1 (RX_ADR + 0x144)
#define REG_PIXEL_COUNT Fld(16, 0, AC_FULLW10)       //[15:0]
#define REG_VSYNC_HIGH_COUNT Fld(16, 16, AC_FULLW32) //[31:16]
#define REG_CCIR_VRR_CTRL2 (RX_ADR + 0x148)
#define REG_VSYNC_BACK_COUNT Fld(16, 0, AC_FULLW10) //[15:0]
#define REG_LINE_COUNT Fld(16, 16, AC_FULLW32)      //[31:16]
#define REG_CCIR_VRR_CTRL3 (RX_ADR + 0x14C)
#define REG_CCIR_TIMING_GEN_SW_MODE Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_420_HW_MODE_DIS Fld(1, 1, AC_MSKB0)		//[1:1]
#define REG_420_MODE_EN Fld(1, 2, AC_MSKB0)		//[2:2]
#define REG_BYPASS_FIFO_RST Fld(1, 3, AC_MSKB0)		//[3:3]
#define REG_INTR_RESERVED2 (RX_ADR + 0x150)
#define INTR_HD20_PCM Fld(1, 0, AC_MSKB0)	//[0:0]
#define INTR_HD20_NON_PCM Fld(1, 1, AC_MSKB0)    //[1:1]
#define INTR_NON_INTERLACE Fld(1, 2, AC_MSKB0)   //[2:2]
#define INTR_INTERLACE Fld(1, 3, AC_MSKB0)       //[3:3]
#define INTR_PWR_5V_OFF Fld(1, 4, AC_MSKB0)      //[4:4]
#define INTR_PWR_5V_ON Fld(1, 5, AC_MSKB0)       //[5:5]
#define INTR_NEW_GAMUT_PKT Fld(1, 6, AC_MSKB0)   //[6:6]
#define INTR_NO_GAMUT_PKT Fld(1, 7, AC_MSKB0)    //[7:7]
#define INTR_WRITE_GAMUT_PKT Fld(1, 8, AC_MSKB1) //[8:8]
#define REG_INTR_RESERVED2_MASK (RX_ADR + 0x154)
#define INTR_HD20_PCM_MASK Fld(1, 0, AC_MSKB0)	//[0:0]
#define INTR_HD20_NON_PCM_MASK Fld(1, 1, AC_MSKB0)    //[1:1]
#define INTR_NON_INTERLACE_MASK Fld(1, 2, AC_MSKB0)   //[2:2]
#define INTR_INTERLACE_MASK Fld(1, 3, AC_MSKB0)       //[3:3]
#define INTR_PWR_5V_OFF_MASK Fld(1, 4, AC_MSKB0)      //[4:4]
#define INTR_PWR_5V_ON_MASK Fld(1, 5, AC_MSKB0)       //[5:5]
#define INTR_NEW_GAMUT_PKT_MASK Fld(1, 6, AC_MSKB0)   //[6:6]
#define INTR_NO_GAMUT_PKT_MASK Fld(1, 7, AC_MSKB0)    //[7:7]
#define INTR_WRITE_GAMUT_PKT_MASK Fld(1, 8, AC_MSKB1) //[8:8]
#define REG_PWR_5V_CON (RX_ADR + 0x158)
#define REG_PWR_5V_DEGLITCH_CNT Fld(24, 0, AC_MSKDW) //[23:0]
#define REG_PWR_5V_DEGLITCH_EN Fld(1, 24, AC_MSKB3)  //[24:24]
#define REG_DUMMY0 (RX_ADR + 0x15C)
#define REG_O_MUTE_NEW_CLR Fld(1, 0, AC_MSKB0)	//[0:0]
#define REG_O_MUTE_OLD_SEL Fld(1, 1, AC_MSKB0)	//[1:1]
#define REG_AUTO_MUTE_ENABLE Fld(1, 2, AC_MSKB0)      //[2:2]
#define REG_HD20_A_MUTE_CLR Fld(1, 3, AC_MSKB0)       //[3:3]
#define REG_A_MUTE_CONDITION_MASK Fld(4, 4, AC_MSKB0) //[7:4]
#define REG_A_MUTE_HOLD_TIME Fld(24, 8, AC_MSKDW)     //[31:8]
#define REG_DUMMY1 (RX_ADR + 0x160)
#define REG_RI_FORCE Fld(1, 0, AC_MSKB0)	       //[0:0]
#define REG_HDCP_DECODE_STATUS_CLR Fld(1, 1, AC_MSKB0) //[1:1]
#define RG_OUTPUT_AUTO_MUTE_ENABLE Fld(1, 2, AC_MSKB0) //[2:2]
#define RG_DEPACKET_USE_FOR_HD2P1 Fld(1, 3, AC_MSKB0)  //[3:3]
#define RGS_DUMMY0 (RX_ADR + 0x168)
#define HDCP_ENCODE_STATUS Fld(1, 0, AC_MSKB0) //[0:0]
#define HDCP_DECODE_STATUS Fld(1, 1, AC_MSKB0) //[1:1]
#define NON_PCM_STATUS Fld(1, 2, AC_MSKB0)     //[2:2]
#define INTERLACE_STATUS Fld(1, 3, AC_MSKB0)   //[3:3]
#define PWR_5V_OFF_STATUS Fld(1, 4, AC_MSKB0)  //[4:4]
#define PWR_5V_ON_STATUS Fld(1, 5, AC_MSKB0)   //[5:5]
#define PWR_5V_ORIGINAL Fld(1, 6, AC_MSKB0)     //[6:6]
#define RGS_DUMMY1 (RX_ADR + 0x16C)
#define HDE_COUNT Fld(16, 0, AC_FULLW10)  //[15:0]
#define VDE_COUNT Fld(16, 16, AC_FULLW32) //[31:16]

#define HDMIRX_CLK_CONFIG_0 (RX_ADR + 0x0174)
#define RG_APLL_SW_SEL Fld(1, 3, AC_MSKB0)	//[3:3]
#define RG_APLL_SW_CONFIG Fld(3, 4, AC_MSKB0)     //[6:4]
#define RG_DACR_CLK_SEL Fld(1, 7, AC_MSKB0)       //[7:7]
#define RG_APLL_DIV_RESET Fld(1, 10, AC_MSKB1)    //[10:10]
#define RG_MBIST_MODE_FAST Fld(1, 14, AC_MSKB1)   //[14:14]
#define RG_MBIST_MODE Fld(1, 15, AC_MSKB1)	//[15:15]
#define RG_SDA_DEGLITCH_CNT Fld(8, 16, AC_FULLB2) //[23:16]
#define HDMIRX_CLK_CONFIG_1 (RX_ADR + 0x0178)
    #define RG_DIV_CLK_ENGINE_RST Fld(1, 0, AC_MSKB0)//[0:0]
#define RG_DP_CLR_CLK_SEL Fld(2, 2, AC_MSKB0)	  //[3:2]
#define RG_DP_CLR_2X_CLK_SEL Fld(2, 5, AC_MSKB0)       //[6:5]
#define RG_SCL_DEGLITCH_CNT Fld(8, 8, AC_FULLB1)       //[15:8]
#define RG_DDC_EN Fld(1, 17, AC_MSKB2)		       //[17:17]
#define RG_DDC_RST Fld(1, 18, AC_MSKB2)		       //[18:18]
#define RG_DDC_SCL_DEGLITCH_EN Fld(1, 19, AC_MSKB2)    //[19:19]
#define RG_DDC_SDA_DEGLITCH_EN Fld(1, 20, AC_MSKB2)    //[20:20]
    #define RG_DPCLR_DIV Fld(5, 22, AC_MSKW32)//[26:22]
    #define RG_DPCLR2X_DIV Fld(5, 27, AC_MSKB3)//[31:27]
#define HDMIRX_TOP_CONFIG (RX_ADR + 0x017C)
#define RG_HDMIRX_CLK_CG Fld(12, 0, AC_MSKW10)	//[11:0]
#define SW_PWR_MEM_OFF Fld(1, 15, AC_MSKB1)	   //[15:15]
#define RG_RXTX_FIFO_SEL Fld(1, 28, AC_MSKB3)	 //[28:28]
#define G_RSTB_FIFO Fld(1, 30, AC_MSKB3)	      //[30:30]
#define G_RSTB_RX Fld(1, 31, AC_MSKB3)		      //[31:31]

#define SHERMAN_RST (RX_ADR + 0x3FC)
#define REG_SHERMAN_RSTB Fld(1, 0, AC_MSKB0)      //[0:0]
#define REG_SHERMAN_INT_CLR Fld(1, 1, AC_MSKB0)   //[1:1]
#define SRAM_PROTECT_FORCE Fld(1, 30, AC_MSKB3)   //[30:30]
#define SRAM_PROTECT_DISABLE Fld(1, 31, AC_MSKB3) //[31:31]
#define RX_PKT_THRESH2 (RX_ADR + 0x400)
#define REG_CAPTURE_CNT Fld(1, 0, AC_MSKB0)		//[0:0]
#define REG_IGNORE_ECC_ERR_PKT_EN Fld(1, 1, AC_MSKB0)   //[1:1]
#define REG_BCH_THRESH Fld(5, 8, AC_MSKB1)		//[12:8]
#define REG_HDMI_PKT_THRESH_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define REG_HDMI_PKT_THRESH_15_8_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_BCH_PKT_THRES2 (RX_ADR + 0x404)
#define REG_T4_PKT_THRESH_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_T4_PKT_THRESH_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_BCH_PKT_THRESH_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define REG_BCH_PKT_THRESH_15_8_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_PKT_CNT2 (RX_ADR + 0x408)
#define REG_HDCP_PKT_THRESH_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP_PKT_THRESH_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_HDCP_PKT_THRESH15_0 Fld(16, 0, AC_FULLB0)
#define RHDMI_PKT_CNT_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define RHDMI_PKT_CNT_15_8_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_BCH_ERR2 (RX_ADR + 0x40C)
#define RHDMI_T4_ERR_CNT_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define RHDMI_T4_ERR_CNT_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define RHDMI_BCH_ERR_CNT_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define RHDMI_BCH_ERR_CNT_15_8_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_INT_IF_CTRL4 (RX_ADR + 0x410)
#define RHDMI_HDCP_ERR_CNT_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define RHDMI_HDCP_ERR_CNT_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_NEW_AVI_ONLY Fld(1, 16, AC_MSKB2)	 //[16:16]
#define REG_NEW_SPD_ONLY Fld(1, 17, AC_MSKB2)	 //[17:17]
#define REG_NEW_AUD_ONLY Fld(1, 18, AC_MSKB2)	 //[18:18]
#define REG_NEW_MPEG_ONLY Fld(1, 19, AC_MSKB2)	//[19:19]
#define REG_NEW_UNREC_ONLY Fld(1, 20, AC_MSKB2)       //[20:20]
#define REG_NEW_ACP_ONLY Fld(1, 21, AC_MSKB2)	 //[21:21]
#define REG_NEW_VSI_ONLY Fld(1, 22, AC_MSKB2)	 //[22:22]
#define REG_HD20_USE_AIF4VSI Fld(1, 23, AC_MSKB2)     //[23:23]
#define REG_NEW_ISRC1_ONLY Fld(1, 24, AC_MSKB3)       //[24:24]
#define REG_NEW_ISRC2_ONLY Fld(1, 25, AC_MSKB3)       //[25:25]
#define REG_NEW_GCP_ONLY Fld(1, 26, AC_MSKB3)	 //[26:26]
#define RX_AUDP_STAT (RX_ADR + 0x414)
#define REG_VIDEO_MUTE Fld(1, 0, AC_MSKB0)    //[0:0]
#define REG_CLEAR_AV_MUTE Fld(1, 5, AC_MSKB0) //[5:5]
#define REG_DC_HEADER Fld(8, 8, AC_FULLB1)    //[15:8]
#define REG_PHASE0_LUT Fld(2, 16, AC_MSKB2)   //[17:16]
#define REG_PHASE1_LUT Fld(2, 18, AC_MSKB2)   //[19:18]
#define REG_PHASE2_LUT Fld(2, 20, AC_MSKB2)   //[21:20]
#define REG_PHASE3_LUT Fld(2, 22, AC_MSKB2)   //[23:22]
#define HDMI_MODE_DET Fld(1, 24, AC_MSKB3)    //[24:24]
#define HDMI_MODE_EN Fld(1, 25, AC_MSKB3)     //[25:25]
#define HDMI_MUTE Fld(1, 26, AC_MSKB3)	//[26:26]
#define HDMI_LAYOUT Fld(2, 27, AC_MSKB3)      //[28:27]
#define HDMI_AUD_DSD_ON Fld(1, 29, AC_MSKB3)  //[29:29]
#define HDMI_HBRA_ON Fld(1, 30, AC_MSKB3)     //[30:30]
#define AVIRX_VERS (RX_ADR + 0x418)
#define REG_AUTOCLR_AVI_PKT Fld(1, 0, AC_MSKB0)       //[0:0]
#define REG_AUTOCLR_SPD_PKT Fld(1, 1, AC_MSKB0)       //[1:1]
#define REG_AUTOCLR_AIF_PKT Fld(1, 2, AC_MSKB0)       //[2:2]
#define REG_AUTOCLR_MPEG_PKT Fld(1, 3, AC_MSKB0)      //[3:3]
#define REG_AUTOCLR_UNREC_PKT Fld(1, 4, AC_MSKB0)     //[4:4]
#define REG_AUTOCLR_ACP_PKT Fld(1, 5, AC_MSKB0)       //[5:5]
#define REG_AUTOCLR_VSI_PKT Fld(1, 6, AC_MSKB0)       //[6:6]
#define REG_AUTOCLR_GCP_PKT Fld(1, 7, AC_MSKB0)       //[7:7]
#define REG_AUTOCLR_ISRC1_PKT Fld(1, 8, AC_MSKB1)     //[8:8]
#define REG_AUTOCLR_ISRC2_PKT Fld(1, 9, AC_MSKB1)     //[9:9]
#define REG_AUTOCLR_METADATA_PKT Fld(1, 10, AC_MSKB1) //[10:10]
#define CEA_AVI_HEADER_7_0_ Fld(8, 16, AC_FULLB2)     //[23:16]
#define CEA_AVI_HEADER_15_8_ Fld(8, 24, AC_FULLB3)    //[31:24]
#define AVIRX_DBYTE2 (RX_ADR + 0x41C)
#define CEA_AVI_LENGTH Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_AVI_CHECKSUM Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_AVI_DBYTE1 Fld(8, 16, AC_FULLB2)  //[23:16]
#define CEA_AVI_DBYTE2 Fld(8, 24, AC_FULLB3)  //[31:24]
#define AVIRX_DBYTE6 (RX_ADR + 0x420)
#define CEA_AVI_DBYTE3 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AVI_DBYTE4 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AVI_DBYTE5 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AVI_DBYTE6 Fld(8, 24, AC_FULLB3) //[31:24]
#define AVIRX_DBYTE10 (RX_ADR + 0x424)
#define CEA_AVI_DBYTE7 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_AVI_DBYTE8 Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_AVI_DBYTE9 Fld(8, 16, AC_FULLB2)  //[23:16]
#define CEA_AVI_DBYTE10 Fld(8, 24, AC_FULLB3) //[31:24]
#define AVIRX_DBYTE14 (RX_ADR + 0x428)
#define CEA_AVI_DBYTE11 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AVI_DBYTE12 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AVI_DBYTE13 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AVI_DBYTE14 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_DEC (RX_ADR + 0x42C)
#define CEA_AVI_DBYTE15 Fld(8, 0, AC_FULLB0)	  //[7:0]
#define REG_CATCH_SPECIFIC_PKT_EN Fld(1, 8, AC_MSKB1) //[8:8]
#define REG_UNREC_DEC Fld(8, 16, AC_FULLB2)	   //[23:16]
#define SPDRX_CHSUM (RX_ADR + 0x430)
#define CEA_SPD_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_SPD_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define CEA_SPD_CHECKSUM Fld(8, 24, AC_FULLB3)    //[31:24]
#define SPDRX_DBYTE4 (RX_ADR + 0x434)
#define CEA_SPD_DBYTE1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE3 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE4 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPDRX_DBYTE8 (RX_ADR + 0x438)
#define CEA_SPD_DBYTE5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE7 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE8 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPDRX_DBYTE12 (RX_ADR + 0x43C)
#define CEA_SPD_DBYTE9 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_SPD_DBYTE10 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE11 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE12 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPDRX_DBYTE16 (RX_ADR + 0x440)
#define CEA_SPD_DBYTE13 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE14 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE15 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE16 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPDRX_DBYTE20 (RX_ADR + 0x444)
#define CEA_SPD_DBYTE17 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE18 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE19 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE20 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPDRX_DBYTE24 (RX_ADR + 0x448)
#define CEA_SPD_DBYTE21 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE22 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE23 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_SPD_DBYTE24 Fld(8, 24, AC_FULLB3) //[31:24]
#define SPD_DEC (RX_ADR + 0x44C)
#define CEA_SPD_DBYTE25 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_SPD_DBYTE26 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_SPD_DBYTE27 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_SPD_DEC Fld(8, 24, AC_FULLB3)     //[31:24]
#define AUDRX_CHSUM (RX_ADR + 0x450)
#define CEA_AUD_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_AUD_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define CEA_AUD_CHECKSUM Fld(8, 24, AC_FULLB3)    //[31:24]
#define AUDRX_DBYTE4 (RX_ADR + 0x454)
#define CEA_AUD_DBYTE1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE3 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE4 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE8 (RX_ADR + 0x458)
#define CEA_AUD_DBYTE5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE7 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE8 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE12 (RX_ADR + 0x45C)
#define CEA_AUD_DBYTE9 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_AUD_DBYTE10 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE11 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE12 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE16 (RX_ADR + 0x460)
#define CEA_AUD_DBYTE13 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE14 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE15 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE16 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE20 (RX_ADR + 0x464)
#define CEA_AUD_DBYTE17 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE18 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE19 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE20 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE24 (RX_ADR + 0x468)
#define CEA_AUD_DBYTE21 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE22 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE23 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_AUD_DBYTE24 Fld(8, 24, AC_FULLB3) //[31:24]
#define AUDRX_DBYTE27 (RX_ADR + 0x46C)
#define CEA_AUD_DBYTE25 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_AUD_DBYTE26 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_AUD_DBYTE27 Fld(8, 16, AC_FULLB2) //[23:16]
#define MPEGRX_CHSUM (RX_ADR + 0x470)
#define CEA_MPEG_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_MPEG_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define CEA_MPEG_CHECKSUM Fld(8, 24, AC_FULLB3)    //[31:24]
#define MPEGRX_DBYTE4 (RX_ADR + 0x474)
#define CEA_MPEG_DBYTE1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE3 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE4 Fld(8, 24, AC_FULLB3) //[31:24]
#define MPEGRX_DBYTE8 (RX_ADR + 0x478)
#define CEA_MPEG_DBYTE5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE7 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE8 Fld(8, 24, AC_FULLB3) //[31:24]
#define MPEGRX_DBYTE12 (RX_ADR + 0x47C)
#define CEA_MPEG_DBYTE9 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_MPEG_DBYTE10 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE11 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE12 Fld(8, 24, AC_FULLB3) //[31:24]
#define MPEGRX_DBYTE16 (RX_ADR + 0x480)
#define CEA_MPEG_DBYTE13 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE14 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE15 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE16 Fld(8, 24, AC_FULLB3) //[31:24]
#define MPEGRX_DBYTE20 (RX_ADR + 0x484)
#define CEA_MPEG_DBYTE17 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE18 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE19 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE20 Fld(8, 24, AC_FULLB3) //[31:24]
#define MPEGRX_DBYTE24 (RX_ADR + 0x488)
#define CEA_MPEG_DBYTE21 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE22 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE23 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_MPEG_DBYTE24 Fld(8, 24, AC_FULLB3) //[31:24]

// Page HDMI20_RX_MAC_4
#define MPEG_DEC (RX_ADR + 0x48C)
#define CEA_MPEG_DBYTE25 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_MPEG_DBYTE26 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_MPEG_DBYTE27 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_MPEG_DEC Fld(8, 24, AC_FULLB3)     //[31:24]
#define RX_UNREC_BYTE4 (RX_ADR + 0x490)
#define CEA_UNREC_BYTE1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE3 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE4 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE8 (RX_ADR + 0x494)
#define CEA_UNREC_BYTE5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE7 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE8 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE12 (RX_ADR + 0x498)
#define CEA_UNREC_BYTE9 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_UNREC_BYTE10 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE11 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE12 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE16 (RX_ADR + 0x49C)
#define CEA_UNREC_BYTE13 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE14 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE15 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE16 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE20 (RX_ADR + 0x4A0)
#define CEA_UNREC_BYTE17 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE18 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE19 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE20 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE24 (RX_ADR + 0x4A4)
#define CEA_UNREC_BYTE21 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE22 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE23 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE24 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE28 (RX_ADR + 0x4A8)
#define CEA_UNREC_BYTE25 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE26 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE27 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_UNREC_BYTE28 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_UNREC_BYTE31 (RX_ADR + 0x4AC)
#define CEA_UNREC_BYTE29 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_UNREC_BYTE30 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_UNREC_BYTE31 Fld(8, 16, AC_FULLB2) //[23:16]
#define CPRX_BYTE1 (RX_ADR + 0x4B0)
#define REG_CP_SET_MUTE Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_CP_CLR_MUTE Fld(1, 4, AC_MSKB0) //[4:4]
#define RX_ACP_BYTE4 (RX_ADR + 0x4B4)
#define CEA_ACP_BYTE1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE3 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE4 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE8 (RX_ADR + 0x4B8)
#define CEA_ACP_BYTE5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE7 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE8 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE12 (RX_ADR + 0x4BC)
#define CEA_ACP_BYTE9 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_ACP_BYTE10 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE11 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE12 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE16 (RX_ADR + 0x4C0)
#define CEA_ACP_BYTE13 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE14 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE15 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE16 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE20 (RX_ADR + 0x4C4)
#define CEA_ACP_BYTE17 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE18 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE19 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE20 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE24 (RX_ADR + 0x4C8)
#define CEA_ACP_BYTE21 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE22 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE23 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE24 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_BYTE28 (RX_ADR + 0x4CC)
#define CEA_ACP_BYTE25 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE26 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE27 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ACP_BYTE28 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ACP_DEC (RX_ADR + 0x4D0)
#define CEA_ACP_BYTE29 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ACP_BYTE30 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ACP_BYTE31 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_ACP_DEC Fld(8, 24, AC_FULLB3)    //[31:24]
#define VSI_CTRL1 (RX_ADR + 0x4D4)
#define REG_SWAP_VSI_IEEE_ID Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_AIF_CLR_EN Fld(1, 1, AC_MSKB0)       //[1:1]
#define REG_NO_PKT_CNT Fld(3, 2, AC_MSKB0)       //[4:2]
#define REG_AIF4VSI_CMP Fld(2, 5, AC_MSKB0)      //[6:5]
#define REG_VSI_CLR_EN Fld(1, 7, AC_MSKB0)       //[7:7]
#define VSI_ID4 (RX_ADR + 0x4D8)
#define REG_ALT_VSI_PB1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_ALT_VSI_PB2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_ALT_VSI_PB3 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_ALT_VSI_PB4 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSI_CTRL2 (RX_ADR + 0x4DC)
#define REG_HD20_VSI_HEADER Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_HD20_AIF_HEADER Fld(8, 8, AC_FULLB1)    //[15:8]
#define REG_VSI_IEEE_ID_CHK_EN Fld(1, 16, AC_MSKB2) //[16:16]
#define IF_CTRL2 (RX_ADR + 0x4E0)
#define REG_AVI_CLR_EN Fld(1, 0, AC_MSKB0)	   //[0:0]
#define REG_SPD_CLR_EN Fld(1, 1, AC_MSKB0)	   //[1:1]
#define REG_MPEG_CLR_EN Fld(1, 2, AC_MSKB0)	  //[2:2]
#define REG_UNREC_CLR_EN Fld(1, 3, AC_MSKB0)	 //[3:3]
#define REG_ACP_CLR_EN Fld(1, 4, AC_MSKB0)	   //[4:4]
#define REG_EN_CHECKSUM_CHECK Fld(1, 5, AC_MSKB0)    //[5:5]
#define REG_ISRC1_CLR_EN Fld(1, 6, AC_MSKB0)	 //[6:6]
#define REG_ISRC2_CLR_EN Fld(1, 7, AC_MSKB0)	 //[7:7]
#define REG_GCP_CLR_EN Fld(1, 8, AC_MSKB1)	   //[8:8]
#define REG_META_DATA_PKT_CLR_EN Fld(1, 9, AC_MSKB1) //[9:9]
#define RESERVD Fld(22, 10, AC_MSKDW)		     //[31:10]
#define VSIF_ID4 (RX_ADR + 0x4E4)
#define REG_VSI_PB1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_VSI_PB2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_VSI_PB3 Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_VSI_PB4 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_LENGTH (RX_ADR + 0x4E8)
#define REG_AIF4VSI_IND_EN Fld(1, 0, AC_MSKB0)     //[0:0]
#define CEA_VSI_HEADER_7_0_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_VSI_HEADER_15_8_ Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_LENGTH Fld(8, 24, AC_FULLB3)       //[31:24]
#define VSIRX_DBYTE3 (RX_ADR + 0x4EC)
#define CEA_VSI_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE7 (RX_ADR + 0x4F0)
#define CEA_VSI_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE11 (RX_ADR + 0x4F4)
#define CEA_VSI_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_VSI_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_VSI_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE15 (RX_ADR + 0x4F8)
#define CEA_VSI_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE19 (RX_ADR + 0x4FC)
#define CEA_VSI_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE23 (RX_ADR + 0x500)
#define CEA_VSI_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define VSIRX_DBYTE27 (RX_ADR + 0x504)
#define CEA_VSI_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_VSI_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_VSI_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_VSI_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC1_LENGTH (RX_ADR + 0x508)
#define CEA_ISRC1_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC1_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_ISRC1_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define RX_ISRC1_DBYTE3 (RX_ADR + 0x50C)
#define CEA_ISRC1_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC1_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC1_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC1_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC1_DBYTE7 (RX_ADR + 0x510)
#define CEA_ISRC1_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC1_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC1_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC1_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC1_DBYTE11 (RX_ADR + 0x514)
#define CEA_ISRC1_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_ISRC1_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_ISRC1_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC1_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC1_DBYTE15 (RX_ADR + 0x518)
#define CEA_ISRC1_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC1_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC1_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC1_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC1_DEC (RX_ADR + 0x51C)
#define REG_ISRC1_DEC Fld(8, 0, AC_FULLB0) //[7:0]
#define RX_ISRC2_LENGTH (RX_ADR + 0x520)
#define CEA_ISRC2_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC2_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_ISRC2_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define RX_ISRC2_DBYTE3 (RX_ADR + 0x524)
#define CEA_ISRC2_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC2_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC2_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC2_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC2_DBYTE7 (RX_ADR + 0x528)
#define CEA_ISRC2_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC2_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC2_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC2_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC2_DBYTE11 (RX_ADR + 0x52C)
#define CEA_ISRC2_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_ISRC2_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_ISRC2_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC2_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC2_DBYTE15 (RX_ADR + 0x530)
#define CEA_ISRC2_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_ISRC2_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_ISRC2_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_ISRC2_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_ISRC2_DEC (RX_ADR + 0x534)
#define REG_ISRC2_DEC Fld(8, 0, AC_FULLB0) //[7:0]
#define RX_GCP_LENGTH (RX_ADR + 0x538)
#define CEA_GCP_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_GCP_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_GCP_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define RX_GCP_DBYTE3 (RX_ADR + 0x53C)
#define CEA_GCP_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_GCP_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_GCP_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_GCP_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_GCP_DBYTE6 (RX_ADR + 0x540)
#define CEA_GCP_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_GCP_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_GCP_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define HF_VSIRX_LENGTH (RX_ADR + 0x544)
#define CEA_HF_VSI_HEADER_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_HEADER_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define CEA_HF_VSI_LENGTH Fld(8, 16, AC_FULLB2)      //[23:16]
#define HF_VSIRX_DBYTE3 (RX_ADR + 0x548)
#define CEA_HF_VSI_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE7 (RX_ADR + 0x54C)
#define CEA_HF_VSI_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE11 (RX_ADR + 0x550)
#define CEA_HF_VSI_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define CEA_HF_VSI_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define CEA_HF_VSI_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE15 (RX_ADR + 0x554)
#define CEA_HF_VSI_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE19 (RX_ADR + 0x558)
#define CEA_HF_VSI_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE23 (RX_ADR + 0x55C)
#define CEA_HF_VSI_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSIRX_DBYTE27 (RX_ADR + 0x560)
#define CEA_HF_VSI_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define CEA_HF_VSI_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define CEA_HF_VSI_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define CEA_HF_VSI_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HF_VSI_PKT_ID (RX_ADR + 0x564)
#define REG_HF_VSI_HEADER Fld(8, 0, AC_FULLB0) //[7:0]
#define HF_VSIF_CTRL (RX_ADR + 0x568)
#define REG_HF_VSI_PB1 Fld(8, 0, AC_FULLB0)	    //[7:0]
#define REG_HF_VSI_PB2 Fld(8, 8, AC_FULLB1)	    //[15:8]
#define REG_HF_VSI_PB3 Fld(8, 16, AC_FULLB2)	   //[23:16]
#define REG_NEW_HF_VSI_ONLY Fld(1, 24, AC_MSKB3)       //[24:24]
#define REG_SWAP_HF_VSI_IEEE_ID Fld(1, 25, AC_MSKB3)   //[25:25]
#define REG_HF_VSI_CLR_EN Fld(1, 26, AC_MSKB3)	 //[26:26]
#define REG_HF_VSI_IEEE_ID_CHK_EN Fld(1, 27, AC_MSKB3) //[27:27]
#define METADATA_HEADER_BYTE2 (RX_ADR + 0x56C)
#define META_DATA_HEADER_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define META_DATA_HEADER_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define META_DATA_HEADER_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_DBYTE3 (RX_ADR + 0x570)
#define METADATA_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE7 (RX_ADR + 0x574)
#define METADATA_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE11 (RX_ADR + 0x578)
#define METADATA_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define METADATA_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define METADATA_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE15 (RX_ADR + 0x57C)
#define METADATA_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE19 (RX_ADR + 0x580)
#define METADATA_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE23 (RX_ADR + 0x584)
#define METADATA_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define METADATA_DBYTE27 (RX_ADR + 0x588)
#define METADATA_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define METADATA_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define METADATA_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define METADATA_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]

// Page HDMI20_RX_MAC_5
#define HEADER_0X86_CNTRL (RX_ADR + 0x58C)
#define REG_HDR_ADDR_ADDR_0X86_HEADER Fld(8, 0, AC_FULLB0)     //[7:0]
#define REG_AUTOCLR_HDR_ADDR_0X86_PKT Fld(1, 8, AC_MSKB1)      //[8:8]
#define REG_HDR_ADDR_ADDR_0X86_CLR_EN Fld(1, 9, AC_MSKB1)      //[9:9]
#define REG_HDR_ADDR_ADDR_0X86_CLR_DIRECT Fld(1, 10, AC_MSKB1) //[10:10]
#define HEADER_86_HEADER_BYTE2 (RX_ADR + 0x590)
#define META_DATA_HEADER_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define META_DATA_HEADER_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define META_DATA_HEADER_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define HEADER_86_DBYTE3 (RX_ADR + 0x594)
#define ADDR_0X86_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE7 (RX_ADR + 0x598)
#define ADDR_0X86_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE11 (RX_ADR + 0x59C)
#define ADDR_0X86_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_0X86_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_0X86_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE15 (RX_ADR + 0x5A0)
#define ADDR_0X86_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE19 (RX_ADR + 0x5A4)
#define ADDR_0X86_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE23 (RX_ADR + 0x5A8)
#define ADDR_0X86_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_86_DBYTE27 (RX_ADR + 0x5AC)
#define ADDR_0X86_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X86_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X86_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X86_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_0X87_CNTRL (RX_ADR + 0x5B0)
#define REG_HDR_ADDR_0X87_HEADER Fld(8, 0, AC_FULLB0)     //[7:0]
#define REG_AUTOCLR_HDR_ADDR_0X87_PKT Fld(1, 8, AC_MSKB1) //[8:8]
#define REG_HDR_ADDR_0X87_CLR_EN Fld(1, 9, AC_MSKB1)      //[9:9]
#define REG_HDR_ADDR_0X87_CLR_DIRECT Fld(1, 10, AC_MSKB1) //[10:10]
#define HEADER_87_HEADER_BYTE2 (RX_ADR + 0x5B4)
#define META_DATA_HEADER_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define META_DATA_HEADER_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define META_DATA_HEADER_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define HEADER_87_DBYTE3 (RX_ADR + 0x5B8)
#define ADDR_0X87_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE7 (RX_ADR + 0x5BC)
#define ADDR_0X87_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE11 (RX_ADR + 0x5C0)
#define ADDR_0X87_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_0X87_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_0X87_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE15 (RX_ADR + 0x5C4)
#define ADDR_0X87_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE19 (RX_ADR + 0x5C8)
#define ADDR_0X87_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE23 (RX_ADR + 0x5CC)
#define ADDR_0X87_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_87_DBYTE27 (RX_ADR + 0x5D0)
#define ADDR_0X87_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_0X87_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_0X87_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_0X87_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define THX0_VSI_CTRL (RX_ADR + 0x5D4)
#define THX_PB_IEEE_ID Fld(24, 0, AC_MSKDW)	   //[23:0]
#define THX_IEEE_ID_CEA_SPEC Fld(1, 24, AC_MSKB3)     //[24:24]
#define THX_VSI_IEEE_ID_CHK_EN Fld(1, 25, AC_MSKB3)   //[25:25]
#define THX_VSI_CLR_EN Fld(1, 26, AC_MSKB3)	   //[26:26]
#define AUTO_CLR_THX_VSI Fld(1, 27, AC_MSKB3)	 //[27:27]
#define NEW_THX_VSI_ONLY Fld(1, 28, AC_MSKB3)	 //[28:28]
#define THX_PACKET_FOR_NORMAL_USE Fld(1, 29, AC_MSKB3) //[29:29]
#define THX1_VSI_CTRL (RX_ADR + 0x5D8)
#define THX1_PB_IEEE_ID Fld(24, 0, AC_MSKDW)	   //[23:0]
#define THX1_IEEE_ID_CEA_SPEC Fld(1, 24, AC_MSKB3)     //[24:24]
#define THX1_VSI_IEEE_ID_CHK_EN Fld(1, 25, AC_MSKB3)   //[25:25]
#define THX1_VSI_CLR_EN Fld(1, 26, AC_MSKB3)	   //[26:26]
#define AUTO_CLR_THX1_VSI Fld(1, 27, AC_MSKB3)	 //[27:27]
#define NEW_THX1_VSI_ONLY Fld(1, 28, AC_MSKB3)	 //[28:28]
#define THX1_PACKET_FOR_NORMAL_USE Fld(1, 29, AC_MSKB3) //[29:29]
#define VER1_VSI_CTRL (RX_ADR + 0x5DC)
#define VER1_PB_IEEE_ID Fld(24, 0, AC_MSKDW)	   //[23:0]
#define VER1_IEEE_ID_CEA_SPEC Fld(1, 24, AC_MSKB3)     //[24:24]
#define VER1_VSI_IEEE_ID_CHK_EN Fld(1, 25, AC_MSKB3)   //[25:25]
#define VER1_VSI_CLR_EN Fld(1, 26, AC_MSKB3)	   //[26:26]
#define AUTO_CLR_VER1_VSI Fld(1, 27, AC_MSKB3)	 //[27:27]
#define NEW_VER1_VSI_ONLY Fld(1, 28, AC_MSKB3)	 //[28:28]
#define VER1_PACKET_FOR_NORMAL_USE Fld(1, 29, AC_MSKB3) //[29:29]
#define VER2_VSI_CTRL (RX_ADR + 0x5E0)
#define VER2_PB_IEEE_ID Fld(24, 0, AC_MSKDW)	   //[23:0]
#define VER2_IEEE_ID_CEA_SPEC Fld(1, 24, AC_MSKB3)     //[24:24]
#define VER2_VSI_IEEE_ID_CHK_EN Fld(1, 25, AC_MSKB3)   //[25:25]
#define VER2_VSI_CLR_EN Fld(1, 26, AC_MSKB3)	   //[26:26]
#define AUTO_CLR_VER2_VSI Fld(1, 27, AC_MSKB3)	 //[27:27]
#define NEW_VER2_VSI_ONLY Fld(1, 28, AC_MSKB3)	 //[28:28]
#define VER2_PACKET_FOR_NORMAL_USE Fld(1, 29, AC_MSKB3) //[29:29]
#define VSI_CTRL_BAK1 (RX_ADR + 0x5E4)
#define THX_AIDO_VALUE Fld(8, 0, AC_FULLB0)   //[7:0]
#define THX1_VIDEO_VALUE Fld(8, 8, AC_FULLB1) //[15:8]
#define VER1_VIDEO_VALUE Fld(7, 16, AC_MSKB2) //[22:16]
#define VER2_VIDEO_VALUE Fld(7, 24, AC_MSKB3) //[30:24]
#define VSI_CTRL_BAK2 (RX_ADR + 0x5E8)
#define VSYNC_CLR_CNT Fld(3, 0, AC_MSKB0)		 //[2:0]
#define DYNAMIC_HDR_METADATA_HEADER Fld(8, 8, AC_FULLB1) //[15:8]
#define HEADER_THX0_DBYTE27 (RX_ADR + 0x5EC)
#define ADDR_THX0_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE23 (RX_ADR + 0x5F0)
#define ADDR_THX0_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE19 (RX_ADR + 0x5F4)
#define ADDR_THX0_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE15 (RX_ADR + 0x5F8)
#define ADDR_THX0_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE11 (RX_ADR + 0x5FC)
#define ADDR_THX0_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_THX0_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_THX0_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE7 (RX_ADR + 0x600)
#define ADDR_THX0_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_DBYTE3 (RX_ADR + 0x604)
#define ADDR_THX0_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX0_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX0_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX0_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX0_HEADER_BYTE2 (RX_ADR + 0x608)
#define THX0_META_DATA_HEADER_7_0_ Fld(8, 8, AC_FULLB1)    //[15:8]
#define THX0_META_DATA_HEADER_15_8_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define THX0_META_DATA_HEADER_23_16_ Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE27 (RX_ADR + 0x60C)
#define ADDR_THX1_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE23 (RX_ADR + 0x610)
#define ADDR_THX1_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE19 (RX_ADR + 0x614)
#define ADDR_THX1_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE15 (RX_ADR + 0x618)
#define ADDR_THX1_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE11 (RX_ADR + 0x61C)
#define ADDR_THX1_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_THX1_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_THX1_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE7 (RX_ADR + 0x620)
#define ADDR_THX1_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_DBYTE3 (RX_ADR + 0x624)
#define ADDR_THX1_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_THX1_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_THX1_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_THX1_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_THX1_HEADER_BYTE2 (RX_ADR + 0x628)
#define THX1_META_DATA_HEADER_7_0_ Fld(8, 8, AC_FULLB1)    //[15:8]
#define THX1_META_DATA_HEADER_15_8_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define THX1_META_DATA_HEADER_23_16_ Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE27 (RX_ADR + 0x62C)
#define ADDR_VER1_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE23 (RX_ADR + 0x630)
#define ADDR_VER1_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE19 (RX_ADR + 0x634)
#define ADDR_VER1_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE15 (RX_ADR + 0x638)
#define ADDR_VER1_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE11 (RX_ADR + 0x63C)
#define ADDR_VER1_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_VER1_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_VER1_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE7 (RX_ADR + 0x640)
#define ADDR_VER1_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_DBYTE3 (RX_ADR + 0x644)
#define ADDR_VER1_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER1_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER1_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER1_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER1_HEADER_BYTE2 (RX_ADR + 0x648)
#define VER1_META_DATA_HEADER_7_0_ Fld(8, 8, AC_FULLB1)    //[15:8]
#define VER1_META_DATA_HEADER_15_8_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define VER1_META_DATA_HEADER_23_16_ Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE27 (RX_ADR + 0x64C)
#define ADDR_VER2_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE23 (RX_ADR + 0x650)
#define ADDR_VER2_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE19 (RX_ADR + 0x654)
#define ADDR_VER2_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE15 (RX_ADR + 0x658)
#define ADDR_VER2_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE11 (RX_ADR + 0x65C)
#define ADDR_VER2_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define ADDR_VER2_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define ADDR_VER2_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE7 (RX_ADR + 0x660)
#define ADDR_VER2_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_DBYTE3 (RX_ADR + 0x664)
#define ADDR_VER2_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define ADDR_VER2_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define ADDR_VER2_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define ADDR_VER2_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define HEADER_VER2_HEADER_BYTE2 (RX_ADR + 0x668)
#define VER2_META_DATA_HEADER_7_0_ Fld(8, 8, AC_FULLB1)    //[15:8]
#define VER2_META_DATA_HEADER_15_8_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define VER2_META_DATA_HEADER_23_16_ Fld(8, 24, AC_FULLB3) //[31:24]
#define DYNAMIC_HDR_CTRL0 (RX_ADR + 0x66C)
#define DYNAMIC_HDR_FIFO_READ_ADDR Fld(8, 0, AC_FULLB0) //[7:0]
#define DYNAMIC_HDR_CTRL1 (RX_ADR + 0x670)
#define DYNAMIC_HDR_FIFO_READ_TOGGLE Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_RO_STATUS (RX_ADR + 0x674)
#define DYNAMIC_HDR_FIFO0_READBLE_LENGTH Fld(8, 0, AC_FULLB0)  //[7:0]
#define DYNAMIC_HDR_FIFO1_READBLE_LENGTH Fld(8, 8, AC_FULLB1)  //[15:8]
#define DYNAMIC_HDR_FIFO0_READY Fld(1, 16, AC_MSKB2)	   //[16:16]
#define DYNAMIC_HDR_FIFO1_READY Fld(1, 17, AC_MSKB2)	   //[17:17]
#define DYNAMIC_HDR_FINAL_SEQUENCE_INDEX Fld(8, 24, AC_FULLB3) //[31:24]
#define DYNAMIC_HDR_FIFO_DATA0 (RX_ADR + 0x67C)
#define FIFO_DATA_31_0 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA1 (RX_ADR + 0x680)
#define FIFO_DATA_63_32 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA2 (RX_ADR + 0x684)
#define FIFO_DATA_95_64 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA3 (RX_ADR + 0x688)
#define FIFO_DATA_127_96 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA4 (RX_ADR + 0x68C)
#define FIFO_DATA_159_128 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA5 (RX_ADR + 0x690)
#define FIFO_DATA_191_160 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_FIFO_DATA6 (RX_ADR + 0x694)
#define FIFO_DATA_223_192 Fld(32, 0, AC_FULLDW) //[31:0]
#define DYNAMIC_HDR_VENDOR_CTRL (RX_ADR + 0x698)
#define REG_DOVI_IEE_ID Fld(24, 0, AC_MSKDW)		//[23:0]
#define REG_ORGANIZATION_ID_VENDOR Fld(4, 24, AC_MSKB3) //[27:24]
#define REG_IEE_ID_IGNORE Fld(1, 28, AC_MSKB3)		//[28:28]

// Page HDMI20_RX_MAC_6
#define EMP_VRR_PACKET1_D0 (RX_ADR + 0x69C)
#define EMP_VRR_PKT1_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D1 (RX_ADR + 0x6A0)
#define EMP_VRR_PKT1_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D2 (RX_ADR + 0x6A4)
#define EMP_VRR_PKT1_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define EMP_VRR_PKT1_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define EMP_VRR_PKT1_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D3 (RX_ADR + 0x6A8)
#define EMP_VRR_PKT1_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D4 (RX_ADR + 0x6AC)
#define EMP_VRR_PKT1_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D5 (RX_ADR + 0x6B0)
#define EMP_VRR_PKT1_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D6 (RX_ADR + 0x6B4)
#define EMP_VRR_PKT1_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT1_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT1_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT1_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET1_D7 (RX_ADR + 0x6B8)
#define EMP_VRR_PKT1_HEADER Fld(24, 0, AC_MSKDW) //[23:0]
#define EMP_VRR_PACKET_CNTRL (RX_ADR + 0x6BC)
#define REG_VRR_EMP_PKT1_CLR Fld(1, 0, AC_MSKB0)	 //[0:0]
#define REG_VRR_EMP_PKT1_NEW_ONLY Fld(1, 1, AC_MSKB0)    //[1:1]
#define REG_VRR_EMP_PKT2_CLR Fld(1, 2, AC_MSKB0)	 //[2:2]
#define REG_VRR_EMP_PKT2_NEW_ONLY Fld(1, 3, AC_MSKB0)    //[3:3]
#define REG_VRR_EMP_PKT3_CLR Fld(1, 4, AC_MSKB0)	 //[4:4]
#define REG_VRR_EMP_PKT3_NEW_ONLY Fld(1, 5, AC_MSKB0)    //[5:5]
#define REG_ONLY_SUPPORT_PKT1 Fld(1, 6, AC_MSKB0)	//[6:6]
#define REG_IGNORE_DATA_TAG_SET Fld(1, 7, AC_MSKB0)      //[7:7]
#define REG_VRR_EMP_ORGANIZATION_ID Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_DATA_TAG_SET Fld(16, 16, AC_FULLW32)	 //[31:16]
#define EMP_VRR_PACKET2_D0 (RX_ADR + 0x6C0)
#define EMP_VRR_PKT2_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D1 (RX_ADR + 0x6C4)
#define EMP_VRR_PKT2_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D2 (RX_ADR + 0x6C8)
#define EMP_VRR_PKT2_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define EMP_VRR_PKT2_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define EMP_VRR_PKT2_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D3 (RX_ADR + 0x6CC)
#define EMP_VRR_PKT2_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D4 (RX_ADR + 0x6D0)
#define EMP_VRR_PKT2_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D5 (RX_ADR + 0x6D4)
#define EMP_VRR_PKT2_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D6 (RX_ADR + 0x6D8)
#define EMP_VRR_PKT2_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT2_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT2_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT2_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET2_D7 (RX_ADR + 0x6DC)
#define EMP_VRR_PKT2_HEADER Fld(24, 0, AC_MSKDW) //[23:0]
#define EMP_VRR_PACKET3_D0 (RX_ADR + 0x6E0)
#define EMP_VRR_PKT3_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D1 (RX_ADR + 0x6E4)
#define EMP_VRR_PKT3_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D2 (RX_ADR + 0x6E8)
#define EMP_VRR_PKT3_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define EMP_VRR_PKT3_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define EMP_VRR_PKT3_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D3 (RX_ADR + 0x6EC)
#define EMP_VRR_PKT3_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D4 (RX_ADR + 0x6F0)
#define EMP_VRR_PKT3_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D5 (RX_ADR + 0x6F4)
#define EMP_VRR_PKT3_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D6 (RX_ADR + 0x6F8)
#define EMP_VRR_PKT3_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define EMP_VRR_PKT3_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define EMP_VRR_PKT3_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define EMP_VRR_PKT3_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define EMP_VRR_PACKET3_D7 (RX_ADR + 0x6FC)
#define EMP_VRR_PKT3_HEADER Fld(24, 0, AC_MSKDW) //[23:0]
#define GAMUT_PACKET_CTRL (RX_ADR + 0x700)
#define REG_GAMUT_PACKET_HEADER Fld(8, 0, AC_FULLB0) //[7:0]
#define REG_GAMUT_PACKET_CLR Fld(1, 8, AC_MSKB1)     //[8:8]
#define GAMUT_PACKET_D0 (RX_ADR + 0x704)
#define GAMUT_PACKET_PB_0 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_2 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_3 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D1 (RX_ADR + 0x708)
#define GAMUT_PACKET_PB_4 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_5 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_6 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_7 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D2 (RX_ADR + 0x70C)
#define GAMUT_PACKET_PB_8 Fld(8, 0, AC_FULLB0)   //[7:0]
#define GAMUT_PACKET_PB_9 Fld(8, 8, AC_FULLB1)   //[15:8]
#define GAMUT_PACKET_PB_10 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_11 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D3 (RX_ADR + 0x710)
#define GAMUT_PACKET_PB_12 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_13 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_14 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_15 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D4 (RX_ADR + 0x714)
#define GAMUT_PACKET_PB_16 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_17 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_18 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_19 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D5 (RX_ADR + 0x718)
#define GAMUT_PACKET_PB_20 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_21 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_22 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_23 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D6 (RX_ADR + 0x71C)
#define GAMUT_PACKET_PB_24 Fld(8, 0, AC_FULLB0)  //[7:0]
#define GAMUT_PACKET_PB_25 Fld(8, 8, AC_FULLB1)  //[15:8]
#define GAMUT_PACKET_PB_26 Fld(8, 16, AC_FULLB2) //[23:16]
#define GAMUT_PACKET_PB_27 Fld(8, 24, AC_FULLB3) //[31:24]
#define GAMUT_PACKET_D7 (RX_ADR + 0x720)
#define GAMUT_PACKET_HEADER Fld(24, 0, AC_MSKDW) //[23:0]
#define FEATURES (RX_ADR + 0x800)
#define VIDEO_PATH_CORE Fld(1, 0, AC_MSKB0)     //[0:0]
#define VI_MUXING Fld(1, 1, AC_MSKB0)		//[1:1]
#define VI_FDET Fld(1, 2, AC_MSKB0)		//[2:2]
#define VI_SYNC_ADJUST Fld(1, 3, AC_MSKB0)      //[3:3]
#define VI_RATECONV Fld(1, 4, AC_MSKB0)		//[4:4]
#define VI_RETIMING Fld(1, 5, AC_MSKB0)		//[5:5]
#define DEC656 Fld(1, 6, AC_MSKB0)		//[6:6]
#define DEGEN Fld(1, 7, AC_MSKB0)		//[7:7]
#define PIXCAP_IN_FEATURE Fld(1, 8, AC_MSKB1)   //[8:8]
#define C420_C422_FEATURE Fld(1, 9, AC_MSKB1)   //[9:9]
#define C422_C444_FEATURE Fld(1, 10, AC_MSKB1)  //[10:10]
#define MULTI_CSC0 Fld(1, 11, AC_MSKB1)		//[11:11]
#define PIXCAP_PRE Fld(1, 12, AC_MSKB1)		//[12:12]
#define PWLI0 Fld(1, 13, AC_MSKB1)		//[13:13]
#define CMS_MATRIX Fld(1, 14, AC_MSKB1)		//[14:14]
#define PWLI1 Fld(1, 15, AC_MSKB1)		//[15:15]
#define PWLI2 Fld(1, 16, AC_MSKB2)		//[16:16]
#define PIXCAP_POST Fld(1, 17, AC_MSKB2)	//[17:17]
#define MULTI_CSC1 Fld(1, 18, AC_MSKB2)		//[18:18]
#define C444_C422_FEATURE Fld(1, 19, AC_MSKB2)  //[19:19]
#define C422_C420_FEATURE Fld(1, 20, AC_MSKB2)  //[20:20]
#define DITHER_RND_FEATURE Fld(1, 21, AC_MSKB2) //[21:21]
#define RANGE_CLIP_FEATURE Fld(1, 22, AC_MSKB2) //[22:22]
#define PIXCAP_OUT_FEATURE Fld(1, 23, AC_MSKB2) //[23:23]
#define VO_RATECONV Fld(1, 24, AC_MSKB3)	//[24:24]
#define VO_BLANK Fld(1, 25, AC_MSKB3)		//[25:25]
#define VO_EMBD_SYNC_ENC Fld(1, 26, AC_MSKB3)   //[26:26]
#define VO_MUXING Fld(1, 27, AC_MSKB3)		//[27:27]
#define RG_BUILD_TIME_2 (RX_ADR + 0x808)
#define BUILD_TIME_2 Fld(32, 0, AC_FULLDW) //[31:0]
#define RG_DATA_BITS_VALUE_0 (RX_ADR + 0x80C)
#define RESET_CLK_IN Fld(1, 0, AC_MSKB0)	//[0:0]
#define RESET_CLK_CORE Fld(1, 1, AC_MSKB0)      //[1:1]
#define RESET_CLK_OUT Fld(1, 2, AC_MSKB0)       //[2:2]
#define DATA_BITS_VALUE_0 Fld(8, 16, AC_FULLB2) //[23:16]
#define INPUT_SYNC_CONFIG (RX_ADR + 0x810)
#define VSYNC_DISABLE Fld(1, 0, AC_MSKB0)	      //[0:0]
#define HSYNC_DISABLE Fld(1, 1, AC_MSKB0)	      //[1:1]
#define DE_DISABLE_INPUT_SYNC Fld(1, 2, AC_MSKB0)      //[2:2]
#define Y_DISABLE_INPUT_SYNC Fld(1, 3, AC_MSKB0)       //[3:3]
#define CB_DISABLE_INPUT_SYNC Fld(1, 4, AC_MSKB0)      //[4:4]
#define CR_DISABLE_INPUT_SYNC Fld(1, 5, AC_MSKB0)      //[5:5]
#define VSYNC_POLARITY_INPUT_SYNC Fld(1, 16, AC_MSKB2) //[16:16]
#define HSYNC_POLARITY_INPUT_SYNC Fld(1, 17, AC_MSKB2) //[17:17]
#define DE_POLARITY_INPUT_SYNC Fld(1, 18, AC_MSKB2)    //[18:18]
#define INPUT_MAPPING (RX_ADR + 0x814)
#define DDR_ENABLE Fld(1, 0, AC_MSKB0)	//[0:0]
#define DDR_POLARITY Fld(1, 1, AC_MSKB0)      //[1:1]
#define DDR_MODE Fld(3, 2, AC_MSKB0)	  //[4:2]
#define YC_DEMUX_ENABLE Fld(1, 5, AC_MSKB0)   //[5:5]
#define YC_DEMUX_POLARITY Fld(1, 6, AC_MSKB0) //[6:6]
#define CBCR_ORDER Fld(1, 7, AC_MSKB0)	//[7:7]
#define PIXEL_RATE Fld(2, 8, AC_MSKB1)	//[9:8]
#define MUX_420_ENABLE Fld(1, 10, AC_MSKB1)   //[10:10]
#define MUX_CB_OR_CR Fld(1, 11, AC_MSKB1)     //[11:11]
#define REVERSE_Y Fld(1, 16, AC_MSKB2)	//[16:16]
#define REVERSE_CB Fld(1, 17, AC_MSKB2)       //[17:17]
#define REVERSE_CR Fld(1, 18, AC_MSKB2)       //[18:18]
#define SELECT_Y Fld(3, 19, AC_MSKB2)	 //[21:19]
#define SELECT_CB Fld(3, 22, AC_MSKW32)       //[24:22]
#define SELECT_CR Fld(3, 25, AC_MSKB3)	//[27:25]
#define INPUT_MASK (RX_ADR + 0x818)
#define DISABLE_LSBS_Y Fld(2, 0, AC_MSKB0)  //[1:0]
#define DISABLE_LSBS_CB Fld(2, 2, AC_MSKB0) //[3:2]
#define DISABLE_LSBS_CR Fld(2, 4, AC_MSKB0) //[5:4]
#define INPUT_SYNC_ADJUST_CONFIG (RX_ADR + 0x81C)
#define AUTO_DISABLE Fld(1, 0, AC_MSKB0) //[0:0]
#define RG_DEGEN_PIXEL_DELAY (RX_ADR + 0x820)
#define ENABLE Fld(1, 0, AC_MSKB0)		  //[0:0]
#define DEGEN_PIXEL_DELAY Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_DEGEN_LINE_DELAY (RX_ADR + 0x824)
#define DEGEN_PIXEL_COUNT_MINUS_ONE Fld(16, 0, AC_FULLW10) //[15:0]
#define DEGEN_LINE_DELAY Fld(16, 16, AC_FULLW32)	   //[31:16]
#define RG_DEGEN_LINE_COUNT (RX_ADR + 0x828)
#define DEGEN_LINE_COUNT Fld(16, 0, AC_FULLW10) //[15:0]
#define RG_DEC656_DELAY_EAV_TO_HSYNC_ACTIVE (RX_ADR + 0x830)
#define ENABLE Fld(1, 0, AC_MSKB0)				 //[0:0]
#define INVERT_FIELD_ID Fld(1, 1, AC_MSKB0)			 //[1:1]
#define FORCE_YC_PHASE Fld(1, 2, AC_MSKB0)			 //[2:2]
#define YC_PHASE_VALUE Fld(1, 3, AC_MSKB0)			 //[3:3]
#define SKIP_FIRST_EVEN_LINE Fld(1, 4, AC_MSKB0)		 //[4:4]
#define SKIP_FIRST_ODD_LINE Fld(1, 5, AC_MSKB0)			 //[5:5]
#define DEC656_DELAY_EAV_TO_HSYNC_ACTIVE Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_DEC656_VSYNC_FRONT_PORCH (RX_ADR + 0x834)
#define DEC656_PULSE_WIDTH_HSYNC_MINUS_ONE Fld(16, 0, AC_FULLW10) //[15:0]
#define DEC656_VSYNC_FRONT_PORCH Fld(16, 16, AC_FULLW32)	  //[31:16]
#define RG_DEC656_EAV_TO_VSYNC_DELAY_ODD (RX_ADR + 0x838)
#define DEC656_EAV_TO_VSYNC_DELAY_EVEN Fld(16, 0, AC_FULLW10) //[15:0]
#define DEC656_EAV_TO_VSYNC_DELAY_ODD Fld(16, 16, AC_FULLW32) //[31:16]
#define DEC656_STATUS (RX_ADR + 0x83C)
#define DEC656_PULSE_WIDTH_VSYNC Fld(16, 0, AC_FULLW10) //[15:0]
#define INTERLACED Fld(1, 16, AC_MSKB2)			//[16:16]
#define VIDEO656 Fld(1, 17, AC_MSKB2)			//[17:17]
#define YC_PHASE Fld(1, 18, AC_MSKB2)			//[18:18]
#define VIDEO656_ALIGNMENT Fld(3, 19, AC_MSKB2)		//[21:19]
#define OUTPUT_SYNC_CONFIG (RX_ADR + 0x840)
#define VSYNC_DISABLE Fld(1, 0, AC_MSKB0)		//[0:0]
#define HSYNC_DISABLE Fld(1, 1, AC_MSKB0)		//[1:1]
#define CSYNC_DISABLE Fld(1, 2, AC_MSKB0)		//[2:2]
#define DE_DISABLE Fld(1, 3, AC_MSKB0)			//[3:3]
#define Y_DISABLE Fld(1, 4, AC_MSKB0)			//[4:4]
#define CB_DISABLE Fld(1, 5, AC_MSKB0)			//[5:5]
#define CR_DISABLE Fld(1, 6, AC_MSKB0)			//[6:6]
#define TRISTATE Fld(1, 7, AC_MSKB0)			//[7:7]
#define VSYNC_POLARITY_OUTPUT_SYNC Fld(1, 16, AC_MSKB2) //[16:16]
#define HSYNC_POLARITY_OUTPUT_SYNC Fld(1, 17, AC_MSKB2) //[17:17]
#define CSYNC_POLARITY Fld(1, 18, AC_MSKB2)		//[18:18]
#define DE_POLARITY Fld(1, 19, AC_MSKB2)		//[19:19]
#define SWAP_HS_CS Fld(1, 20, AC_MSKB2)			//[20:20]
#define OUTPUT_MASK (RX_ADR + 0x844)
#define REVERSE_Y_OUT Fld(1, 0, AC_MSKB0)	//[0:0]
#define REVERSE_CB_OUT Fld(1, 1, AC_MSKB0)       //[1:1]
#define REVERSE_CR_OUT Fld(1, 2, AC_MSKB0)       //[2:2]
#define SELECT_Y_OUT Fld(3, 3, AC_MSKB0)	 //[5:3]
#define SELECT_CB_OUT Fld(3, 6, AC_MSKW10)       //[8:6]
#define SELECT_CR_OUT Fld(3, 9, AC_MSKB1)	//[11:9]
#define DISABLE_LSBS_Y_OUT Fld(2, 16, AC_MSKB2)  //[17:16]
#define DISABLE_LSBS_CB_OUT Fld(2, 18, AC_MSKB2) //[19:18]
#define DISABLE_LSBS_CR_OUT Fld(2, 20, AC_MSKB2) //[21:20]
#define OUTPUT_FORMAT (RX_ADR + 0x848)
#define DDR_ENABLE Fld(1, 0, AC_MSKB0)	//[0:0]
#define DDR_POLARITY Fld(1, 1, AC_MSKB0)      //[1:1]
#define DDR_MODE Fld(3, 2, AC_MSKB0)	  //[4:2]
#define YC_MUX_ENABLE Fld(1, 5, AC_MSKB0)     //[5:5]
#define YC_MUX_POLARITY Fld(1, 6, AC_MSKB0)   //[6:6]
#define CBCR_ORDER Fld(1, 7, AC_MSKB0)	//[7:7]
#define PIXEL_RATE Fld(2, 8, AC_MSKB1)	//[9:8]
#define DEMUX_420_ENABLE Fld(1, 10, AC_MSKB1) //[10:10]
#define DEMUX_CB_OR_CR Fld(1, 11, AC_MSKB1)   //[11:11]
#define RG_OUTPUT_BLANK_Y (RX_ADR + 0x850)
#define ENABLE_BLANKING_OVERRIDE Fld(1, 0, AC_MSKB0) //[0:0]
#define ENABLE_ACTIVE_OVERRIDE Fld(1, 1, AC_MSKB0)   //[1:1]
#define CHROMA_MODE Fld(2, 2, AC_MSKB0)		     //[3:2]
#define OUTPUT_BLANK_Y Fld(12, 16, AC_MSKW32)	//[27:16]
#define RG_OUTPUT_BLANK_CR (RX_ADR + 0x854)
#define OUTPUT_BLANK_CB Fld(12, 0, AC_MSKW10)  //[11:0]
#define OUTPUT_BLANK_CR Fld(12, 16, AC_MSKW32) //[27:16]
#define RG_OUTPUT_ACTIVE_CB (RX_ADR + 0x858)
#define OUTPUT_ACTIVE_Y Fld(12, 0, AC_MSKW10)   //[11:0]
#define OUTPUT_ACTIVE_CB Fld(12, 16, AC_MSKW32) //[27:16]
#define RG_OUTPUT_ACTIVE_CR (RX_ADR + 0x85C)
#define OUTPUT_ACTIVE_CR Fld(12, 0, AC_MSKW10) //[11:0]
#define FDET_STATUS (RX_ADR + 0x880)
#define SYNC_POLARITY_FORCE Fld(1, 0, AC_MSKB0)   //[0:0]
#define HSYNC_POLARITY_SEL Fld(1, 1, AC_MSKB0)    //[1:1]
#define VSYNC_POLARITY_SEL Fld(1, 2, AC_MSKB0)    //[2:2]
#define ENABLE_656 Fld(1, 3, AC_MSKB0)		  //[3:3]
#define HSYNC_POLARITY_DETECT Fld(1, 8, AC_MSKB1) //[8:8]
#define VSYNC_POLARITY_DETECT Fld(1, 9, AC_MSKB1) //[9:9]
#define INTERLACED_DETECT Fld(1, 10, AC_MSKB1)    //[10:10]
#define VIDEO656_DETECT Fld(1, 11, AC_MSKB1)      //[11:11]

// Page HDMI20_RX_MAC_7
#define RG_FDET_FRAME_RATE_DELTA_THRESHOLD (RX_ADR + 0x884)
#define FDET_FRAME_RATE_DELTA_THRESHOLD Fld(24, 0, AC_MSKDW) //[23:0]
#define RG_FDET_FRAME_RATE (RX_ADR + 0x888)
#define FDET_FRAME_RATE Fld(24, 0, AC_MSKDW) //[23:0]
#define RG_FDET_LINE_COUNT (RX_ADR + 0x88C)
#define FDET_PIXEL_COUNT Fld(16, 0, AC_FULLW10) //[15:0]
#define FDET_LINE_COUNT Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_HSYNC_HIGH_COUNT (RX_ADR + 0x890)
#define FDET_HSYNC_LOW_COUNT Fld(16, 0, AC_FULLW10)   //[15:0]
#define FDET_HSYNC_HIGH_COUNT Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_HBACK_COUNT (RX_ADR + 0x894)
#define FDET_HFRONT_COUNT Fld(16, 0, AC_FULLW10) //[15:0]
#define FDET_HBACK_COUNT Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_VSYNC_HIGH_COUNT_EVEN (RX_ADR + 0x898)
#define FDET_VSYNC_LOW_COUNT_EVEN Fld(16, 0, AC_FULLW10)   //[15:0]
#define FDET_VSYNC_HIGH_COUNT_EVEN Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_VBACK_COUNT_EVEN (RX_ADR + 0x89C)
#define FDET_VFRONT_COUNT_EVEN Fld(16, 0, AC_FULLW10) //[15:0]
#define FDET_VBACK_COUNT_EVEN Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_VSYNC_HIGH_COUNT_ODD (RX_ADR + 0x8A0)
#define FDET_VSYNC_LOW_COUNT_ODD Fld(16, 0, AC_FULLW10)   //[15:0]
#define FDET_VSYNC_HIGH_COUNT_ODD Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_VBACK_COUNT_ODD (RX_ADR + 0x8A4)
#define FDET_VFRONT_COUNT_ODD Fld(16, 0, AC_FULLW10) //[15:0]
#define FDET_VBACK_COUNT_ODD Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_FDET_FRAME_COUNT (RX_ADR + 0x8A8)
#define FDET_FRAME_COUNT Fld(16, 0, AC_FULLW10) //[15:0]
#define EMBD_SYNC_ENC_CONFIG (RX_ADR + 0x8C0)
#define ENABLE Fld(1, 0, AC_MSKB0)	    //[0:0]
#define FIELD_ID_POLARITY Fld(1, 1, AC_MSKB0) //[1:1]
#define INPUT_IS_RGB Fld(1, 2, AC_MSKB0)      //[2:2]
#define EMBD_SYNC_ENC_SECT0_CONFIG (RX_ADR + 0x8C4)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define EMBD_SYNC_ENC_SECT1_CONFIG (RX_ADR + 0x8C8)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define EMBD_SYNC_ENC_SECT2_CONFIG (RX_ADR + 0x8CC)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define EMBD_SYNC_ENC_SECT3_CONFIG (RX_ADR + 0x8D0)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define EMBD_SYNC_ENC_SECT4_CONFIG (RX_ADR + 0x8D4)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define EMBD_SYNC_ENC_SECT5_CONFIG (RX_ADR + 0x8D8)
#define SAV Fld(3, 0, AC_MSKB0)    //[2:0]
#define EAV Fld(3, 3, AC_MSKB0)    //[5:3]
#define LINES Fld(16, 6, AC_MSKDW) //[21:6]
#define DATA Fld(1, 22, AC_MSKB2)  //[22:22]
#define LAST Fld(1, 23, AC_MSKB2)  //[23:23]
#define RG_EMBD_SYNC_ENC_HORIZONTAL_BLANKING_PIXELS (RX_ADR + 0x8DC)
#define EMBD_SYNC_ENC_HORIZONTAL_DATA_PIXELS Fld(16, 0, AC_FULLW10) //[15:0]
#define EMBD_SYNC_ENC_HORIZONTAL_BLANKING_PIXELS                               \
	Fld(16, 16, AC_FULLW32) //[31:16]
#define EMBD_SYNC_ENC_BANK_CONFIG (RX_ADR + 0x8E0)
#define EMBD_SYNC_ENC_UPDATE_REQUEST Fld(1, 0, AC_MSKB0) //[0:0]
#define READ_BANK Fld(1, 8, AC_MSKB1)			 //[8:8]
#define WRITE_BANK Fld(1, 9, AC_MSKB1)			 //[9:9]
#define UPDATE_MODE Fld(1, 10, AC_MSKB1)		 //[10:10]
#define ALL_UPDATE_BYPASS Fld(1, 11, AC_MSKB1)		 //[11:11]
#define RESIGET_RW_ENABLE_0 (RX_ADR + 0x8E4)
#define FDET_FRAME_RATE_WR_EN Fld(3, 0, AC_MSKB0)	    //[2:0]
#define FDET_FRAME_RATE_RD_EN Fld(3, 3, AC_MSKB0)	    //[5:3]
#define FDET_PIXEL_COUNT_WR_EN Fld(2, 6, AC_MSKB0)	   //[7:6]
#define FDET_PIXEL_COUNT_RD_EN Fld(2, 8, AC_MSKB1)	   //[9:8]
#define FDET_LINE_COUNT_WR_EN Fld(2, 10, AC_MSKB1)	   //[11:10]
#define FDET_LINE_COUNT_RD_EN Fld(2, 12, AC_MSKB1)	   //[13:12]
#define FDET_HSYNC_LOW_COUNT_WR_EN Fld(2, 14, AC_MSKB1)      //[15:14]
#define FDET_HSYNC_LOW_COUNT_RD_EN Fld(2, 16, AC_MSKB2)      //[17:16]
#define FDET_HSYNC_HIGH_COUNT_WR_EN Fld(2, 18, AC_MSKB2)     //[19:18]
#define FDET_HSYNC_HIGH_COUNT_RD_EN Fld(2, 20, AC_MSKB2)     //[21:20]
#define FDET_HFRONT_COUNT_WR_EN Fld(2, 22, AC_MSKB2)	 //[23:22]
#define FDET_HFRONT_COUNT_RD_EN Fld(2, 24, AC_MSKB3)	 //[25:24]
#define FDET_HBACK_COUNT_WR_EN Fld(2, 26, AC_MSKB3)	  //[27:26]
#define FDET_HBACK_COUNT_RD_EN Fld(2, 28, AC_MSKB3)	  //[29:28]
#define FDET_VSYNC_LOW_COUNT_EVEN_WR_EN Fld(2, 30, AC_MSKB3) //[31:30]
#define RESIGET_RW_ENABLE_1 (RX_ADR + 0x8E8)
#define FDET_VSYNC_LOW_COUNT_EVEN_RD_EN Fld(2, 0, AC_MSKB0)  //[1:0]
#define FDET_VSYNC_HIGH_COUNT_EVEN_WR_EN Fld(2, 2, AC_MSKB0) //[3:2]
#define FDET_VSYNC_HIGH_COUNT_EVEN_RD_EN Fld(2, 4, AC_MSKB0) //[5:4]
#define FDET_VFRONT_COUNT_EVEN_WR_EN Fld(2, 6, AC_MSKB0)     //[7:6]
#define FDET_VFRONT_COUNT_EVEN_RD_EN Fld(2, 8, AC_MSKB1)     //[9:8]
#define FDET_VBACK_COUNT_EVEN_WR_EN Fld(2, 10, AC_MSKB1)     //[11:10]
#define FDET_VBACK_COUNT_EVEN_RD_EN Fld(2, 12, AC_MSKB1)     //[13:12]
#define FDET_VSYNC_LOW_COUNT_ODD_WR_EN Fld(2, 14, AC_MSKB1)  //[15:14]
#define FDET_VSYNC_LOW_COUNT_ODD_RD_EN Fld(2, 16, AC_MSKB2)  //[17:16]
#define FDET_VSYNC_HIGH_COUNT_ODD_WR_EN Fld(2, 18, AC_MSKB2) //[19:18]
#define FDET_VSYNC_HIGH_COUNT_ODD_RD_EN Fld(2, 20, AC_MSKB2) //[21:20]
#define FDET_VFRONT_COUNT_ODD_WR_EN Fld(2, 22, AC_MSKB2)     //[23:22]
#define FDET_VFRONT_COUNT_ODD_RD_EN Fld(2, 24, AC_MSKB3)     //[25:24]
#define FDET_VBACK_COUNT_ODD_WR_EN Fld(2, 26, AC_MSKB3)      //[27:26]
#define FDET_VBACK_COUNT_ODD_RD_EN Fld(2, 28, AC_MSKB3)      //[29:28]
#define FDET_FRAME_COUNT_WR_EN Fld(2, 30, AC_MSKB3)	  //[31:30]
#define RESIGET_RW_ENABLE_2 (RX_ADR + 0x8EC)
#define FDET_FRAME_COUNT_RD_EN Fld(2, 0, AC_MSKB0)		//[1:0]
#define EMBD_SYNC_ENC_UPDATE_REQUEST_WR_EN Fld(1, 2, AC_MSKB0)  //[2:2]
#define FDET_STATUS_WR_EN Fld(1, 3, AC_MSKB0)			//[3:3]
#define STATUS_CHANGED_MASK Fld(4, 4, AC_MSKB0)			//[7:4]
#define FRAME_RATE_CHANGED_MASK Fld(1, 8, AC_MSKB1)		//[8:8]
#define PIXEL_COUNT_CHANGED_MASK Fld(1, 9, AC_MSKB1)		//[9:9]
#define LINE_COUNT_CHANGED_MASK Fld(1, 10, AC_MSKB1)		//[10:10]
#define HSYNC_LOW_COUNT_CHANGED_MASK Fld(1, 11, AC_MSKB1)       //[11:11]
#define HSYNC_HIGH_COUNT_CHANGED_MASK Fld(1, 12, AC_MSKB1)      //[12:12]
#define HFRONT_COUNT_CHANGED_MASK Fld(1, 13, AC_MSKB1)		//[13:13]
#define HBACK_COUNT_CHANGED_MASK Fld(1, 14, AC_MSKB1)		//[14:14]
#define VSYNC_LOW_COUNT_EVEN_CHANGED_MASK Fld(1, 15, AC_MSKB1)  //[15:15]
#define VSYNC_HIGH_COUNT_EVEN_CHANGED_MASK Fld(1, 16, AC_MSKB2) //[16:16]
#define VFRONT_COUNT_EVEN_CHANGED_MASK Fld(1, 17, AC_MSKB2)     //[17:17]
#define VBACK_COUNT_EVEN_CHANGED_MASK Fld(1, 18, AC_MSKB2)      //[18:18]
#define VSYNC_LOW_COUNT_ODD_CHANGED_MASK Fld(1, 19, AC_MSKB2)   //[19:19]
#define VSYNC_HIGH_COUNT_ODD_CHANGED_MASK Fld(1, 20, AC_MSKB2)  //[20:20]
#define VFRONT_COUNT_ODD_CHANGED_MASK Fld(1, 21, AC_MSKB2)      //[21:21]
#define VBACK_COUNT_ODD_CHANGED_MASK Fld(1, 22, AC_MSKB2)       //[22:22]
#define O_FDET_IRQ_STATUS (RX_ADR + 0x8F0)
#define STATUS_CHANGED_CLEAR Fld(4, 0, AC_MSKB0)		 //[3:0]
#define FRAME_RATE_CHANGED_CLEAR Fld(1, 4, AC_MSKB0)		 //[4:4]
#define PIXEL_COUNT_CHANGED_CLEAR Fld(1, 5, AC_MSKB0)		 //[5:5]
#define LINE_COUNT_CHANGED_CLEAR Fld(1, 6, AC_MSKB0)		 //[6:6]
#define HSYNC_LOW_COUNT_CHANGED_CLEAR Fld(1, 7, AC_MSKB0)	//[7:7]
#define HSYNC_HIGH_COUNT_CHANGED_CLEAR Fld(1, 8, AC_MSKB1)       //[8:8]
#define HFRONT_COUNT_CHANGED_CLEAR Fld(1, 9, AC_MSKB1)		 //[9:9]
#define HBACK_COUNT_CHANGED_CLEAR Fld(1, 10, AC_MSKB1)		 //[10:10]
#define VSYNC_LOW_COUNT_EVEN_CHANGED_CLEAR Fld(1, 11, AC_MSKB1)  //[11:11]
#define VSYNC_HIGH_COUNT_EVEN_CHANGED_CLEAR Fld(1, 12, AC_MSKB1) //[12:12]
#define VFRONT_COUNT_EVEN_CHANGED_CLEAR Fld(1, 13, AC_MSKB1)     //[13:13]
#define VBACK_COUNT_EVEN_CHANGED_CLEAR Fld(1, 14, AC_MSKB1)      //[14:14]
#define VSYNC_LOW_COUNT_ODD_CHANGED_CLEAR Fld(1, 15, AC_MSKB1)   //[15:15]
#define VSYNC_HIGH_COUNT_ODD_CHANGED_CLEAR Fld(1, 16, AC_MSKB2)  //[16:16]
#define VFRONT_COUNT_ODD_CHANGED_CLEAR Fld(1, 17, AC_MSKB2)      //[17:17]
#define VBACK_COUNT_ODD_CHANGED_CLEAR Fld(1, 18, AC_MSKB2)       //[18:18]
#define I_FDET_IRQ_STATUS (RX_ADR + 0x8F4)
#define STATUS_CHANGED_IRQ Fld(4, 0, AC_MSKB0)		       //[3:0]
#define FRAME_RATE_CHANGED_IRQ Fld(1, 4, AC_MSKB0)	     //[4:4]
#define PIXEL_COUNT_CHANGED_IRQ Fld(1, 5, AC_MSKB0)	    //[5:5]
#define LINE_COUNT_CHANGED_IRQ Fld(1, 6, AC_MSKB0)	     //[6:6]
#define HSYNC_LOW_COUNT_CHANGED_IRQ Fld(1, 7, AC_MSKB0)	//[7:7]
#define HSYNC_HIGH_COUNT_CHANGED_IRQ Fld(1, 8, AC_MSKB1)       //[8:8]
#define HFRONT_COUNT_CHANGED_IRQ Fld(1, 9, AC_MSKB1)	   //[9:9]
#define HBACK_COUNT_CHANGED_IRQ Fld(1, 10, AC_MSKB1)	   //[10:10]
#define VSYNC_LOW_COUNT_EVEN_CHANGED_IRQ Fld(1, 11, AC_MSKB1)  //[11:11]
#define VSYNC_HIGH_COUNT_EVEN_CHANGED_IRQ Fld(1, 12, AC_MSKB1) //[12:12]
#define VFRONT_COUNT_EVEN_CHANGED_IRQ Fld(1, 13, AC_MSKB1)     //[13:13]
#define VBACK_COUNT_EVEN_CHANGED_IRQ Fld(1, 14, AC_MSKB1)      //[14:14]
#define VSYNC_LOW_COUNT_ODD_CHANGED_IRQ Fld(1, 15, AC_MSKB1)   //[15:15]
#define VSYNC_HIGH_COUNT_ODD_CHANGED_IRQ Fld(1, 16, AC_MSKB2)  //[16:16]
#define VFRONT_COUNT_ODD_CHANGED_IRQ Fld(1, 17, AC_MSKB2)      //[17:17]
#define VBACK_COUNT_ODD_CHANGED_IRQ Fld(1, 18, AC_MSKB2)       //[18:18]
#define VID_THR (RX_ADR + 0x8F8)
#define HSTB_CNT_THR Fld(4, 0, AC_MSKB0) //[3:0]
#define VSTB_CNT_THR Fld(4, 4, AC_MSKB0) //[7:4]
#define HRES_THR Fld(6, 8, AC_MSKB1)     //[13:8]
#define VRES_THR Fld(6, 16, AC_MSKB2)    //[21:16]
#define VID_RES (RX_ADR + 0x8FC)
#define HRESOLUTION_15_0_ Fld(16, 0, AC_FULLW10)  //[15:0]
#define VRESOLUTION_15_0_ Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_DATA_BITS_VALUE_1 (RX_ADR + 0x900)
#define CSC_CORE Fld(1, 0, AC_MSKB0)		//[0:0]
#define PIXCAP_IN Fld(1, 1, AC_MSKB0)		//[1:1]
#define C420_C422 Fld(1, 2, AC_MSKB0)		//[2:2]
#define C422_C444 Fld(1, 3, AC_MSKB0)		//[3:3]
#define MULTI_CSC Fld(1, 4, AC_MSKB0)		//[4:4]
#define C444_C422 Fld(1, 5, AC_MSKB0)		//[5:5]
#define C422_C420 Fld(1, 6, AC_MSKB0)		//[6:6]
#define DITHER_RND Fld(1, 7, AC_MSKB0)		//[7:7]
#define RANGE_CLIP Fld(1, 8, AC_MSKB1)		//[8:8]
#define PIXCAP_OUT Fld(1, 9, AC_MSKB1)		//[9:9]
#define RETIMING Fld(1, 10, AC_MSKB1)		//[10:10]
#define SHARED_420 Fld(1, 11, AC_MSKB1)		//[11:11]
#define DATA_BITS_VALUE_1 Fld(8, 16, AC_FULLB2) //[23:16]
#define RG_BUILD_TIME (RX_ADR + 0x904)
#define BUILD_TIME Fld(32, 0, AC_FULLDW) //[31:0]
#define C420_C422_CONFIG (RX_ADR + 0x908)
#define C420_C422_ENABLE Fld(1, 0, AC_MSKB0)  //[0:0]
#define BYPASS Fld(1, 1, AC_MSKB0)	    //[1:1]
#define IN_CB_OR_CR Fld(1, 2, AC_MSKB0)       //[2:2]
#define IN_CB_CR_POLARITY Fld(1, 3, AC_MSKB0) //[3:3]
#define C422_C444_CONFIG (RX_ADR + 0x90C)
#define C422_C444_ENABLE Fld(1, 0, AC_MSKB0) //[0:0]
#define USE_CB_OR_CR Fld(1, 1, AC_MSKB0)     //[1:1]
#define DISABLE_FILTER Fld(1, 2, AC_MSKB0)   //[2:2]
#define PIXCAP_IN_STATUS (RX_ADR + 0x910)
#define SHOW_POINT Fld(1, 0, AC_MSKB0)   //[0:0]
#define AUTO_TRIGGER Fld(1, 1, AC_MSKB0) //[1:1]
#define TRIGGER Fld(1, 8, AC_MSKB1)      //[8:8]
#define BUSY Fld(1, 16, AC_MSKB2)	//[16:16]
#define ERROR Fld(1, 17, AC_MSKB2)       //[17:17]
#define RG_PIXCAP_IN_LINE (RX_ADR + 0x914)
#define PIXCAP_IN_PIXEL Fld(16, 0, AC_FULLW10) //[15:0]
#define PIXCAP_IN_LINE Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_PIXCAP_IN_CB (RX_ADR + 0x918)
#define PIXCAP_IN_Y Fld(12, 0, AC_MSKW10)   //[11:0]
#define PIXCAP_IN_CB Fld(12, 12, AC_MSKW21) //[23:12]
#define RG_PIXCAP_IN_CR (RX_ADR + 0x91C)
#define PIXCAP_IN_CR Fld(12, 0, AC_MSKW10) //[11:0]
#define RG_MULTI_CSC_MULTCOEFFR1C1 (RX_ADR + 0x920)
#define ENABLE_MULTI_CSC Fld(2, 0, AC_MSKB0)		//[1:0]
#define OUT_STD Fld(2, 2, AC_MSKB0)			//[3:2]
#define OUT_PC Fld(1, 4, AC_MSKB0)			//[4:4]
#define OUT_RGB Fld(1, 5, AC_MSKB0)			//[5:5]
#define IN_STD Fld(2, 6, AC_MSKB0)			//[7:6]
#define IN_PC Fld(1, 8, AC_MSKB1)			//[8:8]
#define IN_RGB Fld(1, 9, AC_MSKB1)			//[9:9]
#define DITHER_ENABLE Fld(1, 10, AC_MSKB1)		//[10:10]
#define MULTI_CSC_MULTCOEFFR1C1 Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_MULTI_CSC_MULTCOEFFR1C3 (RX_ADR + 0x924)
#define MULTI_CSC_MULTCOEFFR1C2 Fld(16, 0, AC_FULLW10)  //[15:0]
#define MULTI_CSC_MULTCOEFFR1C3 Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_MULTI_CSC_MULTCOEFFR2C2 (RX_ADR + 0x928)
#define MULTI_CSC_MULTCOEFFR2C1 Fld(16, 0, AC_FULLW10)  //[15:0]
#define MULTI_CSC_MULTCOEFFR2C2 Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_MULTI_CSC_MULTCOEFFR3C1 (RX_ADR + 0x92C)
#define MULTI_CSC_MULTCOEFFR2C3 Fld(16, 0, AC_FULLW10)  //[15:0]
#define MULTI_CSC_MULTCOEFFR3C1 Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_MULTI_CSC_MULTCOEFFR3C3 (RX_ADR + 0x930)
#define MULTI_CSC_MULTCOEFFR3C2 Fld(16, 0, AC_FULLW10)  //[15:0]
#define MULTI_CSC_MULTCOEFFR3C3 Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_MULTI_CSC_IN_BCB_OFFSET (RX_ADR + 0x934)
#define MULTI_CSC_IN_GY_OFFSET Fld(13, 0, AC_MSKW10)   //[12:0]
#define MULTI_CSC_IN_BCB_OFFSET Fld(13, 16, AC_MSKW32) //[28:16]
#define RG_MULTI_CSC_OUT_GY_OFFSET (RX_ADR + 0x938)
#define MULTI_CSC_IN_RCR_OFFSET Fld(13, 0, AC_MSKW10)  //[12:0]
#define MULTI_CSC_OUT_GY_OFFSET Fld(13, 16, AC_MSKW32) //[28:16]
#define RG_MULTI_CSC_OUT_RCR_OFFSET (RX_ADR + 0x93C)
#define MULTI_CSC_OUT_BCB_OFFSET Fld(13, 0, AC_MSKW10)  //[12:0]
#define MULTI_CSC_OUT_RCR_OFFSET Fld(13, 16, AC_MSKW32) //[28:16]
#define C422_C420_CONFIG (RX_ADR + 0x940)
#define ENABLE_C422_C420 Fld(1, 0, AC_MSKB0)    //[0:0]
#define RESERVED_1 Fld(1, 1, AC_MSKB0)		//[1:1]
#define DISABLE_FILTER Fld(1, 2, AC_MSKB0)      //[2:2]
#define DOWN_SAMPLE_ENABLE Fld(1, 16, AC_MSKB2) //[16:16]
#define BYPASS_C422_C420 Fld(1, 17, AC_MSKB2)   //[17:17]
#define OUT_CB_OR_CR Fld(1, 18, AC_MSKB2)       //[18:18]
#define OUT_CB_CR_POLARITY Fld(1, 19, AC_MSKB2) //[19:19]
#define RANGE_CLIP_CONFIG (RX_ADR + 0x944)
#define MODE Fld(2, 0, AC_MSKB0)		     //[1:0]
#define RND_ENABLE Fld(1, 2, AC_MSKB0)		     //[2:2]
#define SPATIAL_ENABLE Fld(1, 3, AC_MSKB0)	   //[3:3]
#define SPATIAL_DUAL Fld(1, 4, AC_MSKB0)	     //[4:4]
#define INPUT_IS_RGB_RANGE_CLIP Fld(1, 16, AC_MSKB2) //[16:16]
#define RG_RANGE_CLIP_Y_MAX (RX_ADR + 0x948)
#define RANGE_CLIP_Y_MIN Fld(12, 0, AC_MSKW10)  //[11:0]
#define RANGE_CLIP_Y_MAX Fld(12, 16, AC_MSKW32) //[27:16]
#define RG_RANGE_CLIP_C_MAX (RX_ADR + 0x94C)
#define RANGE_CLIP_C_MIN Fld(12, 0, AC_MSKW10)  //[11:0]
#define RANGE_CLIP_C_MAX Fld(12, 16, AC_MSKW32) //[27:16]
#define RG_PIXCAP_OUT_STATUS (RX_ADR + 0x950)
#define SHOW_POINT Fld(1, 0, AC_MSKB0)   //[0:0]
#define AUTO_TRIGGER Fld(1, 1, AC_MSKB0) //[1:1]
#define TRIGGER Fld(1, 8, AC_MSKB1)      //[8:8]
#define BUSY Fld(1, 16, AC_MSKB2)	//[16:16]
#define ERROR Fld(1, 17, AC_MSKB2)       //[17:17]
#define RG_PIXCAP_OUT_LINE (RX_ADR + 0x954)
#define PIXCAP_OUT_PIXEL Fld(16, 0, AC_FULLW10) //[15:0]
#define PIXCAP_OUT_LINE Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_PIXCAP_OUT_CB (RX_ADR + 0x958)
#define PIXCAP_OUT_Y Fld(12, 0, AC_MSKW10)   //[11:0]
#define PIXCAP_OUT_CB Fld(12, 16, AC_MSKW32) //[27:16]
#define RG_PIXCAP_OUT_CR (RX_ADR + 0x95C)
#define PIXCAP_OUT_CR Fld(12, 0, AC_MSKW10) //[11:0]
#define RG_VTG_HORIZONTAL_ACTIVE_VIDEO_START (RX_ADR + 0x960)
#define VTG_HORIZONTAL_SYNC_END Fld(16, 0, AC_FULLW10)		  //[15:0]
#define VTG_HORIZONTAL_ACTIVE_VIDEO_START Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_VTG_HORIZONTAL_ACTIVE_VIDEO_END (RX_ADR + 0x964)
#define VTG_HALFLINE Fld(16, 0, AC_FULLW10)			//[15:0]
#define VTG_HORIZONTAL_ACTIVE_VIDEO_END Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_VTG_END_OF_LINE (RX_ADR + 0x968)
#define VTG_END_OF_LINE Fld(16, 0, AC_FULLW10) //[15:0]
#define RG_VTG_TRIGGER_START (RX_ADR + 0x970)
#define VTG_VERTICAL_SYNC_END Fld(16, 0, AC_FULLW10) //[15:0]
#define VTG_TRIGGER_START Fld(16, 16, AC_FULLW32)    //[31:16]
#define RG_VTTG_VERTICAL_ACTIVE_VIDEO_END (RX_ADR + 0x974)
#define VTG_VERTICAL_ACTIVE_VIDEO_START Fld(16, 0, AC_FULLW10) //[15:0]
#define VTTG_VERTICAL_ACTIVE_VIDEO_END Fld(16, 16, AC_FULLW32) //[31:16]
#define RG_VTG_THRESHOLD (RX_ADR + 0x978)
#define VTG_VERTICAL_END_OF_FRAME Fld(16, 0, AC_FULLW10) //[15:0]
#define ENABLE_VTG_THR Fld(1, 16, AC_MSKB2)		 //[16:16]
#define RESYNC Fld(1, 17, AC_MSKB2)			 //[17:17]
#define UNLOCK Fld(1, 18, AC_MSKB2)			 //[18:18]
#define BLANK Fld(1, 19, AC_MSKB2)			 //[19:19]
#define VTG_THRESHOLD Fld(8, 24, AC_FULLB3)		 //[31:24]
#define RG_VTG_BANK_CONFIG (RX_ADR + 0x97C)
#define VTG_CYCLE_DELAY Fld(16, 0, AC_FULLW10)  //[15:0]
#define VTG_UPDATE_REQUEST Fld(1, 16, AC_MSKB2) //[16:16]
#define READ_BANK_VTG Fld(1, 24, AC_MSKB3)      //[24:24]
#define WRITE_BANK_VTG Fld(1, 25, AC_MSKB3)     //[25:25]
#define UPDATE_MODE_VTG Fld(1, 26, AC_MSKB3)    //[26:26]
#define RG_RX_N_SVAL1 (RX_ADR + 0xC00)
#define REG_ACR_INIT Fld(1, 0, AC_MSKB0)	    //[0:0]
#define REG_FS_HW_SW_SEL Fld(1, 1, AC_MSKB0)	//[1:1]
#define REG_CTS_REUSED_AUTO_EN Fld(1, 2, AC_MSKB0)  //[2:2]
#define REG_N_HW_SW_SEL Fld(1, 3, AC_MSKB0)	 //[3:3]
#define REG_CTS_HW_SW_SEL Fld(1, 4, AC_MSKB0)       //[4:4]
#define REG_UPLL_HW_SW_SEL Fld(1, 5, AC_MSKB0)      //[5:5]
#define REG_POST_HW_SW_SEL Fld(1, 6, AC_MSKB0)      //[6:6]
#define REG_CTS_DROPPED_AUTO_EN Fld(1, 7, AC_MSKB0) //[7:7]
#define REG_MCLK4DSD Fld(2, 8, AC_MSKB1)	    //[9:8]
#define REG_MCLK4HBRA Fld(2, 10, AC_MSKB1)	  //[11:10]
#define REG_MCLK4DAC Fld(2, 12, AC_MSKB1)	   //[13:12]
#define REG_VCNT_MAX Fld(2, 14, AC_MSKB1)	   //[15:14]
#define REG_FS_VAL_SW Fld(6, 16, AC_MSKB2)	  //[21:16]
#define REG_FM_VAL_SW Fld(2, 22, AC_MSKB2)	  //[23:22]
#define REG_N_VAL_SW_7_0_ Fld(8, 24, AC_FULLB3)     //[31:24]

// Page HDMI20_RX_MAC_8
#define RG_RX_N_HVAL2 (RX_ADR + 0xC04)
#define REG_N_VAL_SW_15_8_ Fld(8, 0, AC_FULLB0) //[7:0]
#define REG_N_VAL_SW_19_16_ Fld(4, 8, AC_MSKB1) //[11:8]
#define N_VAL_HW_7_0_ Fld(8, 16, AC_FULLB2)     //[23:16]
#define N_VAL_HW_15_8_ Fld(8, 24, AC_FULLB3)    //[31:24]
#define RG_RX_CTS_SVAL3 (RX_ADR + 0xC08)
#define N_VAL_HW_19_16_ Fld(4, 0, AC_MSKB0)	//[3:0]
#define REG_CTS_VAL_SW_7_0_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_CTS_VAL_SW_15_8_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_CTS_VAL_SW_19_16_ Fld(4, 24, AC_MSKB3) //[27:24]
#define RG_RX_UPLL_SVAL (RX_ADR + 0xC0C)
#define CTS_VAL_HW_7_0_ Fld(8, 0, AC_FULLB0)   //[7:0]
#define CTS_VAL_HW_15_8_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define CTS_VAL_HW_19_16_ Fld(4, 16, AC_MSKB2) //[19:16]
#define REG_UPLL_VAL_SW Fld(7, 24, AC_MSKB3)   //[30:24]
#define RG_RX_LK_WIN_SVAL (RX_ADR + 0xC10)
#define UPLL_VAL_HW Fld(7, 0, AC_MSKB0)		//[6:0]
#define REG_POST_VAL_SW Fld(6, 8, AC_MSKB1)     //[13:8]
#define POST_VAL_HW Fld(6, 16, AC_MSKB2)	//[21:16]
#define REG_LK_WIN_SW_0_ Fld(1, 24, AC_MSKB3)   //[24:24]
#define REG_LK_WIN_SW_4_1_ Fld(4, 25, AC_MSKB3) //[28:25]
#define RG_RX_TCLK_FS (RX_ADR + 0xC14)
#define REG_LK_THRS_SVAL_7_0_ Fld(8, 0, AC_FULLB0)   //[7:0]
#define REG_LK_THRS_SVAL_15_8_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_LK_THRS_SVAL_19_16_ Fld(4, 16, AC_MSKB2) //[19:16]
#define RHDMI_AUD_SAMPLE_F Fld(4, 24, AC_MSKB3)      //[27:24]
#define REG_FS_FILTER_EN Fld(1, 28, AC_MSKB3)	//[28:28]
#define RHDMI_AUD_SAMPLE_F_EXTN Fld(2, 30, AC_MSKB3) //[31:30]
#define RG_AUD4AAC0_HLP (RX_ADR + 0xC18)
#define REG_POST_DIV2_ENA Fld(1, 0, AC_MSKB0)   //[0:0]
#define REG_LOG_WIN_ENA Fld(1, 1, AC_MSKB0)     //[1:1]
#define REG_MCLK_LOOPBACK Fld(1, 2, AC_MSKB0)   //[2:2]
#define REG_CTS_THRESH Fld(4, 3, AC_MSKB0)      //[6:3]
#define CGMS_A Fld(2, 8, AC_MSKB1)		//[9:8]
#define CGMS_A_VALIDITY Fld(1, 10, AC_MSKB1)    //[10:10]
#define BIT43 Fld(1, 11, AC_MSKB1)		//[11:11]
#define AUD_SAMPLE_F_COEFF Fld(4, 12, AC_MSKB1) //[15:12]
#define INFO_IN_PCM_SIGNAL Fld(1, 16, AC_MSKB2) //[16:16]
#define AUD_CH_STAT7 Fld(7, 17, AC_MSKB2)       //[23:17]
#define REG_DSD_LAYOUT Fld(4, 24, AC_MSKB3)     //[27:24]
#define REG_DAC_LAYOUT Fld(4, 28, AC_MSKB3)     //[31:28]
#define RG_RX_AUDRX_CTRL (RX_ADR + 0xC1C)
#define REG_1ST_BIT Fld(1, 0, AC_MSKB0)		//[0:0]
#define REG_DATA_DIR Fld(1, 1, AC_MSKB0)	//[1:1]
#define REG_JUSTIFY Fld(1, 2, AC_MSKB0)		//[2:2]
#define REG_WS Fld(1, 3, AC_MSKB0)		//[3:3]
#define REG_MSB Fld(1, 4, AC_MSKB0)		//[4:4]
#define REG_SIZE Fld(1, 5, AC_MSKB0)		//[5:5]
#define REG_CLK_EDGE Fld(1, 6, AC_MSKB0)	//[6:6]
#define REG_INVALID_EN Fld(1, 7, AC_MSKB0)      //[7:7]
#define REG_PCM Fld(1, 8, AC_MSKB1)		//[8:8]
#define REG_VUCP Fld(1, 9, AC_MSKB1)		//[9:9]
#define REG_MUTE_FLAT Fld(1, 10, AC_MSKB1)      //[10:10]
#define REG_MCLK_EN Fld(1, 11, AC_MSKB1)	//[11:11]
#define REG_SD0_EN Fld(1, 12, AC_MSKB1)		//[12:12]
#define REG_SD1_EN Fld(1, 13, AC_MSKB1)		//[13:13]
#define REG_SD2_EN Fld(1, 14, AC_MSKB1)		//[14:14]
#define REG_SD3_EN Fld(1, 15, AC_MSKB1)		//[15:15]
#define REG_SD0_MAP Fld(2, 16, AC_MSKB2)	//[17:16]
#define REG_SD1_MAP Fld(2, 18, AC_MSKB2)	//[19:18]
#define REG_SD2_MAP Fld(2, 20, AC_MSKB2)	//[21:20]
#define REG_SD3_MAP Fld(2, 22, AC_MSKB2)	//[23:22]
#define REG_SPDIF_EN Fld(1, 24, AC_MSKB3)       //[24:24]
#define REG_SPDIF_MODE Fld(1, 25, AC_MSKB3)     //[25:25]
#define REG_I2S_MODE Fld(1, 26, AC_MSKB3)       //[26:26]
#define REG_PASS_AUD_ERR Fld(1, 27, AC_MSKB3)   //[27:27]
#define REG_PASS_SPDIF_ERR Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_HW_MUTE_EN Fld(1, 29, AC_MSKB3)     //[29:29]
#define REG_INV_COR_EN Fld(1, 30, AC_MSKB3)     //[30:30]
#define REG_I2S_LENGTH_EN Fld(1, 31, AC_MSKB3)  //[31:31]
#define RG_RX_MUTE_DIV (RX_ADR + 0xC20)
#define CHNL_STATUS_BIT0 Fld(1, 0, AC_MSKB0)     //[0:0]
#define CHNL_STATUS_BIT1 Fld(1, 1, AC_MSKB0)     //[1:1]
#define CHNL_STATUS_BIT2 Fld(1, 2, AC_MSKB0)     //[2:2]
#define CHNL_STATUS_BIT3_4_5 Fld(3, 3, AC_MSKB0) //[5:3]
#define CHNL_STATUS_BIT6_7 Fld(2, 6, AC_MSKB0)   //[7:6]
#define CHNL_STATUS_BIT7_0 Fld(8, 0, AC_FULLB1)  //[7:0]
#define CHNL_STATUS_BIT15_8 Fld(8, 8, AC_FULLB1) //[15:8]
#define CHNL_STATUS_BIT23_16 Fld(8, 16, AC_FULLB1)
#define AUD_SOURCE1 Fld(4, 16, AC_MSKB2)   //[19:16]
#define AUD_CH_NUM1 Fld(4, 20, AC_MSKB2)   //[23:20]
#define REG_DIV_INCR Fld(8, 24, AC_FULLB3) //[31:24]
#define RG_RX_CHST5 (RX_ADR + 0xC24)
#define REG_OW_EN Fld(1, 0, AC_MSKB0)       //[0:0]
#define REG_CS_BIT2 Fld(1, 2, AC_MSKB0)     //[2:2]
#define REG_SWAP Fld(4, 4, AC_MSKB0)	//[7:4]
#define REG_CS_BIT15_8 Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_CS_BIT31_24 Fld(8, 16, AC_FULLB1)
#define AUD_SAMPLE_F Fld(4, 16, AC_MSKB2)      //[19:16]
#define AUD_ACCURACY Fld(2, 20, AC_MSKB2)      //[21:20]
#define AUD_SAMPLE_F_EXTN Fld(2, 22, AC_MSKB2) //[23:22]
#define REG_CS_BIT40_32 Fld(8, 24, AC_FULLB1)
#define AUD_LENGTH_MAX Fld(1, 24, AC_MSKB3) //[24:24]
#define AUD_LENGTH Fld(3, 25, AC_MSKB3)     //[27:25]
#define AUD_ORG_FS Fld(4, 28, AC_MSKB3)     //[31:28]
#define RG_RX_TDM_CTRL1 (RX_ADR + 0xC28)
#define REG_CH0_MUTE Fld(1, 0, AC_MSKB0)	   //[0:0]
#define REG_CH1_MUTE Fld(1, 1, AC_MSKB0)	   //[1:1]
#define REG_CH2_MUTE Fld(1, 2, AC_MSKB0)	   //[2:2]
#define REG_CH3_MUTE Fld(1, 3, AC_MSKB0)	   //[3:3]
#define REG_I2S_LENGTH Fld(4, 4, AC_MSKB0)	 //[7:4]
#define REG_AUDIO_MUTE Fld(1, 9, AC_MSKB1)	 //[9:9]
#define REG_MUTE_OUT_POL Fld(1, 10, AC_MSKB1)      //[10:10]
#define AAC_AUDIO_MUTE Fld(1, 12, AC_MSKB1)	//[12:12]
#define REG_SPDIF4I2S_EN Fld(1, 13, AC_MSKB1)      //[13:13]
#define REG_SPDIF4TDM_EN Fld(1, 14, AC_MSKB1)      //[14:14]
#define REG_AUDIO_TOGGLE_MODE Fld(1, 23, AC_MSKB2) //[23:23]
#define REG_FORCE_AUDIO_SD Fld(1, 24, AC_MSKB3)    //[24:24]
#define REG_TDM_CH_NUM Fld(2, 25, AC_MSKB3)	//[26:25]
#define REG_TDM_FS_MSB Fld(2, 27, AC_MSKB3)	//[28:27]
#define RG_VID_XPCLK_EN (RX_ADR + 0xC2C)
#define REG_TDM_FS_LEN Fld(8, 0, AC_FULLB0)		 //[7:0]
#define REG_VID_PCLK_CNT_MULT_3_0_ Fld(4, 8, AC_MSKB1)   //[11:8]
#define REG_VID_PCLK_CNT_BASE_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_VID_XCLKPCLK_EN Fld(1, 24, AC_MSKB3)	 //[24:24]
#define REG_VRES_XCLK_DIFF Fld(4, 28, AC_MSKB3)		 //[31:28]
#define RG_VID_XP_THRSH (RX_ADR + 0xC30)
#define REG_XP_BASE_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_XP_BASE_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_XP_BASE_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_XP_THRSH Fld(8, 24, AC_FULLB3)       //[31:24]
#define RG_RX_APLL_POLE (RX_ADR + 0xC34)
#define AAC_XCLK_IN_PCLK_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define AAC_XCLK_IN_PCLK_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define AAC_XCLK_IN_PCLK_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define AAC_XCLK_IN_PCLK23_0 Fld(24, 0, AC_FULLB2)    //[23:0]
#define REG_POLE Fld(3, 24, AC_MSKB3)		      //[26:24]
#define REG_ZERO Fld(3, 27, AC_MSKB3)		      //[29:27]
#define REG_MODOVRVAL Fld(2, 30, AC_MSKB3)	    //[31:30]
#define RG_RX_APLL_OVRCTRL (RX_ADR + 0xC38)
#define REG_CLIP Fld(4, 0, AC_MSKB0)		 //[3:0]
#define REG_SDREF Fld(3, 4, AC_MSKB0)		 //[6:4]
#define REG_WRAP Fld(1, 7, AC_MSKB0)		 //[7:7]
#define REG_SDINOVRVAL Fld(8, 8, AC_FULLB1)      //[15:8]
#define REG_USOVRVAL Fld(3, 16, AC_MSKB2)	//[18:16]
#define REG_CPCTRL Fld(3, 19, AC_MSKB2)		 //[21:19]
#define REG_LFCTRL Fld(2, 22, AC_MSKB2)		 //[23:22]
#define REG_NCLKSEL Fld(1, 24, AC_MSKB3)	 //[24:24]
#define REG_FS32OVRVAL Fld(1, 25, AC_MSKB3)      //[25:25]
#define REG_PREDIVSELOVRVAL Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_USOVR Fld(1, 27, AC_MSKB3)		 //[27:27]
#define REG_FS32OVR Fld(1, 28, AC_MSKB3)	 //[28:28]
#define REG_SDINOVR Fld(1, 29, AC_MSKB3)	 //[29:29]
#define REG_MODOVR Fld(1, 30, AC_MSKB3)		 //[30:30]
#define REG_PREDIVSELOVR Fld(1, 31, AC_MSKB3)    //[31:31]
#define RG_RX_NACR_STS2 (RX_ADR + 0xC3C)
#define ACR_DPLL_LOCK Fld(1, 0, AC_MSKB0)      //[0:0]
#define REG_NAPLL_CTL Fld(4, 8, AC_MSKB1)      //[11:8]
#define NAPLL_FBDIV_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define NAPLL_FBDIV_11_8_ Fld(4, 24, AC_MSKB3) //[27:24]
#define RG_RX_NACR_STS6 (RX_ADR + 0xC40)
#define NAPLL_FRAC_11_4_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define NAPLL_FRAC_19_12_ Fld(8, 8, AC_FULLB1) //[15:8]
#define NAPLL_FRAC_23_20_ Fld(4, 16, AC_MSKB2) //[19:16]
#define FREQDIFF_3_0_ Fld(4, 20, AC_MSKB2)     //[23:20]
#define FREQDIFF_11_4_ Fld(8, 24, AC_FULLB3)   //[31:24]
#define RG_RX_APLL_REFDIV (RX_ADR + 0xC44)
#define FREQDIFF_19_12_ Fld(8, 0, AC_FULLB0) //[7:0]
#define FREQDIFF_27_20_ Fld(8, 8, AC_FULLB1) //[15:8]
#define FREQDIFF_29_28_ Fld(2, 16, AC_MSKB2) //[17:16]
#define REG_APLL_REFDIV Fld(6, 24, AC_MSKB3) //[29:24]
#define RG_RX_AVG_WINDOW (RX_ADR + 0xC48)
#define REG_APLL_POSTDIV1 Fld(3, 0, AC_MSKB0)       //[2:0]
#define REG_APLL_POSTDIV2 Fld(3, 4, AC_MSKB0)       //[6:4]
#define REG_APLL_PD Fld(1, 8, AC_MSKB1)		    //[8:8]
#define REG_APLL_DACPD Fld(1, 9, AC_MSKB1)	  //[9:9]
#define REG_APLL_DSMPD Fld(1, 10, AC_MSKB1)	 //[10:10]
#define REG_APLL_FOUTPOSTDIVPD Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_APLL_FOUT4PHASEPD Fld(1, 12, AC_MSKB1)  //[12:12]
#define REG_APLL_FOUTVCOPD Fld(1, 13, AC_MSKB1)     //[13:13]
#define REG_APLL_BYPASS Fld(1, 14, AC_MSKB1)	//[14:14]
#define NAPLL_LOCK Fld(1, 16, AC_MSKB2)		    //[16:16]
#define REG_AVG_WINDOW Fld(8, 24, AC_FULLB3)	//[31:24]
#define RG_AEC3_CTRL (RX_ADR + 0xC4C)
#define REG_DACR_MCLK_OUT_EN Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_DACR_REF_CLK_SEL Fld(2, 8, AC_MSKB1) //[9:8]
#define REG_AAC_CTRL4_0_ Fld(1, 16, AC_MSKB2)    //[16:16]
#define REG_AAC_CTRL4_1_ Fld(1, 17, AC_MSKB2)    //[17:17]
#define REG_AAC_CTRL4_2_ Fld(1, 18, AC_MSKB2)    //[18:18]
#define REG_AAC_CTRL4_3_ Fld(1, 19, AC_MSKB2)    //[19:19]
#define REG_AAC_CTRL4_4_ Fld(1, 20, AC_MSKB2)    //[20:20]
#define REG_AAC_CTRL4_5_ Fld(1, 21, AC_MSKB2)    //[21:21]
#define REG_AAC_CTRL4_6_ Fld(1, 22, AC_MSKB2)    //[22:22]
#define REG_AAC_CTRL4_7_ Fld(1, 23, AC_MSKB2)    //[23:23]
#define REG_AAC_CTRL3_0_ Fld(1, 24, AC_MSKB3)    //[24:24]
#define REG_AAC_CTRL3_1_ Fld(1, 25, AC_MSKB3)    //[25:25]
#define REG_AAC_CTRL3_2_ Fld(1, 26, AC_MSKB3)    //[26:26]
#define REG_AAC_CTRL3_3_ Fld(1, 27, AC_MSKB3)    //[27:27]
#define REG_AAC_CTRL3_4_ Fld(1, 28, AC_MSKB3)    //[28:28]
#define REG_AAC_CTRL3_5_ Fld(1, 29, AC_MSKB3)    //[29:29]
#define REG_AAC_CTRL3_6_ Fld(1, 30, AC_MSKB3)    //[30:30]
#define REG_AAC_CTRL3_7_ Fld(1, 31, AC_MSKB3)    //[31:31]
#define RG_RX_AEC_EN1 (RX_ADR + 0xC50)
#define REG_AAC_CTRL2_0_ Fld(1, 0, AC_MSKB0)    //[0:0]
#define REG_AAC_CTRL2_1_ Fld(1, 1, AC_MSKB0)    //[1:1]
#define REG_AAC_CTRL2_2_ Fld(1, 2, AC_MSKB0)    //[2:2]
#define REG_AAC_CTRL2_3_ Fld(1, 3, AC_MSKB0)    //[3:3]
#define REG_AAC_CTRL2_4_ Fld(1, 4, AC_MSKB0)    //[4:4]
#define REG_AAC_CTRL2_5_ Fld(1, 5, AC_MSKB0)    //[5:5]
#define REG_AAC_CTRL2_6_ Fld(1, 6, AC_MSKB0)    //[6:6]
#define REG_AAC_CTRL2_7_ Fld(1, 7, AC_MSKB0)    //[7:7]
#define REG_AAC_CTRL_0_ Fld(1, 8, AC_MSKB1)     //[8:8]
#define REG_AAC_CTRL_1_ Fld(1, 9, AC_MSKB1)     //[9:9]
#define REG_AAC_CTRL_2_ Fld(1, 10, AC_MSKB1)    //[10:10]
#define REG_AAC_CTRL_3_ Fld(1, 11, AC_MSKB1)    //[11:11]
#define REG_AAC_CTRL_4_ Fld(1, 12, AC_MSKB1)    //[12:12]
#define REG_AAC_CTRL_5_ Fld(1, 13, AC_MSKB1)    //[13:13]
#define REG_AAC_CTRL_6_ Fld(1, 14, AC_MSKB1)    //[14:14]
#define REG_AAC_CTRL_7_ Fld(1, 15, AC_MSKB1)    //[15:15]
#define REG_AAC_EN Fld(1, 16, AC_MSKB2)		//[16:16]
#define REG_AAC_ALL Fld(1, 17, AC_MSKB2)	//[17:17]
#define AAC_MUTE_STAT Fld(1, 19, AC_MSKB2)      //[19:19]
#define AUD_DIV_MIN Fld(1, 20, AC_MSKB2)	//[20:20]
#define REG_AAC_OUT_OFF_EN Fld(1, 21, AC_MSKB2) //[21:21]
#define REG_AAC_EXP_SEL Fld(1, 22, AC_MSKB2)    //[22:22]
#define REG_CTRL_ACR_EN Fld(1, 23, AC_MSKB2)    //[23:23]
#define REG_EXP_EN_7_0_ Fld(8, 24, AC_FULLB3)   //[31:24]
#define RG_AAC_CSC_ERR (RX_ADR + 0xC54)
#define REG_EXP_EN_15_8_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_EXP_EN_23_16_ Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_PSTOP_EN Fld(1, 16, AC_MSKB2)      //[16:16]
#define REG_PCLK_MAX Fld(7, 17, AC_MSKB2)      //[23:17]
#define REG_AAC_CSC_ERR Fld(5, 24, AC_MSKB3)   //[28:24]
#define RG_AAC_EXP_CAPT_M (RX_ADR + 0xC58)
#define REG_AAC_VSC_ERR Fld(4, 0, AC_MSKB0)	  //[3:0]
#define REG_AAC_ASC_ERR Fld(8, 8, AC_FULLB1)	 //[15:8]
#define REG_AAC_EXP_CAPT_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define REG_AAC_EXP_CAPT_15_8_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RG_ACRGCTRL0 (RX_ADR + 0xC5C)
#define REG_AAC_EXP_CAPT_23_16_ Fld(8, 0, AC_FULLB0) //[7:0]
#define REG_ACR_GEN_CTRL0 Fld(8, 8, AC_FULLB1)       //[15:8]
#define RG_RX_DEBUG_CLK_XPCNT (RX_ADR + 0xC60)
#define AAC_XCLK_IN_DEBUG_CLK_23_0_ Fld(24, 0, AC_MSKDW) //[23:0]
#define RX_HDCP1X_STATUS_WP_EN (RX_ADR + 0xE00)
#define FIFO_READY_WP_EN Fld(1, 0, AC_FULLB0)
#define RX_SHD_BKSV_4 (RX_ADR + 0xE04)
#define HDCP_BKSV1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define HDCP_BKSV2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define HDCP_BKSV3 Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_BKSV4 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_SHD_AKSV1 (RX_ADR + 0xE08)
#define HDCP_BKSV5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define RI0 Fld(8, 8, AC_FULLB1)	 //[15:8]
#define RI1 Fld(8, 16, AC_FULLB2)	//[23:16]
#define HDCP_AKSV1 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_SHD_AKSV5 (RX_ADR + 0xE0C)
#define HDCP_AKSV2 Fld(8, 0, AC_FULLB0)  //[7:0]
#define HDCP_AKSV3 Fld(8, 8, AC_FULLB1)  //[15:8]
#define HDCP_AKSV4 Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_AKSV5 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_SHD_AN4 (RX_ADR + 0xE10)
#define HDCP_AN1 Fld(8, 0, AC_FULLB0)  //[7:0]
#define HDCP_AN2 Fld(8, 8, AC_FULLB1)  //[15:8]
#define HDCP_AN3 Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_AN4 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_SHD_AN8 (RX_ADR + 0xE14)
#define HDCP_AN5 Fld(8, 0, AC_FULLB0)  //[7:0]
#define HDCP_AN6 Fld(8, 8, AC_FULLB1)  //[15:8]
#define HDCP_AN7 Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_AN8 Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_HDCP_DEBUG (RX_ADR + 0xE18)
#define REG_FAST Fld(1, 4, AC_MSKB0)	 //[4:4]
#define REG_FIFO_RDY Fld(1, 5, AC_MSKB0)     //[5:5]
#define REG_REPEATER Fld(1, 6, AC_MSKB0)     //[6:6]
#define REG_HDMI_CAPABLE Fld(1, 7, AC_MSKB0) //[7:7]
#define REG_DEV_CNT Fld(7, 8, AC_MSKB1)      //[14:8]
#define REG_DEV_EXCEED Fld(1, 15, AC_MSKB1)  //[15:15]
#define REG_DEPTH Fld(3, 16, AC_MSKB2)       //[18:16]
#define RPT_CASC_EXCEED Fld(1, 19, AC_MSKB2) //[19:19]
#define HDMI_MODE Fld(1, 20, AC_MSKB2)       //[20:20]
#define REG_BSTATUS Fld(3, 21, AC_MSKB2)     //[23:21]
#define REG_WR_DEBUG Fld(8, 24, AC_FULLB3)   //[31:24]
#define RX_SHA_LENGTH1 (RX_ADR + 0xE1C)
#define HDCP_SPHST Fld(4, 0, AC_MSKB0)		  //[3:0]
#define HDCP_AUTHENTICATED Fld(1, 4, AC_MSKB0)    //[4:4]
#define HDCP_DECRYPTING Fld(1, 5, AC_MSKB0)       //[5:5]
#define REG_SHA_LENGTH_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_KSV_FIFO (RX_ADR + 0xE20)
#define REG_SHA_LENGTH_9_8_ Fld(2, 0, AC_MSKB0) //[1:0]
#define RPT_V_RDY Fld(1, 8, AC_MSKB1)		//[8:8]
#define REG_SHA_MODE Fld(1, 10, AC_MSKB1)       //[10:10]
#define REG_KSV_FIFO_OUT Fld(8, 16, AC_FULLB2)  //[23:16]
#define HDCP_M0_3 (RX_ADR + 0xE24)
#define HDCP_M0_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define HDCP_M0_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define HDCP_M0_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_M0_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define HDCP_M0_7 (RX_ADR + 0xE28)
#define HDCP_M0_39_32_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define HDCP_M0_47_40_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define HDCP_M0_55_48_ Fld(8, 16, AC_FULLB2) //[23:16]
#define HDCP_M0_63_56_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_DS_BSTATUS2 (RX_ADR + 0xE2C)
#define REG_DS_DEV_CNT Fld(7, 0, AC_MSKB0)      //[6:0]
#define REG_DS_DEV_EXCEED Fld(1, 7, AC_MSKB0)   //[7:7]
#define REG_DS_DEPTH Fld(3, 8, AC_MSKB1)	//[10:8]
#define REG_DS_CASC_EXCEED Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_DS_HDMI_MODE Fld(1, 12, AC_MSKB1)   //[12:12]
#define REG_DS_BSTATUS Fld(3, 13, AC_MSKB1)     //[15:13]
#define RX_DS_M0_3 (RX_ADR + 0xE30)
#define REG_MO_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_MO_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_MO_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_MO_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_DS_M0_7 (RX_ADR + 0xE34)
#define REG_MO_39_32_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_MO_47_40_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_MO_55_48_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_MO_63_56_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_VH0_3 (RX_ADR + 0xE50)
#define REG_V_H0_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_V_H0_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_V_H0_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_V_H0_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]

// Page HDMI20_RX_MAC_9
#define RX_VH1_3 (RX_ADR + 0xE54)
#define REG_V_H1_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_V_H1_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_V_H1_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_V_H1_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_VH2_3 (RX_ADR + 0xE58)
#define REG_V_H2_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_V_H2_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_V_H2_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_V_H2_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_VH3_3 (RX_ADR + 0xE5C)
#define REG_V_H3_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_V_H3_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_V_H3_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_V_H3_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_VH4_3 (RX_ADR + 0xE60)
#define REG_V_H4_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_V_H4_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_V_H4_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_V_H4_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_EPCM (RX_ADR + 0xE4C)
#define MI2C_CMD_DONE Fld(1, 0, AC_MSKB0)   //[0:0]
#define OTP_BIST0_ERR Fld(1, 1, AC_MSKB0)   //[1:1]
#define MI2C_SDA_ERR Fld(1, 2, AC_MSKB0)    //[2:2]
#define MI2C_ACK_ERR Fld(1, 3, AC_MSKB0)    //[3:3]
#define OTP_DN_KSV Fld(1, 4, AC_MSKB0)      //[4:4]
#define OTP_BIST1_ERR Fld(1, 5, AC_MSKB0)   //[5:5]
#define OTP_BIST2_ERR Fld(1, 6, AC_MSKB0)   //[6:6]
#define OTP_UNLOCKED Fld(1, 7, AC_MSKB0)    //[7:7]
#define REG_EPCM Fld(5, 8, AC_MSKB1)	//[12:8]
#define REG_LD_KSV Fld(1, 13, AC_MSKB1)     //[13:13]
#define REG_KS_MASK Fld(16, 16, AC_FULLW32) //[31:16]
#define HDCP2_RX_ID_3 (RX_ADR + 0xF00)
#define RO_RCV_ID_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define RO_RCV_ID_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define RO_RCV_ID_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define RO_RCV_ID_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RX_HDCP2X_ECC_CTRL (RX_ADR + 0xF04)
#define RO_RCV_ID_39_32_ Fld(8, 0, AC_FULLB0)	//[7:0]
#define RI_REAUTH_REQ_CLR_OPTION Fld(1, 8, AC_MSKB1) //[8:8]
#define RI_RPT_READY_CLR_OPTION Fld(1, 9, AC_MSKB1)  //[9:9]
#define RI_MSG_SZ_CLR_OPTION Fld(1, 10, AC_MSKB1)    //[10:10]
#define RI_ECC_CHK_EN Fld(1, 16, AC_MSKB2)	   //[16:16]
#define RI_ECC_CHK_MODE Fld(2, 17, AC_MSKB2)	 //[18:17]
#define RI_ACCM_ERR_MANU_CLR Fld(1, 19, AC_MSKB2)    //[19:19]
#define RX_HDCP2X_ECC_CNT2CHK_1 (RX_ADR + 0xF08)
#define RI_CNT2CHK_ECC_7_0_ Fld(8, 0, AC_FULLB0) //[7:0]
#define RI_CNT2CHK_ECC_8_ Fld(1, 8, AC_MSKB1)    //[8:8]
#define RX_HDCP2X_ECC_ACCM_ERR_THR_2 (RX_ADR + 0xF0C)
#define RI_ACCM_ERR_THR_7_0_ Fld(8, 0, AC_FULLB0)   //[7:0]
#define RI_ACCM_ERR_THR_15_8_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define RI_ACCM_ERR_THR_20_16_ Fld(5, 16, AC_MSKB2) //[20:16]
#define RX_HDCP2X_ECC_NO_ERR_THR (RX_ADR + 0xF10)
#define RI_FRAME_ECC_ERR_THR_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define RI_FRAME_ECC_ERR_THR_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define RI_CONS_ECC_ERR_THR_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define RI_NO_ECC_THR_7_0_ Fld(8, 24, AC_FULLB3)	//[31:24]
#define RX_HDCP2X_ECC_GVN_FRM_ERR_THR_2 (RX_ADR + 0xF14)
#define RI_GIVEN_FRAME_7_0_ Fld(8, 0, AC_FULLB0)	   //[7:0]
#define RI_GIVEN_FRAME_ERR_THR_7_0_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define RI_GIVEN_FRAME_ERR_THR_15_8_ Fld(8, 16, AC_FULLB2) //[23:16]
#define RI_GIVEN_FRAME_ERR_THR_20_16_ Fld(5, 24, AC_MSKB3) //[28:24]
#define RX_HDCP2X_INTR_MASK (RX_ADR + 0xF18)
#define REG_ECC_OUT_OF_SYNC_INTR Fld(1, 0, AC_MSKB0) //[0:0]
#define REG_HDCP2X_INTR_MASK0 Fld(1, 8, AC_MSKB1)    //[8:8]
#define RX_HDCP2X_NVM_BIST_CTRL (RX_ADR + 0xF1C)
#define RI_HDCP2X_RINGOSC_BIST_START Fld(1, 0, AC_MSKB0) //[0:0]
#define RO_HDCP2X_RINGOSC_BIST_DONE Fld(1, 1, AC_MSKB0)  //[1:1]
#define RO_HDCP2X_RINGOSC_BIST_FAIL Fld(1, 2, AC_MSKB0)  //[2:2]
#define RI_HDCP2X_BIST_MODE Fld(1, 8, AC_MSKB1)		 //[8:8]
#define MBIST_FAIL_ROM32768X8 Fld(1, 16, AC_MSKB2)       //[16:16]
#define MBIST_FINISH_ROM32768X8 Fld(1, 17, AC_MSKB2)     //[17:17]
#define MBIST_FAIL_SPRAM16384X8 Fld(1, 18, AC_MSKB2)     //[18:18]
#define MBIST_FINISH_SPRAM16384X8 Fld(1, 19, AC_MSKB2)   //[19:19]
#define MBIST_FAIL_SPRAM1024X32 Fld(1, 20, AC_MSKB2)     //[20:20]
#define MBIST_FINISH_SPRAM1024X32 Fld(1, 21, AC_MSKB2)   //[21:21]
#define MBIST_FAIL_SPRAM256X8 Fld(1, 22, AC_MSKB2)       //[22:22]
#define MBIST_FINISH_SPRAM256X8 Fld(1, 23, AC_MSKB2)     //[23:23]
#define RI_HDCP2X_NVM_BIST_EN Fld(1, 24, AC_MSKB3)       //[24:24]
#define RI_HDCP2X_NVM_BIST_MODE Fld(4, 28, AC_MSKB3)     //[31:28]
#define RX_HDCP2X_NVM_BIST_STS (RX_ADR + 0xF20)
#define RO_HDCP2X_NVM_BIST_DONE Fld(4, 0, AC_MSKB0) //[3:0]
#define RO_HDCP2X_NVM_BIST_ERR Fld(4, 4, AC_MSKB0)  //[7:4]
#define RXHDCP2X_CMD_CTRL_2 (RX_ADR + 0xF80)
#define REG_HDCP2X_HDCPTX Fld(1, 0, AC_MSKB0)      //[0:0]
#define REG_HDCP2X_RI_REPEATER Fld(1, 1, AC_MSKB0) //[1:1]
#define REG_HDCP2X_HDMIMODE Fld(1, 2, AC_MSKB0)    //[2:2]
#define REG_HDCP2X_PRECOMPUTE Fld(1, 3, AC_MSKB0)  //[3:3]
#define REG_HDCP2X_STM_ID Fld(3, 4, AC_MSKB0)      //[6:4]
#define REG_HDCP2X_REAUTH_SW Fld(1, 8, AC_MSKB1)   //[8:8]
#define REG_HDCP2X_CTL3MSK Fld(1, 9, AC_MSKB1)     //[9:9]
#define REG_HDCP2X_REAUTH_MSK Fld(4, 12, AC_MSKB1) //[15:12]
#define REG_HDCP2X_CUPD_DONE Fld(1, 16, AC_MSKB2)  //[16:16]
#define REG_HDCP2X_CUPD_START Fld(1, 17, AC_MSKB2) //[17:17]
#define REG_HDCP2X_CPVER_3_0_ Fld(4, 20, AC_MSKB2) //[23:20]
#define RXHDCP2X_CMD_INTR1_MASK (RX_ADR + 0xF84)
#define REG_INTR0_SRC0 Fld(1, 0, AC_MSKB0)	  //[0:0]
#define REG_INTR0_SRC1 Fld(1, 1, AC_MSKB0)	  //[1:1]
#define REG_INTR0_SRC2 Fld(1, 2, AC_MSKB0)	  //[2:2]
#define REG_INTR0_SRC3 Fld(1, 3, AC_MSKB0)	  //[3:3]
#define REG_INTR0_SRC4 Fld(1, 4, AC_MSKB0)	  //[4:4]
#define REG_INTR0_SRC5 Fld(1, 5, AC_MSKB0)	  //[5:5]
#define REG_INTR0_SRC6 Fld(1, 6, AC_MSKB0)	  //[6:6]
#define REG_INTR0_SRC7 Fld(1, 7, AC_MSKB0)	  //[7:7]
#define REG_INTR0_MASK0 Fld(1, 8, AC_MSKB1)	 //[8:8]
#define REG_INTR0_MASK1 Fld(1, 9, AC_MSKB1)	 //[9:9]
#define REG_INTR0_MASK2 Fld(1, 10, AC_MSKB1)	//[10:10]
#define REG_INTR0_MASK3 Fld(1, 11, AC_MSKB1)	//[11:11]
#define REG_INTR0_MASK4 Fld(1, 12, AC_MSKB1)	//[12:12]
#define REG_INTR0_MASK5 Fld(1, 13, AC_MSKB1)	//[13:13]
#define REG_INTR0_MASK6 Fld(1, 14, AC_MSKB1)	//[14:14]
#define REG_INTR0_MASK7 Fld(1, 15, AC_MSKB1)	//[15:15]
#define REG_INTR1_SRC0 Fld(1, 16, AC_MSKB2)	 //[16:16]
#define REG_INTR1_SRC1 Fld(1, 17, AC_MSKB2)	 //[17:17]
#define REG_INTR1_SRC2 Fld(1, 18, AC_MSKB2)	 //[18:18]
#define REG_INTR1_SRC3 Fld(1, 19, AC_MSKB2)	 //[19:19]
#define REG_INTR1_SRC4 Fld(1, 20, AC_MSKB2)	 //[20:20]
#define REG_INTR1_SRC5 Fld(1, 21, AC_MSKB2)	 //[21:21]
#define REG_INTR1_SRC6 Fld(1, 22, AC_MSKB2)	 //[22:22]
#define REG_INTR1_SRC7 Fld(1, 23, AC_MSKB2)	 //[23:23]
#define REG_HDCP2X_INTR1_MASK0 Fld(1, 24, AC_MSKB3) //[24:24]
#define REG_HDCP2X_INTR1_MASK1 Fld(1, 25, AC_MSKB3) //[25:25]
#define REG_HDCP2X_INTR1_MASK2 Fld(1, 26, AC_MSKB3) //[26:26]
#define REG_HDCP2X_INTR1_MASK3 Fld(1, 27, AC_MSKB3) //[27:27]
#define REG_HDCP2X_INTR1_MASK4 Fld(1, 28, AC_MSKB3) //[28:28]
#define REG_HDCP2X_INTR1_MASK5 Fld(1, 29, AC_MSKB3) //[29:29]
#define REG_HDCP2X_INTR1_MASK6 Fld(1, 30, AC_MSKB3) //[30:30]
#define REG_HDCP2X_INTR1_MASK7 Fld(1, 31, AC_MSKB3) //[31:31]
#define RXHDCP2X_CMD_GEN_STATUS (RX_ADR + 0xF88)
#define REG_HDCP2X_AUTH_STAT_7_0_ Fld(8, 0, AC_FULLB0) //[7:0]
#define REG_HDCP2X_STATE_7_0_ Fld(8, 8, AC_FULLB1)     //[15:8]
#define REG_HDCP2X_PRG_SEL Fld(1, 16, AC_MSKB2)	//[16:16]
#define REG_HDCP2X_MODE_SEL Fld(1, 17, AC_MSKB2)       //[17:17]
#define REG_HDCP2X_RO_REPEATER Fld(1, 18, AC_MSKB2)    //[18:18]
#define RXHDCP2X_GPCTL (RX_ADR + 0xF8C)
#define REG_HDCP2X_CUPD_SIZE_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_CUPD_SIZE_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define RXHDCP2X_CMD_RPT_STM_CTR_3 (RX_ADR + 0xF90)
#define REG_HDCP2X_RPT_STM_CTR_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_HDCP2X_RPT_STM_CTR_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_HDCP2X_RPT_STM_CTR_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_RPT_STM_CTR_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_TP3 (RX_ADR + 0xF94)
#define REG_HDCP2X_TP0_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_TP1_7_0_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_HDCP2X_TP2_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_TP3_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_TP7 (RX_ADR + 0xF98)
#define REG_HDCP2X_TP4_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_TP5_7_0_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_HDCP2X_TP6_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_TP7_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_TP11 (RX_ADR + 0xF9C)
#define REG_HDCP2X_TP8_7_0_ Fld(8, 0, AC_FULLB0)   //[7:0]
#define REG_HDCP2X_TP9_7_0_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_HDCP2X_TP10_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_TP11_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_TP15 (RX_ADR + 0xFA0)
#define REG_HDCP2X_TP12_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_TP13_7_0_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_HDCP2X_TP14_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_TP15_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_GP_IN3 (RX_ADR + 0xFA4)
#define REG_HDCP2X_GP_IN0_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_GP_IN1_7_0_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_HDCP2X_GP_IN2_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_GP_IN3_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_GP_OUT3 (RX_ADR + 0xFA8)
#define REG_HDCP2X_GP_OUT0_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_GP_OUT1_7_0_ Fld(8, 8, AC_FULLB1)  //[15:8]
#define REG_HDCP2X_GP_OUT2_7_0_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_GP_OUT3_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_CMD_RX_ID_CORE_3 (RX_ADR + 0xFAC)
#define REG_HDCP2X_RCV_ID_CORE_7_0_ Fld(8, 0, AC_FULLB0)    //[7:0]
#define REG_HDCP2X_RCV_ID_CORE_15_8_ Fld(8, 8, AC_FULLB1)   //[15:8]
#define REG_HDCP2X_RCV_ID_CORE_23_16_ Fld(8, 16, AC_FULLB2) //[23:16]
#define REG_HDCP2X_RCV_ID_CORE_31_24_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_RPT_DEPTH (RX_ADR + 0xFB0)
#define REG_HDCP2X_RCV_ID_CORE_39_32_ Fld(8, 0, AC_FULLB0) //[7:0]
#define REG_HDCP2X_RPT_HDCP1DEV_DSTRM Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_HDCP2X_RPT_HDCP20RPT_DSTRM Fld(1, 9, AC_MSKB1) //[9:9]
#define REG_HDCP2X_RPT_MX_CASC_EXC Fld(1, 10, AC_MSKB1)    //[10:10]
#define REG_HDCP2X_RPT_MX_DEVS_EXC Fld(1, 11, AC_MSKB1)    //[11:11]
#define REG_HDCP2X_RPT_SMNG_K_7_0_ Fld(8, 16, AC_FULLB2)   //[23:16]
#define REG_HDCP2X_RPT_DEPTH_7_0_ Fld(8, 24, AC_FULLB3)    //[31:24]
#define RXHDCP2X_RX_SEQ_NUM_V_2 (RX_ADR + 0xFB4)
#define REG_HDCP2X_RPT_DEVCNT_7_0_ Fld(8, 0, AC_FULLB0)       //[7:0]
#define RGS_HDCP2X_RPT_SEQ_NUM_V_7TO0 Fld(8, 8, AC_FULLB1)    //[15:8]
#define RGS_HDCP2X_RPT_SEQ_NUM_V_15TO8 Fld(8, 16, AC_FULLB2)  //[23:16]
#define RGS_HDCP2X_RPT_SEQ_NUM_V_23TO16 Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_RX_SEQ_NUM_M_2 (RX_ADR + 0xFB8)
#define RGS_HDCP2X_RPT_SEQ_NUM_M_7TO0 Fld(8, 0, AC_FULLB0)    //[7:0]
#define RGS_HDCP2X_RPT_SEQ_NUM_M_15TO8 Fld(8, 8, AC_FULLB1)   //[15:8]
#define RGS_HDCP2X_RPT_SEQ_NUM_M_23TO16 Fld(8, 16, AC_FULLB2) //[23:16]
#define RXHDCP2X_IPT_CTR_15TO8 (RX_ADR + 0xFBC)
#define REG_HDCP2X_IPT_CTR_7_0_ Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_IPT_CTR_15_8_ Fld(8, 8, AC_FULLB1) //[15:8]
#define RXHDCP2X_CMD_INTR2_MASK (RX_ADR + 0xFC0)
#define REG_INTR2_SRC0 Fld(1, 0, AC_MSKB0)   //[0:0]
#define REG_INTR2_SRC1 Fld(1, 1, AC_MSKB0)   //[1:1]
#define REG_INTR2_SRC2 Fld(1, 2, AC_MSKB0)   //[2:2]
#define REG_INTR2_SRC3 Fld(1, 3, AC_MSKB0)   //[3:3]
#define REG_INTR2_SRC4 Fld(1, 4, AC_MSKB0)   //[4:4]
#define REG_INTR2_SRC5 Fld(1, 5, AC_MSKB0)   //[5:5]
#define REG_INTR2_SRC6 Fld(1, 6, AC_MSKB0)   //[6:6]
#define REG_INTR2_SRC7 Fld(1, 7, AC_MSKB0)   //[7:7]
#define REG_INTR2_MASK0 Fld(1, 8, AC_MSKB1)  //[8:8]
#define REG_INTR2_MASK1 Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_INTR2_MASK2 Fld(1, 10, AC_MSKB1) //[10:10]
#define REG_INTR2_MASK3 Fld(1, 11, AC_MSKB1) //[11:11]
#define REG_INTR2_MASK4 Fld(1, 12, AC_MSKB1) //[12:12]
#define REG_INTR2_MASK5 Fld(1, 13, AC_MSKB1) //[13:13]
#define REG_INTR2_MASK6 Fld(1, 14, AC_MSKB1) //[14:14]
#define REG_INTR2_MASK7 Fld(1, 15, AC_MSKB1) //[15:15]
#define RXHDCP2X_RX_RPT_RCVID_IN (RX_ADR + 0xFC4)
#define REGRX_HDCP2X_RPT_RCVID_WR Fld(1, 0, AC_MSKB0)	 //[0:0]
#define REGRX_HDCP2X_RPT_RCVID_WR_START Fld(1, 1, AC_MSKB0)   //[1:1]
#define REGRX_HDCP2X_RPT_RCVID_XFER_START Fld(1, 2, AC_MSKB0) //[2:2]
#define REGRX_HDCP2X_RPT_SMNG_RD Fld(1, 3, AC_MSKB0)	  //[3:3]
#define REGRX_HDCP2X_RPT_SMNG_RD_START Fld(1, 4, AC_MSKB0)    //[4:4]
#define REGRX_HDCP2X_RPT_RCVID_XFER_DONE Fld(1, 10, AC_MSKB1) //[10:10]
#define REGRX_HDCP2X_RPT_SMNG_OUT_7_0_ Fld(8, 16, AC_FULLB2)  //[23:16]
#define REGRX_HDCP2X_RPT_RCVID_IN Fld(8, 24, AC_FULLB3)       //[31:24]
#define RXHDCP2X_TX_RPT_RCVID_OUT (RX_ADR + 0xFC8)
#define REGTX_HDCP2X_RPT_RCVID_RD Fld(1, 0, AC_MSKB0)	 //[0:0]
#define REGTX_HDCP2X_RPT_RCVID_RD_START Fld(1, 1, AC_MSKB0)   //[1:1]
#define REGTX_HDCP2X_RPT_SMNG_XFER_START Fld(1, 2, AC_MSKB0)  //[2:2]
#define REGTX_HDCP2X_RPT_SMNG_WR Fld(1, 3, AC_MSKB0)	  //[3:3]
#define REGTX_HDCP2X_RPT_SMNG_WR_START Fld(1, 4, AC_MSKB0)    //[4:4]
#define REGTX_HDCP2X_RPT_SMNG_XFER_DONE Fld(1, 10, AC_MSKB1)  //[10:10]
#define REGTX_HDCP2X_RPT_SMNG_IN Fld(8, 16, AC_FULLB2)	//[23:16]
#define REGTX_HDCP2X_RPT_RCVID_OUT_7_0_ Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_RPT_DETAIL_EX (RX_ADR + 0xFCC)
#define REG_HDCP2X_RPT_HDCP1DEV_DSTRM_WP Fld(1, 0, AC_MSKB0)    //[0:0]
#define REG_HDCP2X_RPT_HDCP20RPT_DSTRM_WP Fld(1, 1, AC_MSKB0)   //[1:1]
#define REG_HDCP2X_RPT_MX_CASC_EXC_WP Fld(1, 2, AC_MSKB0)       //[2:2]
#define REG_HDCP2X_RPT_MX_DEVS_EXC_WP Fld(1, 3, AC_MSKB0)       //[3:3]
#define REG_HDCP2X_RPT_SMNG_K_WP Fld(1, 4, AC_MSKB0)		//[4:4]
#define REG_HDCP2X_RPT_DEPTH_WP Fld(1, 5, AC_MSKB0)		//[5:5]
#define REG_HDCP2X_RPT_DEVCNT_WP Fld(1, 6, AC_MSKB0)		//[6:6]
#define REG_HDCP2X_RPT_SEQ_NUM_V_7TO0_WP Fld(1, 7, AC_MSKB0)    //[7:7]
#define REG_HDCP2X_RPT_SEQ_NUM_V_15TO8_WP Fld(1, 8, AC_MSKB1)   //[8:8]
#define REG_HDCP2X_RPT_SEQ_NUM_V_23TO16_WP Fld(1, 9, AC_MSKB1)  //[9:9]
#define REG_HDCP2X_RPT_SEQ_NUM_M_7TO0_WP Fld(1, 10, AC_MSKB1)   //[10:10]
#define REG_HDCP2X_RPT_SEQ_NUM_M_15TO8_WP Fld(1, 11, AC_MSKB1)  //[11:11]
#define REG_HDCP2X_RPT_SEQ_NUM_M_23TO16_WP Fld(1, 12, AC_MSKB1) //[12:12]
#define RX_HDCP2X_RPT_SMNG_K_EX (RX_ADR + 0xFD0)
#define REG_HDCP2X_SMNG_K Fld(8, 0, AC_FULLB0)		    //[7:0]
#define REG_HDCP2X_RPT_DEPTH Fld(8, 8, AC_FULLB1)	   //[15:8]
#define REG_HDCP2X_RPT_DEVCNT Fld(8, 16, AC_FULLB2)	 //[23:16]
#define REG_HDCP2X_RPT_SEQ_NUM_V_7TO0 Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP2X_RX_SEQ_NUM_V_1_EX (RX_ADR + 0xFD4)
#define REG_HDCP2X_RPT_SEQ_NUM_V_15TO8 Fld(8, 0, AC_FULLB0)  //[7:0]
#define REG_HDCP2X_RPT_SEQ_NUM_V_23TO16 Fld(8, 8, AC_FULLB1) //[15:8]
#define REG_HDCP2X_RPT_SEQ_NUM_M_7TO0 Fld(8, 16, AC_FULLB2)  //[23:16]
#define REG_HDCP2X_RPT_SEQ_NUM_M_15TO8 Fld(8, 24, AC_FULLB3) //[31:24]
#define RXHDCP3X_RX_SEQ_NUM_M_2_EX (RX_ADR + 0xFD8)
#define REG_HDCP2X_RPT_SEQ_NUM_M_23TO16 Fld(8, 0, AC_FULLB0) //[7:0]

/*** audio pll ***/
#define HDMIRX_APLL_CON0 (AP_ADR + 0x08E0)
#define RG_HDMIRX_APLL_CK_EN Fld(1, 20, AC_MSKB2)//[20:20]
#define RG_HDMIRX_APLL_DIV3_EN Fld(1, 19, AC_MSKB2)//[19:19]
#define RG_HDMIRX_APLL_RESERVE Fld(2, 17, AC_MSKB2)//[18:17]
#define RG_HDMIRX_APLL_BW Fld(3, 14, AC_MSKW21)//[16:14]
#define RG_HDMIRX_APLL_SDM_FRA_EN Fld(1, 13, AC_MSKB1)//[13:13]
#define RG_HDMIRX_APLL_GLITCH_FREE_EN Fld(1, 12, AC_MSKB1)//[12:12]
#define RG_HDMIRX_APLL_PREDIV Fld(2, 10, AC_MSKB1)//[11:10]
#define RG_HDMIRX_APLL_EN Fld(1, 9, AC_MSKB1)//[9:9]
#define RG_HDMIRX_APLL_CK_PROC_EN Fld(1, 8, AC_MSKB1)//[8:8]
#define RG_HDMIRX_APLL_CKDIV_EN Fld(1, 7, AC_MSKB0)//[7:7]
#define RG_HDMIRX_APLL_CKDIV Fld(4, 0, AC_MSKB0)//[3:0]
#define HDMIRX_APLL_CON1 (AP_ADR + 0x08E4)
#define RG_HDMIRX_APLL_OPP_CK_EN Fld(1, 2, AC_MSKB0)//[2:2]
#define RG_HDMIRX_APLL_OPP_CK_VPROC_EN Fld(1, 1, AC_MSKB0)//[1:1]
#define RG_HDMIRX_APLL_OPP_CKDIV_EN Fld(1, 0, AC_MSKB0)//[0:0]
#define HDMIRX_APLL_CON2 (AP_ADR + 0x08E8)
#define RG_HDMIRX_APLL_SDM_PCW_CHG Fld(1, 31, AC_MSKB3)//[31:31]
#define RG_HDMIRX_APLL_POSDIV Fld(3, 24, AC_MSKB3)//[26:24]
#define HDMIRX_APLL_CON3 (AP_ADR + 0x08EC)
#define RG_HDMIRX_APLL_SDM_PCW Fld(32, 0, AC_FULLDW)//[31:0]
#define HDMIRX_APLL_CON4 (AP_ADR + 0x08F0)
#define RG_HDMIRX_APLL_SDM_PCW_RO Fld(32, 0, AC_FULLDW)//[31:0]
#define HDMIRX_APLL_CON5 (AP_ADR + 0x0DD4)
#define RG_HDMIRX_APLL_SDM_PWR_ACK Fld(1, 31, AC_MSKB3)//[31:31]
#define RG_HDMIRX_APLL_SDM_ISO_EN Fld(1, 1, AC_MSKB0)//[1:1]
#define RG_HDMIRX_APLL_SDM_PWR_ON Fld(1, 0, AC_MSKB0)//[0:0]

/* edid */
#define EDID_DEV0 (E_ADR + 0x000)
#define FLD_EDID2_DEVICE_ADDR0 Fld(7, 1, AC_MSKB0)	//[7:1]
#define FLD_EDID2_SEGMENT_READ_CMD0 Fld(8, 8, AC_FULLB1) //[15:8]
#define FLD_EDID2_EDID0_DIS Fld(1, 16, AC_MSKB2)	  //[16:16]
#define FLD_EDID2_DEGLITCH0_EN Fld(1, 17, AC_MSKB2)       //[17:17]
#define FLD_EDID2_SCL_DE_CNT0 Fld(4, 20, AC_MSKB2)	//[23:20]
#define FLD_EDID2_SDA_DE_CNT0 Fld(4, 24, AC_MSKB3)	//[27:24]
#define FLD_EDID2_SW_RST0 Fld(1, 31, AC_MSKB3)		  //[31:31]
#define EDID_DEV1 (E_ADR + 0x004)
#define FLD_EDID2_DEVICE_ADDR1 Fld(7, 1, AC_MSKB0)	//[7:1]
#define FLD_EDID2_SEGMENT_READ_CMD1 Fld(8, 8, AC_FULLB1) //[15:8]
#define FLD_EDID2_EDID1_DIS Fld(1, 16, AC_MSKB2)	  //[16:16]
#define FLD_EDID2_DEGLITCH1_EN Fld(1, 17, AC_MSKB2)       //[17:17]
#define FLD_EDID2_SCL_DE_CNT1 Fld(4, 20, AC_MSKB2)	//[23:20]
#define FLD_EDID2_SDA_DE_CNT1 Fld(4, 24, AC_MSKB3)	//[27:24]
#define FLD_EDID2_SW_RST1 Fld(1, 31, AC_MSKB3)		  //[31:31]
#define EDID_DEV2 (E_ADR + 0x008)
#define FLD_EDID2_DEVICE_ADDR2 Fld(7, 1, AC_MSKB0)	//[7:1]
#define FLD_EDID2_SEGMENT_READ_CMD2 Fld(8, 8, AC_FULLB1) //[15:8]
#define FLD_EDID2_EDID2_DIS Fld(1, 16, AC_MSKB2)	  //[16:16]
#define FLD_EDID2_DEGLITCH2_EN Fld(1, 17, AC_MSKB2)       //[17:17]
#define FLD_EDID2_SCL_DE_CNT2 Fld(4, 20, AC_MSKB2)	//[23:20]
#define FLD_EDID2_SDA_DE_CNT2 Fld(4, 24, AC_MSKB3)	//[27:24]
#define FLD_EDID2_SW_RST2 Fld(1, 31, AC_MSKB3)		  //[31:31]
#define EDID_DEV3 (E_ADR + 0x00C)
#define FLD_EDID2_DEVICE_ADDR3 Fld(7, 1, AC_MSKB0)	//[7:1]
#define FLD_EDID2_SEGMENT_READ_CMD3 Fld(8, 8, AC_FULLB1) //[15:8]
#define FLD_EDID2_EDID3_DIS Fld(1, 16, AC_MSKB2)	  //[16:16]
#define FLD_EDID2_DEGLITCH3_EN Fld(1, 17, AC_MSKB2)       //[17:17]
#define FLD_EDID2_SCL_DE_CNT3 Fld(4, 20, AC_MSKB2)	//[23:20]
#define FLD_EDID2_SDA_DE_CNT3 Fld(4, 24, AC_MSKB3)	//[27:24]
#define FLD_EDID2_SW_RST3 Fld(1, 31, AC_MSKB3)		  //[31:31]
#define EDID_CTL1 (E_ADR + 0x010)
#define FLD_EDID2_CHKSUM1 Fld(8, 0, AC_FULLB0)      //[7:0]
#define FLD_EDID2_OFFSET1 Fld(8, 8, AC_FULLB1)      //[15:8]
#define FLD_EDID2_PHY_ADDR1 Fld(16, 16, AC_FULLW32) //[31:16]
#define EDID_CTL2 (E_ADR + 0x014)
#define FLD_EDID2_CHKSUM2 Fld(8, 0, AC_FULLB0)      //[7:0]
#define FLD_EDID2_OFFSET2 Fld(8, 8, AC_FULLB1)      //[15:8]
#define FLD_EDID2_PHY_ADDR2 Fld(16, 16, AC_FULLW32) //[31:16]
#define EDID_CTL3 (E_ADR + 0x018)
#define FLD_EDID2_CHKSUM3 Fld(8, 0, AC_FULLB0)      //[7:0]
#define FLD_EDID2_OFFSET3 Fld(8, 8, AC_FULLB1)      //[15:8]
#define FLD_EDID2_PHY_ADDR3 Fld(16, 16, AC_FULLW32) //[31:16]
#define EDID_ADDR (E_ADR + 0x01C)
#define FLD_EDID2_EDID_ADDR Fld(9, 0, AC_MSKW10) //[8:0]
#define FLD_EDID2_ADDR_FIX Fld(1, 9, AC_MSKB1)   //[9:9]
#define EDID_DATA (E_ADR + 0x020)
#define FLD_EDID2_EDID_DATA Fld(8, 0, AC_FULLB0) //[7:0]
#define EDID_SDA_SEL (E_ADR + 0x024)
#define FLD_EDID2_START_ENABLE Fld(1, 0, AC_MSKB0) //[0:0]
#define FLD_EDID2_STOP_ENABLE Fld(1, 1, AC_MSKB0)  //[1:1]
#define HDMI_EDID_DET (E_ADR + 0x028)
#define FLD_EDID2_DEV0 Fld(7, 1, AC_MSKB0)  //[7:1]
#define FLD_EDID2_DEV1 Fld(7, 9, AC_MSKB1)  //[15:9]
#define FLD_EDID2_DEV2 Fld(7, 17, AC_MSKB2) //[23:17]
#define FLD_EDID2_DEV3 Fld(7, 25, AC_MSKB3) //[31:25]
#define HDMI_EDID_DET_INTSTA (E_ADR + 0x02C)
#define FLD_EDID2_DEV0_DET_INT Fld(1, 0, AC_MSKB0) //[0:0]
#define FLD_EDID2_DEV1_DET_INT Fld(1, 1, AC_MSKB0) //[1:1]
#define FLD_EDID2_DEV2_DET_INT Fld(1, 2, AC_MSKB0) //[2:2]
#define FLD_EDID2_DEV3_DET_INT Fld(1, 3, AC_MSKB0) //[3:3]
#define HDMI_EDID_DET_INTEN (E_ADR + 0x030)
#define FLD_EDID2_DEV0_DET_INTEN Fld(1, 0, AC_MSKB0) //[0:0]
#define FLD_EDID2_DEV1_DET_INTEN Fld(1, 1, AC_MSKB0) //[1:1]
#define FLD_EDID2_DEV2_DET_INTEN Fld(1, 2, AC_MSKB0) //[2:2]
#define FLD_EDID2_DEV3_DET_INTEN Fld(1, 3, AC_MSKB0) //[3:3]
#define HDMI_EDID_DET_INTCLR (E_ADR + 0x034)
#define FLD_EDID2_DEV0_DET_INTCLR Fld(1, 0, AC_MSKB0) //[0:0]
#define FLD_EDID2_DEV1_DET_INTCLR Fld(1, 1, AC_MSKB0) //[1:1]
#define FLD_EDID2_DEV2_DET_INTCLR Fld(1, 2, AC_MSKB0) //[2:2]
#define FLD_EDID2_DEV3_DET_INTCLR Fld(1, 3, AC_MSKB0) //[3:3]
#define EDDC_DEV0 (E_ADR + 0x038)
#define FLD_EDID2_SGMENT_POINT_SW0 Fld(8, 0, AC_FULLB0)		 //[7:0]
#define FLD_EDID2_SGMENT_LAST_ACTIVE0 Fld(1, 8, AC_MSKB1)	//[8:8]
#define FLD_EDID2_SIF_REQUEST0 Fld(1, 9, AC_MSKB1)		 //[9:9]
#define FLD_EDID2_SDEN_SEL0 Fld(2, 10, AC_MSKB1)		 //[11:10]
#define FLD_EDID2_AUTO_INCREAMENT_EN0 Fld(1, 12, AC_MSKB1)       //[12:12]
#define FLD_EDID2_EDDC_FEATURE_EN0 Fld(1, 13, AC_MSKB1)		 //[13:13]
#define FLD_EDID2_SGMT_IDLE_RST_EN0 Fld(1, 14, AC_MSKB1)	 //[14:14]
#define FLD_EDID2_SIF_START_SET_EN0 Fld(1, 15, AC_MSKB1)	 //[15:15]
#define FLD_EDID2_SEGMENT_POINT_RECEIVED0 Fld(8, 16, AC_FULLB2) //[23:16]
#define FLD_EDID2_SEGMENT_DECODE_EN0 Fld(1, 24, AC_MSKB3)       //[24:24]
#define EDDC_DEV1 (E_ADR + 0x03C)
#define FLD_EDID2_SGMENT_POINT_SW1 Fld(8, 0, AC_FULLB0)		 //[7:0]
#define FLD_EDID2_SGMENT_LAST_ACTIVE1 Fld(1, 8, AC_MSKB1)	//[8:8]
#define FLD_EDID2_SIF_REQUEST1 Fld(1, 9, AC_MSKB1)		 //[9:9]
#define FLD_EDID2_SDEN_SEL1 Fld(2, 10, AC_MSKB1)		 //[11:10]
#define FLD_EDID2_AUTO_INCREAMENT_EN1 Fld(1, 12, AC_MSKB1)       //[12:12]
#define FLD_EDID2_EDDC_FEATURE_EN1 Fld(1, 13, AC_MSKB1)		 //[13:13]
#define FLD_EDID2_SGMT_IDLE_RST_EN1 Fld(1, 14, AC_MSKB1)	 //[14:14]
#define FLD_EDID2_SIF_START_SET_EN1 Fld(1, 15, AC_MSKB1)	 //[15:15]
#define FLD_EDID2_SEGMENT_POINT_RECEIVED1 Fld(8, 16, AC_FULLB2) //[23:16]
#define FLD_EDID2_SEGMENT_DECODE_EN1 Fld(1, 24, AC_MSKB3)       //[24:24]
#define EDDC_DEV2 (E_ADR + 0x040)
#define FLD_EDID2_SGMENT_POINT_SW2 Fld(8, 0, AC_FULLB0)		 //[7:0]
#define FLD_EDID2_SGMENT_LAST_ACTIVE2 Fld(1, 8, AC_MSKB1)	//[8:8]
#define FLD_EDID2_SIF_REQUEST2 Fld(1, 9, AC_MSKB1)		 //[9:9]
#define FLD_EDID2_SDEN_SEL2 Fld(2, 10, AC_MSKB1)		 //[11:10]
#define FLD_EDID2_AUTO_INCREAMENT_EN2 Fld(1, 12, AC_MSKB1)       //[12:12]
#define FLD_EDID2_EDDC_FEATURE_EN2 Fld(1, 13, AC_MSKB1)		 //[13:13]
#define FLD_EDID2_SGMT_IDLE_RST_EN2 Fld(1, 14, AC_MSKB1)	 //[14:14]
#define FLD_EDID2_SIF_START_SET_EN2 Fld(1, 15, AC_MSKB1)	 //[15:15]
#define FLD_EDID2_SEGMENT_POINT_RECEIVED2 Fld(8, 16, AC_FULLB2) //[23:16]
#define FLD_EDID2_SEGMENT_DECODE_EN2 Fld(1, 24, AC_MSKB3)       //[24:24]
#define EDDC_DEV3 (E_ADR + 0x044)
#define FLD_EDID2_SGMENT_POINT_SW3 Fld(8, 0, AC_FULLB0)		 //[7:0]
#define FLD_EDID2_SGMENT_LAST_ACTIVE3 Fld(1, 8, AC_MSKB1)	//[8:8]
#define FLD_EDID2_SIF_REQUEST3 Fld(1, 9, AC_MSKB1)		 //[9:9]
#define FLD_EDID2_SDEN_SEL3 Fld(2, 10, AC_MSKB1)		 //[11:10]
#define FLD_EDID2_AUTO_INCREAMENT_EN3 Fld(1, 12, AC_MSKB1)       //[12:12]
#define FLD_EDID2_EDDC_FEATURE_EN3 Fld(1, 13, AC_MSKB1)		 //[13:13]
#define FLD_EDID2_SGMT_IDLE_RST_EN3 Fld(1, 14, AC_MSKB1)	 //[14:14]
#define FLD_EDID2_SIF_START_SET_EN3 Fld(1, 15, AC_MSKB1)	 //[15:15]
#define FLD_EDID2_SEGMENT_POINT_RECEIVED3 Fld(8, 16, AC_FULLB2) //[23:16]
#define FLD_EDID2_SEGMENT_DECODE_EN3 Fld(1, 24, AC_MSKB3)       //[24:24]

/*** SCDC ***/
#define SCDC_REG00 (S_ADR + 0x000)
#define RGS_DDC_EN Fld(1, 0, AC_MSKB0)		       //[0:0]
#define RGS_DDCS_RST_B Fld(1, 1, AC_MSKB0)	     //[1:1]
#define RGS_RGS_SCDC_RST_B Fld(1, 2, AC_MSKB0)	 //[2:2]
#define RGS_500NS_CALIB_CNT_W Fld(1, 8, AC_MSKB1)      //[8:8]
#define RGS_4P7US_IN_500NS_CNT_W Fld(1, 9, AC_MSKB1)   //[9:9]
#define RGS_1MS_IN_500NS_CNT_W Fld(1, 10, AC_MSKB1)    //[10:10]
#define RGS_20MS_IN_1MS_CNT_W Fld(1, 11, AC_MSKB1)     //[11:11]
#define RGS_100MS_IN_1MS_CNT_W Fld(1, 12, AC_MSKB1)    //[12:12]
#define RGS_1S_IN_20MS_CNT_W Fld(1, 13, AC_MSKB1)      //[13:13]
#define RGS_CHR_ERRCNT_MAX_W Fld(1, 14, AC_MSKB1)      //[14:14]
#define RGS_RRGEN_FSM_SET Fld(1, 16, AC_MSKB2)	 //[16:16]
#define RGS_RRGEN_FSM_STATE Fld(3, 17, AC_MSKB2)       //[19:17]
#define RGS_SCDCS_MFG_SPFC_SW_SEL Fld(1, 20, AC_MSKB2) //[20:20]
#define SCDC_REG01 (S_ADR + 0x004)
#define RGS_500NS_CALIB_CNT Fld(8, 0, AC_FULLB0)    //[7:0]
#define RGS_4P7US_IN_500NS_CNT Fld(8, 8, AC_FULLB1) //[15:8]
#define RGS_20MS_IN_1MS_CNT Fld(8, 16, AC_FULLB2)   //[23:16]
#define RGS_100MS_IN_1MS_CNT Fld(8, 24, AC_FULLB3)  //[31:24]
#define SCDC_REG02 (S_ADR + 0x008)
#define RGS_1MS_IN_500NS_CNT Fld(11, 0, AC_MSKW10) //[10:0]
#define RGS_CHR_ERRCNT_MAX Fld(15, 16, AC_MSKW32)  //[30:16]
#define SCDC_REG03 (S_ADR + 0x00C)
#define RGS_1S_IN_20MS_CNT Fld(8, 0, AC_FULLB0)  //[7:0]
#define RGS_SCDCS_MFG_OUI1 Fld(8, 8, AC_FULLB1)  //[15:8]
#define RGS_SCDCS_MFG_OUI2 Fld(8, 16, AC_FULLB2) //[23:16]
#define RGS_SCDCS_MFG_OUI3 Fld(8, 24, AC_FULLB3) //[31:24]
#define SCDC_REG04 (S_ADR + 0x010)
#define RGS_SCDCS_DEV_ID_31_0_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG05 (S_ADR + 0x014)
#define RGS_SCDCS_DEV_ID_63_32_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG06 (S_ADR + 0x018)
#define RGS_SCDCS_HW_MNR_REV Fld(4, 0, AC_MSKB0)   //[3:0]
#define RGS_SCDCS_HW_MJR_REV Fld(4, 4, AC_MSKB0)   //[7:4]
#define RGS_SCDCS_SW_MJR_REV Fld(8, 8, AC_FULLB1)  //[15:8]
#define RGS_SCDCS_SW_MNR_REV Fld(8, 16, AC_FULLB2) //[23:16]
#define SCDC_REG07 (S_ADR + 0x01C)
#define RGS_SCDCS_MFCTR_SPCF_31_0_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG08 (S_ADR + 0x020)
#define RGS_SCDCS_MFCTR_SPCF_63_32_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG09 (S_ADR + 0x024)
#define RGS_SCDCS_MFCTR_SPCF_95_64_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0A (S_ADR + 0x028)
#define RGS_SCDCS_MFCTR_SPCF_127_96_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0B (S_ADR + 0x02C)
#define RGS_SCDCS_MFCTR_SPCF_159_128_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0C (S_ADR + 0x030)
#define RGS_SCDCS_MFCTR_SPCF_191_160_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0D (S_ADR + 0x034)
#define RGS_SCDCS_MFCTR_SPCF_223_192_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0E (S_ADR + 0x038)
#define RGS_SCDCS_MFCTR_SPCF_255_224_ Fld(32, 0, AC_FULLDW) //[31:0]
#define SCDC_REG0F (S_ADR + 0x03C)
#define RGS_SCDCS_MFCTR_SPCF_271_256_ Fld(16, 0, AC_FULLW10) //[15:0]
#define SCDC_REG10 (S_ADR + 0x040)
#define RGS_SCL_DE_CNT Fld(8, 0, AC_FULLB0)     //[7:0]
#define RGS_SDA_DE_CNT Fld(8, 8, AC_FULLB1)     //[15:8]
#define RGS_SCL_SEL Fld(1, 16, AC_MSKB2)	//[16:16]
#define RGS_SCLN_SEL Fld(1, 17, AC_MSKB2)       //[17:17]
#define RGS_PWR5V Fld(1, 18, AC_MSKB2)		//[18:18]
#define RGS_HPD_IN Fld(1, 19, AC_MSKB2)		//[19:19]
#define RGS_RETENTION_EN Fld(1, 20, AC_MSKB2)   //[20:20]
#define RGS_SCDCS_DISABLED Fld(1, 21, AC_MSKB2) //[21:21]
#define RGS_SCRAMBLE_ON Fld(1, 22, AC_MSKB2)    //[22:22]
#define RGS_HDMI2_ON Fld(1, 23, AC_MSKB2)       //[23:23]
#define RGS_SW_HDMI2_SEL Fld(1, 24, AC_MSKB3)   //[24:24]
#define SCDC_REG11 (S_ADR + 0x044)
#define SCDCS_SRC_VER Fld(8, 0, AC_FULLB0)	 //[7:0]
#define CHR_ERRDET_CNT_CLR Fld(3, 8, AC_MSKB1)     //[10:8]
#define CH_LOCKED_CLR Fld(3, 11, AC_MSKB1)	 //[13:11]
#define SCDCS_STS_UPD Fld(1, 14, AC_MSKB1)	 //[14:14]
#define SCDCS_CED_UPD Fld(1, 15, AC_MSKB1)	 //[15:15]
#define SCDCS_RR_TEST Fld(1, 16, AC_MSKB2)	 //[16:16]
#define SCDCS_SCRBL_STATUS Fld(1, 17, AC_MSKB2)    //[17:17]
#define SCDCS_CLK_DETECTED Fld(1, 18, AC_MSKB2)    //[18:18]
#define SCDCS_CH0_LOCKED Fld(1, 19, AC_MSKB2)      //[19:19]
#define SCDCS_CH1_LOCKED Fld(1, 20, AC_MSKB2)      //[20:20]
#define SCDCS_CH2_LOCKED Fld(1, 21, AC_MSKB2)      //[21:21]
#define SCDCS_RR_ENABLE Fld(1, 22, AC_MSKB2)       //[22:22]
#define SCDCS_SCRBL_ENABLE Fld(1, 23, AC_MSKB2)    //[23:23]
#define SCDCS_TMDS_BCLK_RATIO Fld(1, 24, AC_MSKB3) //[24:24]
#define SCDC_REG12 (S_ADR + 0x048)
#define SCDCS_CH0_CED_CNT Fld(15, 0, AC_MSKW10)    //[14:0]
#define SCDCS_CH0_VALID Fld(1, 15, AC_MSKB1)       //[15:15]
#define SCDCS_TEST_RD_REQ_DLY Fld(7, 16, AC_MSKB2) //[22:16]
#define SCDCS_TEST_RD_REQ Fld(1, 23, AC_MSKB2)     //[23:23]
#define SCDCS_CED_CHKSUM Fld(8, 24, AC_FULLB3)     //[31:24]
#define SCDC_REG13 (S_ADR + 0x04C)
#define SCDCS_CH1_CED_CNT Fld(15, 0, AC_MSKW10)  //[14:0]
#define SCDCS_CH1_VALID Fld(1, 15, AC_MSKB1)     //[15:15]
#define SCDCS_CH2_CED_CNT Fld(15, 16, AC_MSKW32) //[30:16]
#define SCDCS_CH2_VALID Fld(1, 31, AC_MSKB3)     //[31:31]

/* vdout anaif */
#define EARC_RX_CFG_2 (V_ADR + 0x0c4)
#define RG_HDMIRX_PCW_SEL Fld(1, 2, AC_MSKW10)
#define RG_SW_HPD_ON Fld(1, 8, AC_MSKW10)

/* HDCP */
#define HDMI20_PROM_ADDR (RX_ADR + 0x3e0)
#define HDMI20_PROM_DATA (RX_ADR + 0x3e4)
#define HDMI20_PRAM_ADDR (RX_ADR + 0x3d8)
#define HDMI20_PRAM_DATA (RX_ADR + 0x3dc)
#define HDCP22_KEY0_ADDR (RX_ADR + 0x3c0)
#define HDCP22_KEY0_DATA (RX_ADR + 0x3c4)
#define HDCP22_KEY1_ADDR (RX_ADR + 0x3d0)
#define HDCP22_KEY1_DATA (RX_ADR + 0x3d4)
#define HDCP14_KEY_ADDR (RX_ADR + 0x3c8)
#define HDCP14_KEY_DATA (RX_ADR + 0x3cc)

#endif
